1722123625
d628c82553df1bbda1afd58ca6c39cfa-phpdoc%3A6437012f96d09219b931c47a5a64cec5-af0c9ef971ba04368c6756a13ea9d3dd
s:57960:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjg6IkRlbW8ucGhwIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MTp7czoxNzoiXGdpdGh1c2JhbmRcVGVzdHMiO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czoxNzoiXGdpdGh1c2JhbmRcVGVzdHMiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czo1OiJUZXN0cyI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YToxOntzOjIyOiJcZ2l0aHVzYmFuZFxUZXN0c1xEZW1vIjtPOjM1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXyI6MTU6e3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBpbXBsZW1lbnRzIjthOjA6e31zOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AY29uc3RhbnRzIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcHJvcGVydGllcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAG1ldGhvZHMiO2E6Nzp7czozNzoiXGdpdGh1c2JhbmRcVGVzdHNcRGVtbzo6X19jb25zdHJ1Y3QoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjE3O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjI4Nzt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToyMDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTozNTg7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAByZXR1cm5UeXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZxc2VuIjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Mzc6IlxnaXRodXNiYW5kXFRlc3RzXERlbW86Ol9fY29uc3RydWN0KCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMToiX19jb25zdHJ1Y3QiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czozODoiXGdpdGh1c2JhbmRcVGVzdHNcRGVtbzo6dGVzdF9zdWNjZXNzKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NDoiZGF0YSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7czoyOiJbXSI7czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjIyO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjM2NTt9czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGVuZExvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aToxMzM7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6NDkxNjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozODoiXGdpdGh1c2JhbmRcVGVzdHNcRGVtbzo6dGVzdF9zdWNjZXNzKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMjoidGVzdF9zdWNjZXNzIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NDA6IlxnaXRodXNiYW5kXFRlc3RzXERlbW86OnRlc3Rfc3VjY2Vzc18yKCkiO086MzU6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kIjoxMzp7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFyZ3VtZW50cyI7YToxOntpOjA7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NDoiZGF0YSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7czoyOiJbXSI7czo1MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAYnlSZWZlcmVuY2UiO2I6MDtzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABpc1ZhcmlhZGljIjtiOjA7fX1zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjEzNTtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTo0OTIzO31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjI1NDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aTo5Njg0O31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjQwOiJcZ2l0aHVzYmFuZFxUZXN0c1xEZW1vOjp0ZXN0X3N1Y2Nlc3NfMigpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTQ6InRlc3Rfc3VjY2Vzc18yIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6MzY6IlxnaXRodXNiYW5kXFRlc3RzXERlbW86OnRlc3RfZXJyb3IoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo0OiJkYXRhIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtzOjI6IltdIjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6MjU2O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjk2OTE7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Mzc3O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjE0NzcxO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjM2OiJcZ2l0aHVzYmFuZFxUZXN0c1xEZW1vOjp0ZXN0X2Vycm9yKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMDoidGVzdF9lcnJvciI7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZAB2aXNpYmlsaXR5IjtPOjM5OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkiOjE6e3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXFZpc2liaWxpdHkAdmlzaWJpbGl0eSI7czo2OiJwdWJsaWMiO31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZG9jQmxvY2siO047czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGFic3RyYWN0IjtiOjA7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHN0YXRpYyI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmaW5hbCI7YjowO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABoYXNSZXR1cm5CeVJlZmVyZW5jZSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGF0dHJpYnV0ZXMiO2E6MDp7fX1zOjM4OiJcZ2l0aHVzYmFuZFxUZXN0c1xEZW1vOjp0ZXN0X2Vycm9yXzIoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo0OiJkYXRhIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtzOjI6IltdIjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6Mzc5O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjE0Nzc4O31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjUwODtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToxOTk2Nzt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czozODoiXGdpdGh1c2JhbmRcVGVzdHNcRGVtbzo6dGVzdF9lcnJvcl8yKCkiO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMjoidGVzdF9lcnJvcl8yIjt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHZpc2liaWxpdHkiO086Mzk6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eSI6MTp7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcVmlzaWJpbGl0eQB2aXNpYmlsaXR5IjtzOjY6InB1YmxpYyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABkb2NCbG9jayI7TjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYWJzdHJhY3QiO2I6MDtzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAc3RhdGljIjtiOjA7czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGZpbmFsIjtiOjA7czo1NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGhhc1JldHVybkJ5UmVmZXJlbmNlIjtiOjA7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAG1ldGFkYXRhIjthOjA6e31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXR0cmlidXRlcyI7YTowOnt9fXM6NDI6IlxnaXRodXNiYW5kXFRlc3RzXERlbW86OnRlc3RfcmVhZG1lX2Nhc2UoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjE6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo0OiJkYXRhIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtzOjI6IltdIjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABsb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NTEwO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjE5OTc0O31zOjQ4OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZW5kTG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjYxMDtzOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGNvbHVtbk51bWJlciI7aToyNDExODt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAHJldHVyblR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZnFzZW4iO086MzA6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbiI6Mjp7czozNzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxGcXNlbgBmcXNlbiI7czo0MjoiXGdpdGh1c2JhbmRcVGVzdHNcRGVtbzo6dGVzdF9yZWFkbWVfY2FzZSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTY6InRlc3RfcmVhZG1lX2Nhc2UiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6NjoicHVibGljIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319czozNDoiXGdpdGh1c2JhbmRcVGVzdHNcRGVtbzo6dmFsaWRhdGUoKSI7TzozNToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QiOjEzOntzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAYXJndW1lbnRzIjthOjM6e2k6MDtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50Ijo1OntzOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudAB0eXBlIjtPOjM3OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcTWl4ZWRfIjowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAbmFtZSI7czo0OiJkYXRhIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABkZWZhdWx0IjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO31pOjE7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudCI6NTp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAdHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AG5hbWUiO3M6NDoicnVsZSI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAZGVmYXVsdCI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABieVJlZmVyZW5jZSI7YjowO3M6NDk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGlzVmFyaWFkaWMiO2I6MDt9aToyO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQiOjU6e3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AHR5cGUiO086Mzc6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xNaXhlZF8iOjA6e31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxBcmd1bWVudABuYW1lIjtzOjE1OiJ2YWxpZGF0aW9uX2NvbmYiO3M6NDY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGRlZmF1bHQiO3M6MjoiW10iO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEFyZ3VtZW50AGJ5UmVmZXJlbmNlIjtiOjA7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQXJndW1lbnQAaXNWYXJpYWRpYyI7YjowO319czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGxvY2F0aW9uIjtPOjMzOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24iOjI6e3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AbGluZU51bWJlciI7aTo2MTI7czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBjb2x1bW5OdW1iZXIiO2k6MjQxMjU7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NjQxO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjI1NDY3O31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAcmV0dXJuVHlwZSI7TzozNzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXE1peGVkXyI6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjM0OiJcZ2l0aHVzYmFuZFxUZXN0c1xEZW1vOjp2YWxpZGF0ZSgpIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6ODoidmFsaWRhdGUiO31zOjQ3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAdmlzaWJpbGl0eSI7TzozOToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5IjoxOntzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxWaXNpYmlsaXR5AHZpc2liaWxpdHkiO3M6OToicHJvdGVjdGVkIjt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcTWV0aG9kAGRvY0Jsb2NrIjtOO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhYnN0cmFjdCI7YjowO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABzdGF0aWMiO2I6MDtzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAZmluYWwiO2I6MDtzOjU3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAaGFzUmV0dXJuQnlSZWZlcmVuY2UiO2I6MDtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxNZXRob2QAbWV0YWRhdGEiO2E6MDp7fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXE1ldGhvZABhdHRyaWJ1dGVzIjthOjA6e319fXM6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwB1c2VkVHJhaXRzIjthOjA6e31zOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AbG9jYXRpb24iO086MzM6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbiI6Mjp7czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxMb2NhdGlvbgBsaW5lTnVtYmVyIjtpOjE1O3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBlbmRMb2NhdGlvbiI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uIjoyOntzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXExvY2F0aW9uAGxpbmVOdW1iZXIiO2k6NjQyO3M6NDc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cTG9jYXRpb24AY29sdW1uTnVtYmVyIjtpOjA7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmcXNlbiI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjIyOiJcZ2l0aHVzYmFuZFxUZXN0c1xEZW1vIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6NDoiRGVtbyI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6Mjc6Iuivpue7huWkjeadgueahOa1i+ivleeUqOS+iyI7czo0NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czo4MToi5rWL6K+V5pWw5o2u5bC96YeP5aSN5p2C77yM6K+05piOIFZhbGlkYXRpb24g6IO95aSf5ruh6Laz5ZCE56eN5ZCE5qC355qE5oOF5Ya144CCIjtzOjUxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAHRhZ3MiO2E6MDp7fX1zOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHRhZ3MiO2E6MTp7aTowO086NDY6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEdlbmVyaWMiOjI6e3M6NzoiACoAbmFtZSI7czo3OiJwYWNrYWdlIjtzOjE0OiIAKgBkZXNjcmlwdGlvbiI7Tzo0NToicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uIjoyOntzOjU5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXERlc2NyaXB0aW9uAGJvZHlUZW1wbGF0ZSI7czo5OiJVbml0VGVzdHMiO3M6NTE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AdGFncyI7YTowOnt9fX19czo0MjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBjb250ZXh0IjtPOjM4OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cVHlwZXNcQ29udGV4dCI6Mjp7czo0OToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZSI7czoxNjoiZ2l0aHVzYmFuZFxUZXN0cyI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6Mjp7czoxMDoiVmFsaWRhdGlvbiI7czoyMToiZ2l0aHVzYmFuZFxWYWxpZGF0aW9uIjtzOjEwOiJUZXN0Q29tbW9uIjtzOjI3OiJnaXRodXNiYW5kXFRlc3RzXFRlc3RDb21tb24iO319czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBsb2NhdGlvbiI7TjtzOjUwOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGlzVGVtcGxhdGVTdGFydCI7YjowO3M6NDg6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZUVuZCI7YjowO31zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxDbGFzc18AcGFyZW50IjtPOjMwOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4iOjI6e3M6Mzc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AZnFzZW4iO3M6Mjg6IlxnaXRodXNiYW5kXFRlc3RzXFRlc3RDb21tb24iO3M6MzY6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRnFzZW4AbmFtZSI7czoxMDoiVGVzdENvbW1vbiI7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBhYnN0cmFjdCI7YjowO3M6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBmaW5hbCI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwByZWFkT25seSI7YjowO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXENsYXNzXwBtZXRhZGF0YSI7YTowOnt9czo0NzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcQ2xhc3NfAGF0dHJpYnV0ZXMiO2E6MDp7fX19czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBoYXNoIjtzOjMyOiJhZjBjOWVmOTcxYmEwNDM2OGM2NzU2YTEzZWE5ZDNkZCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjE0OiJ0ZXN0cy9EZW1vLnBocCI7czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBzb3VyY2UiO3M6MjU0NzE6Ijw/cGhwCgpuYW1lc3BhY2UgZ2l0aHVzYmFuZFxUZXN0czsKCnVzZSBnaXRodXNiYW5kXFZhbGlkYXRpb247CnVzZSBnaXRodXNiYW5kXFRlc3RzXFRlc3RDb21tb247CgovKioKICog6K+m57uG5aSN5p2C55qE5rWL6K+V55So5L6LCiAqIAogKiDmtYvor5XmlbDmja7lsL3ph4/lpI3mnYLvvIzor7TmmI4gVmFsaWRhdGlvbiDog73lpJ/mu6HotrPlkITnp43lkITmoLfnmoTmg4XlhrXjgIIKICogCiAqIEBwYWNrYWdlIFVuaXRUZXN0cwogKi8KY2xhc3MgRGVtbyBleHRlbmRzIFRlc3RDb21tb24KewogICAgcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCkKICAgIHsKICAgICAgICBwYXJlbnQ6Ol9fY29uc3RydWN0KCk7CiAgICB9CgogICAgcHVibGljIGZ1bmN0aW9uIHRlc3Rfc3VjY2VzcygkZGF0YSA9IFtdKQogICAgewogICAgICAgIGlmIChlbXB0eSgkZGF0YSkpIHsKICAgICAgICAgICAgJGRhdGEgPSBbCiAgICAgICAgICAgICAgICAiaWQiID0+IDEyLAogICAgICAgICAgICAgICAgIm5hbWUiID0+ICJMaW5KdW5qaWUiLAogICAgICAgICAgICAgICAgImdlbmRlciIgPT4gImZlbWFsZSIsCiAgICAgICAgICAgICAgICAiZG9iIiA9PiAiMjAwMC0wMS0wMSIsCiAgICAgICAgICAgICAgICAiYWdlIiA9PiAzMCwKICAgICAgICAgICAgICAgICJoZWlnaHQiID0+IDE2NSwKICAgICAgICAgICAgICAgICJoZWlnaHRfdW5pdCIgPT4gImNtIiwKICAgICAgICAgICAgICAgICJ3ZWlnaHQiID0+IDgwLAogICAgICAgICAgICAgICAgIndlaWdodF91bml0IiA9PiAia2ciLAogICAgICAgICAgICAgICAgImVtYWlsIiA9PiAiMTAwMDBAcXEuY29tIiwKICAgICAgICAgICAgICAgICJwaG9uZSIgPT4gIjE1NjIwMDA0MDAwIiwKICAgICAgICAgICAgICAgICJpcCIgPT4gIjE5Mi4xNjguMS4xIiwKICAgICAgICAgICAgICAgICJtYWMiID0+ICIwNjoxOTpDMjpGQTozNjoyQiIsCiAgICAgICAgICAgICAgICAiZWR1Y2F0aW9uIiA9PiBbCiAgICAgICAgICAgICAgICAgICAgInByaW1hcnlfc2Nob29sIiA9PiAiUWlhbmtlbmcgWGlhb3h1ZSIsCiAgICAgICAgICAgICAgICAgICAgImp1bmlvcl9taWRkbGVfc2Nob29sIiA9PiAiUWlhbmtlbmcgWmhvbmd4dWUiLAogICAgICAgICAgICAgICAgICAgICJoaWdoX3NjaG9vbCIgPT4gIk1pYW5odSBHYW96aG9uZyIsCiAgICAgICAgICAgICAgICAgICAgInVuaXZlcnNpdHkiID0+ICJGb3NoYW4gVW5pdmVyc2l0eSIsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgImNvbXBhbnkiID0+IFsKICAgICAgICAgICAgICAgICAgICAibmFtZSIgPT4gIlFpYW5rZW5nIENvbXBhbnkiLAogICAgICAgICAgICAgICAgICAgICJ3ZWJzaXRlIiA9PiAiaHR0cHM6Ly93d3cucWlhbmtlbmcuY29tIiwKICAgICAgICAgICAgICAgICAgICAiY291bnRyeSIgPT4gIkNoaW5hIiwKICAgICAgICAgICAgICAgICAgICAiYWRkciIgPT4gIkZvc2hhbiBOYW5oYWkgR3VpY2hlbmciLAogICAgICAgICAgICAgICAgICAgICJwb3N0Y29kZSIgPT4gIjUzMjAwMCIsCiAgICAgICAgICAgICAgICAgICAgImNvbGxlYWd1ZXMiID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICJKdWR5IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJwb3NpdGlvbiIgPT4gIlJlY2VwdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICJTaWFuIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJwb3NpdGlvbiIgPT4gIkZpbmFuY2lhbCIKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICJCcm9vayIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAicG9zaXRpb24iID0+ICJKQVZBIgogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSIgPT4gIkt1cnQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInBvc2l0aW9uIiA9PiAiUEhQIgogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgImJvc3MiID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgIk1pa2UiLAogICAgICAgICAgICAgICAgICAgICAgICAiRGF2aWQiLAogICAgICAgICAgICAgICAgICAgICAgICAiSm9obm55IiwKICAgICAgICAgICAgICAgICAgICAgICAgIkV4dHJhIiwKICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgIF07CiAgICAgICAgfQoKICAgICAgICAkcnVsZSA9IFsKICAgICAgICAgICAgImlkIiA9PiAicmVxdWlyZWR8L15cZCskLyIsCiAgICAgICAgICAgICJuYW1lIiA9PiAicmVxdWlyZWR8c3RyaW5nfGxlbmd0aD48PVs4LDMyXSIsCiAgICAgICAgICAgICJnZW5kZXIiID0+ICJyZXF1aXJlZHw8c3RyaW5nPlttYWxlLGZlbWFsZV0iLAogICAgICAgICAgICAiZG9iIiA9PiAicmVxdWlyZWR8ZG9iIiwKICAgICAgICAgICAgImFnZSIgPT4gInJlcXVpcmVkfGNoZWNrX2FnZVtAZ2VuZGVyLDMwXSA+PiBAdGhpcyBpcyB3cm9uZyIsCiAgICAgICAgICAgICJoZWlnaHRbb3JdIiA9PiBbCiAgICAgICAgICAgICAgICAicmVxdWlyZWR8PShAaGVpZ2h0X3VuaXQsY20pfD49PD1bMTAwLDIwMF0gPj4gQHRoaXMgc2hvdWxkIGJlIGluIFsxMDAsMjAwXSB3aGVuIGhlaWdodF91bml0IGlzIGNtIiwKICAgICAgICAgICAgICAgICJyZXF1aXJlZHw9KEBoZWlnaHRfdW5pdCxtKXw+PTw9WzEsMl0gPj4gQHRoaXMgc2hvdWxkIGJlIGluIFsxLDJdIHdoZW4gaGVpZ2h0X3VuaXQgaXMgbSIsCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJoZWlnaHRfdW5pdCIgPT4gInJlcXVpcmVkfDxzdHJpbmc+W2NtLG1dIiwKICAgICAgICAgICAgIndlaWdodFtvcl0iID0+IFsKICAgICAgICAgICAgICAgICJyZXF1aXJlZHw9KEB3ZWlnaHRfdW5pdCxrZyl8Pj08PVs0MCwxMDBdIiwKICAgICAgICAgICAgICAgICJyZXF1aXJlZHw9KEB3ZWlnaHRfdW5pdCxsYil8Pjw9Wzg4LDIyMF0iLAogICAgICAgICAgICBdLAogICAgICAgICAgICAid2VpZ2h0X3VuaXQiID0+ICJyZXF1aXJlZHw8c3RyaW5nPltrZyxsYl0iLAogICAgICAgICAgICAiZW1haWwiID0+ICJyZXF1aXJlZHxlbWFpbCIsCiAgICAgICAgICAgICJwaG9uZSIgPT4gInJlcXVpcmVkfC8oXjFbM3w0fDV8Nnw3fDh8OV1cZHs5fSQpfCheMDlcZHs4fSQpLyA+PiBwaG9uZSBudW1iZXIgZXJyb3IiLAogICAgICAgICAgICAiaXAiID0+ICJvcHRpb25hbHxpcCIsCiAgICAgICAgICAgICJtYWMiID0+ICJvcHRpb25hbHxtYWMiLAogICAgICAgICAgICAiZWR1Y2F0aW9uIiA9PiBbCiAgICAgICAgICAgICAgICAicHJpbWFyeV9zY2hvb2wiID0+ICJyZXF1aXJlZHw9W1FpYW5rZW5nIFhpYW94dWVdIiwKICAgICAgICAgICAgICAgICJqdW5pb3JfbWlkZGxlX3NjaG9vbCIgPT4gInJlcXVpcmVkfCE9W0Zvc2hhbiBaaG9uZ3h1ZV0iLAogICAgICAgICAgICAgICAgImhpZ2hfc2Nob29sIiA9PiAiaWYoPShAanVuaW9yX21pZGRsZV9zY2hvb2wsTWlhbmh1IFpob25neHVlKSl8cmVxdWlyZWR8bGVuZ3RoPls4XSIsCiAgICAgICAgICAgICAgICAidW5pdmVyc2l0eSIgPT4gIiFpZig9KEBqdW5pb3JfbWlkZGxlX3NjaG9vbCxNaWFuaHUgWmhvbmd4dWUpKXxyZXF1aXJlZHxsZW5ndGg+WzhdIiwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgImNvbXBhbnkiID0+IFsKICAgICAgICAgICAgICAgICJuYW1lIiA9PiAicmVxdWlyZWR8bGVuZ3RoPjw9WzgsNjRdIiwKICAgICAgICAgICAgICAgICJ3ZWJzaXRlIiA9PiAicmVxdWlyZWR8dXJsIiwKICAgICAgICAgICAgICAgICJjb3VudHJ5IiA9PiAib3B0aW9uYWx8bGVuZ3RoPD1bMzJdIiwKICAgICAgICAgICAgICAgICJhZGRyIiA9PiAicmVxdWlyZWR8bGVuZ3RoPlsxNl0iLAogICAgICAgICAgICAgICAgInBvc3Rjb2RlIiA9PiAib3B0aW9uYWx8bGVuZ3RoPFsxNl18Y2hlY2tfcG9zdGNvZGUoQHBhcmVudCkiLAogICAgICAgICAgICAgICAgImNvbGxlYWd1ZXMuKiIgPT4gWwogICAgICAgICAgICAgICAgICAgICJuYW1lIiA9PiAicmVxdWlyZWR8c3RyaW5nfGxlbmd0aD48PVszLDMyXSIsCiAgICAgICAgICAgICAgICAgICAgInBvc2l0aW9uIiA9PiAicmVxdWlyZWR8PHN0cmluZz5bUmVjZXB0aW9uLEZpbmFuY2lhbCxQSFAsSkFWQV0iCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgImJvc3MiID0+IFsKICAgICAgICAgICAgICAgICAgICAicmVxdWlyZWR8PVtNaWtlXSIsCiAgICAgICAgICAgICAgICAgICAgInJlcXVpcmVkfDxzdHJpbmc+W0pvaG5ueSxEYXZpZF0iLAogICAgICAgICAgICAgICAgICAgICJvcHRpb25hbHw8c3RyaW5nPltKb2hubnksRGF2aWRdIgogICAgICAgICAgICAgICAgXQogICAgICAgICAgICBdLAogICAgICAgICAgICAiZmF2b3VyaXRlX2Zvb2Rbb3B0aW9uYWxdLioiID0+IFsKICAgICAgICAgICAgICAgICJuYW1lIiA9PiAicmVxdWlyZWR8c3RyaW5nIiwKICAgICAgICAgICAgICAgICJwbGFjZV9uYW1lIiA9PiAib3B0aW9uYWx8c3RyaW5nIgogICAgICAgICAgICBdCiAgICAgICAgXTsKCiAgICAgICAgJHZhbGlkYXRpb25fY29uZiA9IFsKICAgICAgICAgICAgJ2xhbmd1YWdlJyA9PiAnZW4tdXMnLAogICAgICAgICAgICAndmFsaWRhdGlvbl9nbG9iYWwnID0+IHRydWUsCiAgICAgICAgXTsKCiAgICAgICAgcmV0dXJuICR0aGlzLT52YWxpZGF0ZSgkZGF0YSwgJHJ1bGUsICR2YWxpZGF0aW9uX2NvbmYpOwogICAgfQoKICAgIHB1YmxpYyBmdW5jdGlvbiB0ZXN0X3N1Y2Nlc3NfMigkZGF0YSA9IFtdKQogICAgewogICAgICAgIGlmIChlbXB0eSgkZGF0YSkpIHsKICAgICAgICAgICAgJGRhdGEgPSBbCiAgICAgICAgICAgICAgICAiaWQiID0+IDEyLAogICAgICAgICAgICAgICAgIm5hbWUiID0+ICJMaW5KdW5qaWUiLAogICAgICAgICAgICAgICAgImdlbmRlciIgPT4gImZlbWFsZSIsCiAgICAgICAgICAgICAgICAiZG9iIiA9PiAiMjAwMC0wMS0wMSIsCiAgICAgICAgICAgICAgICAiYWdlIiA9PiAzMCwKICAgICAgICAgICAgICAgICJoZWlnaHQiID0+IDE2NSwKICAgICAgICAgICAgICAgICJoZWlnaHRfdW5pdCIgPT4gImNtIiwKICAgICAgICAgICAgICAgICJ3ZWlnaHQiID0+IDgwLAogICAgICAgICAgICAgICAgIndlaWdodF91bml0IiA9PiAia2ciLAogICAgICAgICAgICAgICAgImVtYWlsIiA9PiAiMTAwMDBAcXEuY29tIiwKICAgICAgICAgICAgICAgICJwaG9uZSIgPT4gIjE1NjIwMDA0MDAwIiwKICAgICAgICAgICAgICAgICJpcCIgPT4gIjE5Mi4xNjguMS4xIiwKICAgICAgICAgICAgICAgICJtYWMiID0+ICIwNjoxOTpDMjpGQTozNjoyQiIsCiAgICAgICAgICAgICAgICAiZWR1Y2F0aW9uIiA9PiBbCiAgICAgICAgICAgICAgICAgICAgInByaW1hcnlfc2Nob29sIiA9PiAiUWlhbmtlbmcgWGlhb3h1ZSIsCiAgICAgICAgICAgICAgICAgICAgImp1bmlvcl9taWRkbGVfc2Nob29sIiA9PiAiUWlhbmtlbmcgWmhvbmd4dWUiLAogICAgICAgICAgICAgICAgICAgICJoaWdoX3NjaG9vbCIgPT4gIk1pYW5odSBHYW96aG9uZyIsCiAgICAgICAgICAgICAgICAgICAgInVuaXZlcnNpdHkiID0+ICJGb3NoYW4gVW5pdmVyc2l0eSIsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgImNvbXBhbnkiID0+IFsKICAgICAgICAgICAgICAgICAgICAibmFtZSIgPT4gIlFpYW5rZW5nIENvbXBhbnkiLAogICAgICAgICAgICAgICAgICAgICJ3ZWJzaXRlIiA9PiAiaHR0cHM6Ly93d3cucWlhbmtlbmcuY29tIiwKICAgICAgICAgICAgICAgICAgICAiY291bnRyeSIgPT4gIkNoaW5hIiwKICAgICAgICAgICAgICAgICAgICAiYWRkciIgPT4gIkZvc2hhbiBOYW5oYWkgR3VpY2hlbmciLAogICAgICAgICAgICAgICAgICAgICJwb3N0Y29kZSIgPT4gIjUzMjAwMCIsCiAgICAgICAgICAgICAgICAgICAgImNvbGxlYWd1ZXMiID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICJKdWR5IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJwb3NpdGlvbiIgPT4gIlJlY2VwdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICJTaWFuIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJwb3NpdGlvbiIgPT4gIkZpbmFuY2lhbCIKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICJCcm9vayIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAicG9zaXRpb24iID0+ICJKQVZBIgogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSIgPT4gIkt1cnQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInBvc2l0aW9uIiA9PiAiUEhQIgogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgImJvc3MiID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgIk1pa2UiLAogICAgICAgICAgICAgICAgICAgICAgICAiRGF2aWQiLAogICAgICAgICAgICAgICAgICAgICAgICAiSm9obm55IiwKICAgICAgICAgICAgICAgICAgICAgICAgIkV4dHJhIiwKICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgIF07CiAgICAgICAgfQoKICAgICAgICAkcnVsZSA9IFsKICAgICAgICAgICAgImlkIiA9PiAicmVxdWlyZWR8L15cZCskLyIsCiAgICAgICAgICAgICJuYW1lIiA9PiAicmVxdWlyZWR8c3RyaW5nfGxlbmd0aD48PVs4LDMyXSIsCiAgICAgICAgICAgICJnZW5kZXIiID0+ICJyZXF1aXJlZHw8c3RyaW5nPlttYWxlLGZlbWFsZV0iLAogICAgICAgICAgICAiZG9iIiA9PiAicmVxdWlyZWR8ZG9iIiwKICAgICAgICAgICAgImFnZSIgPT4gInJlcXVpcmVkfGNoZWNrX2FnZVtAZ2VuZGVyLDMwXSA+PiBAdGhpcyBpcyB3cm9uZyIsCiAgICAgICAgICAgICJoZWlnaHQiID0+IFsKICAgICAgICAgICAgICAgICJbb3JdIiA9PiBbCiAgICAgICAgICAgICAgICAgICAgInJlcXVpcmVkfD0oQGhlaWdodF91bml0LGNtKXw+PTw9WzEwMCwyMDBdID4+IEB0aGlzIHNob3VsZCBiZSBpbiBbMTAwLDIwMF0gd2hlbiBoZWlnaHRfdW5pdCBpcyBjbSIsCiAgICAgICAgICAgICAgICAgICAgInJlcXVpcmVkfD0oQGhlaWdodF91bml0LG0pfD49PD1bMSwyXSA+PiBAdGhpcyBzaG91bGQgYmUgaW4gWzEsMl0gd2hlbiBoZWlnaHRfdW5pdCBpcyBtIiwKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgImhlaWdodF91bml0IiA9PiAicmVxdWlyZWR8PHN0cmluZz5bY20sbV0iLAogICAgICAgICAgICAid2VpZ2h0IiA9PiBbCiAgICAgICAgICAgICAgICAiW29yXSIgPT4gWwogICAgICAgICAgICAgICAgICAgICJyZXF1aXJlZHw9KEB3ZWlnaHRfdW5pdCxrZyl8Pj08PVs0MCwxMDBdIiwKICAgICAgICAgICAgICAgICAgICAicmVxdWlyZWR8PShAd2VpZ2h0X3VuaXQsbGIpfD48PVs4OCwyMjBdIiwKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgIndlaWdodF91bml0IiA9PiAicmVxdWlyZWR8PHN0cmluZz5ba2csbGJdIiwKICAgICAgICAgICAgImVtYWlsIiA9PiAicmVxdWlyZWR8ZW1haWwiLAogICAgICAgICAgICAicGhvbmUiID0+ICJyZXF1aXJlZHwvKF4xWzN8NHw1fDZ8N3w4fDldXGR7OX0kKXwoXjA5XGR7OH0kKS8gPj4gcGhvbmUgbnVtYmVyIGVycm9yIiwKICAgICAgICAgICAgImlwIiA9PiAib3B0aW9uYWx8aXAiLAogICAgICAgICAgICAibWFjIiA9PiAib3B0aW9uYWx8bWFjIiwKICAgICAgICAgICAgImVkdWNhdGlvbiIgPT4gWwogICAgICAgICAgICAgICAgInByaW1hcnlfc2Nob29sIiA9PiAicmVxdWlyZWR8PVtRaWFua2VuZyBYaWFveHVlXSIsCiAgICAgICAgICAgICAgICAianVuaW9yX21pZGRsZV9zY2hvb2wiID0+ICJyZXF1aXJlZHwhPVtGb3NoYW4gWmhvbmd4dWVdIiwKICAgICAgICAgICAgICAgICJoaWdoX3NjaG9vbCIgPT4gImlmKD0oQGp1bmlvcl9taWRkbGVfc2Nob29sLE1pYW5odSBaaG9uZ3h1ZSkpfHJlcXVpcmVkfGxlbmd0aD5bOF0iLAogICAgICAgICAgICAgICAgInVuaXZlcnNpdHkiID0+ICIhaWYoPShAanVuaW9yX21pZGRsZV9zY2hvb2wsTWlhbmh1IFpob25neHVlKSl8cmVxdWlyZWR8bGVuZ3RoPls4XSIsCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJjb21wYW55IiA9PiBbCiAgICAgICAgICAgICAgICAibmFtZSIgPT4gInJlcXVpcmVkfGxlbmd0aD48PVs4LDY0XSIsCiAgICAgICAgICAgICAgICAid2Vic2l0ZSIgPT4gInJlcXVpcmVkfHVybCIsCiAgICAgICAgICAgICAgICAiY291bnRyeSIgPT4gIm9wdGlvbmFsfGxlbmd0aDw9WzMyXSIsCiAgICAgICAgICAgICAgICAiYWRkciIgPT4gInJlcXVpcmVkfGxlbmd0aD5bMTZdIiwKICAgICAgICAgICAgICAgICJwb3N0Y29kZSIgPT4gIm9wdGlvbmFsfGxlbmd0aDxbMTZdfGNoZWNrX3Bvc3Rjb2RlKEBwYXJlbnQpIiwKICAgICAgICAgICAgICAgICJjb2xsZWFndWVzIiA9PiBbCiAgICAgICAgICAgICAgICAgICAgIi4qIiA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA9PiAicmVxdWlyZWR8c3RyaW5nfGxlbmd0aD48PVszLDMyXSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJwb3NpdGlvbiIgPT4gInJlcXVpcmVkfDxzdHJpbmc+W1JlY2VwdGlvbixGaW5hbmNpYWwsUEhQLEpBVkFdIgogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiYm9zcyIgPT4gWwogICAgICAgICAgICAgICAgICAgICJyZXF1aXJlZHw9W01pa2VdIiwKICAgICAgICAgICAgICAgICAgICAicmVxdWlyZWR8PHN0cmluZz5bSm9obm55LERhdmlkXSIsCiAgICAgICAgICAgICAgICAgICAgIm9wdGlvbmFsfDxzdHJpbmc+W0pvaG5ueSxEYXZpZF0iCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJmYXZvdXJpdGVfZm9vZCIgPT4gWwogICAgICAgICAgICAgICAgIltvcHRpb25hbF0uKiIgPT4gWwogICAgICAgICAgICAgICAgICAgICJuYW1lIiA9PiAicmVxdWlyZWR8c3RyaW5nIiwKICAgICAgICAgICAgICAgICAgICAicGxhY2VfbmFtZSIgPT4gIm9wdGlvbmFsfHN0cmluZyIKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgXQogICAgICAgIF07CgogICAgICAgICR2YWxpZGF0aW9uX2NvbmYgPSBbCiAgICAgICAgICAgICdsYW5ndWFnZScgPT4gJ2VuLXVzJywKICAgICAgICAgICAgJ3ZhbGlkYXRpb25fZ2xvYmFsJyA9PiB0cnVlLAogICAgICAgIF07CgogICAgICAgIHJldHVybiAkdGhpcy0+dmFsaWRhdGUoJGRhdGEsICRydWxlLCAkdmFsaWRhdGlvbl9jb25mKTsKICAgIH0KCiAgICBwdWJsaWMgZnVuY3Rpb24gdGVzdF9lcnJvcigkZGF0YSA9IFtdKQogICAgewogICAgICAgIGlmIChlbXB0eSgkZGF0YSkpIHsKICAgICAgICAgICAgJGRhdGEgPSBbCiAgICAgICAgICAgICAgICAiaWQiID0+ICIiLAogICAgICAgICAgICAgICAgIm5hbWUiID0+ICIxMiIsCiAgICAgICAgICAgICAgICAiZ2VuZGVyIiA9PiAiZmVtYWxlMiIsCiAgICAgICAgICAgICAgICAiZG9iIiA9PiAiMjAwMC0wMS0wMSIsCiAgICAgICAgICAgICAgICAiYWdlIiA9PiAxMSwKICAgICAgICAgICAgICAgICJoZWlnaHQiID0+IDEuNjUsCiAgICAgICAgICAgICAgICAiaGVpZ2h0X3VuaXQiID0+ICJjbSIsCiAgICAgICAgICAgICAgICAid2VpZ2h0IiA9PiA4MCwKICAgICAgICAgICAgICAgICJ3ZWlnaHRfdW5pdCIgPT4gImxiMSIsCiAgICAgICAgICAgICAgICAiZW1haWwiID0+ICIxMDAwMEBxcS5jb20uMTIzQHFxIiwKICAgICAgICAgICAgICAgICJwaG9uZSIgPT4gIjE1NjIwMDA0MDAwLSIsCiAgICAgICAgICAgICAgICAiaXAiID0+ICIxOTIuMTY4LjEuMTExMSIsCiAgICAgICAgICAgICAgICAibWFjIiA9PiAiMDY6MTk6QzI6RkE6MzY6MkIxMTEiLAogICAgICAgICAgICAgICAgImVkdWNhdGlvbiIgPT4gWwogICAgICAgICAgICAgICAgICAgICJwcmltYXJ5X3NjaG9vbCIgPT4gIj8/P1FpYW5rZW5nIFhpYW94dWUiLAogICAgICAgICAgICAgICAgICAgICJqdW5pb3JfbWlkZGxlX3NjaG9vbCIgPT4gIkZvc2hhbiBaaG9uZ3h1ZSIsCiAgICAgICAgICAgICAgICAgICAgImhpZ2hfc2Nob29sIiA9PiAiTWlhbmh1IEdhb3pob25nIiwKICAgICAgICAgICAgICAgICAgICAidW5pdmVyc2l0eSIgPT4gIkZvc2hhbiIsCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgImNvbXBhbnkiID0+IFsKICAgICAgICAgICAgICAgICAgICAibmFtZSIgPT4gIlFpYW5rZW4iLAogICAgICAgICAgICAgICAgICAgICJ3ZWJzaXRlIiA9PiAiaHR0cHM6Ly93d3cucWlhbmtlbmcuY29tMSIsCiAgICAgICAgICAgICAgICAgICAgImNvdW50cnkiID0+ICJVUyIsCiAgICAgICAgICAgICAgICAgICAgImFkZHIiID0+ICJGb3NoYW4gTmFuaGFpIiwKICAgICAgICAgICAgICAgICAgICAicG9zdGNvZGUiID0+ICI1MzIwMDAiLAogICAgICAgICAgICAgICAgICAgICJjb2xsZWFndWVzIiA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA9PiAxLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInBvc2l0aW9uIiA9PiAiUmVjZXB0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSIgPT4gMiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJwb3NpdGlvbiIgPT4gIkZpbmFuY2lhbDEiCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA9PiAzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInBvc2l0aW9uIiA9PiAiSkFWQSIKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICJLdXJ0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJwb3NpdGlvbiIgPT4gIlBIUDEiCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAiYm9zcyIgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAiTWlrZTEiLAogICAgICAgICAgICAgICAgICAgICAgICAiRGF2aWQiLAogICAgICAgICAgICAgICAgICAgICAgICAiSm9obm55MiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJFeHRyYSIsCiAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICJmYXZvdXJpdGVfZm9vZCIgPT4gWwogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICJIdW9HdW8iLAogICAgICAgICAgICAgICAgICAgICAgICAicGxhY2VfbmFtZSIgPT4gIlNpQ2h1YW4iCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA9PiAiQmVpamluZyBLYW95YSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJwbGFjZV9uYW1lIiA9PiAiQmVpamluZyIKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXQogICAgICAgICAgICBdOwogICAgICAgIH0KCiAgICAgICAgJHJ1bGUgPSBbCiAgICAgICAgICAgICJpZCIgPT4gJ3JlcXVpcmVkfC9eXGQrJC8gPj4geyAicmVxdWlyZWQiOiAiVXNlcnMgZGVmaW5lIC0gQHRoaXMgaXMgcmVxdWlyZWQiLCAicHJlZyI6ICJVc2VycyBkZWZpbmUgLSBAdGhpcyBzaG91bGQgYmUgXCJNQVRDSEVEXCIgQHByZWcifScsCiAgICAgICAgICAgICJuYW1lIiA9PiAicmVxdWlyZWR8c3RyaW5nfGxlbmd0aD48PVs4LDMyXSIsCiAgICAgICAgICAgICJnZW5kZXIiID0+ICJyZXF1aXJlZHw8c3RyaW5nPlttYWxlLGZlbWFsZV0iLAogICAgICAgICAgICAiZG9iIiA9PiAicmVxdWlyZWR8ZG9iIiwKICAgICAgICAgICAgImFnZSIgPT4gInJlcXVpcmVkfGNoZWNrX2FnZVtAZ2VuZGVyLDMwXSA+PiBAdGhpcyBpcyB3cm9uZyIsCiAgICAgICAgICAgICJoZWlnaHRbb3JdIiA9PiBbCiAgICAgICAgICAgICAgICAicmVxdWlyZWR8PShAaGVpZ2h0X3VuaXQsY20pfD49PD1bMTAwLDIwMF0gPj4gQHRoaXMgc2hvdWxkIGJlIGluIFsxMDAsMjAwXSB3aGVuIGhlaWdodF91bml0IGlzIGNtIiwKICAgICAgICAgICAgICAgICJyZXF1aXJlZHw9KEBoZWlnaHRfdW5pdCxtKXw+PTw9WzEsMl0gPj4gQHRoaXMgc2hvdWxkIGJlIGluIFsxLDJdIHdoZW4gaGVpZ2h0X3VuaXQgaXMgbSIsCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJoZWlnaHRfdW5pdCIgPT4gInJlcXVpcmVkfDxzdHJpbmc+W2NtLG1dIiwKICAgICAgICAgICAgIndlaWdodFtvcl0iID0+IFsKICAgICAgICAgICAgICAgICJyZXF1aXJlZHw9KEB3ZWlnaHRfdW5pdCxrZyl8Pj08PVs0MCwxMDBdID4+IEB0aGlzIHNob3VsZCBiZSBpbiBbNDAsMTAwXSB3aGVuIGhlaWdodF91bml0IGlzIGtnIiwKICAgICAgICAgICAgICAgICJyZXF1aXJlZHw9KEB3ZWlnaHRfdW5pdCxsYil8Pjw9Wzg4LDIyMF0gPj4gQHRoaXMgc2hvdWxkIGJlIGluIFs4OCwyMjBdIHdoZW4gaGVpZ2h0X3VuaXQgaXMgbGIiLAogICAgICAgICAgICBdLAogICAgICAgICAgICAid2VpZ2h0X3VuaXQiID0+ICJyZXF1aXJlZHw8c3RyaW5nPltrZyxsYl0iLAogICAgICAgICAgICAiZW1haWwiID0+ICJyZXF1aXJlZHxlbWFpbCIsCiAgICAgICAgICAgICJwaG9uZSIgPT4gInJlcXVpcmVkfC8oXjFbM3w0fDV8Nnw3fDh8OV1cZHs5fSQpfCheMDlcZHs4fSQpLyA+PiBwaG9uZSBudW1iZXIgZXJyb3IiLAogICAgICAgICAgICAiaXAiID0+ICJvcHRpb25hbHxpcCIsCiAgICAgICAgICAgICJtYWMiID0+ICJvcHRpb25hbHxtYWMiLAogICAgICAgICAgICAiZWR1Y2F0aW9uIiA9PiBbCiAgICAgICAgICAgICAgICAicHJpbWFyeV9zY2hvb2wiID0+ICJyZXF1aXJlZHw9W1FpYW5rZW5nIFhpYW94dWVdIiwKICAgICAgICAgICAgICAgICJqdW5pb3JfbWlkZGxlX3NjaG9vbCIgPT4gInJlcXVpcmVkfCE9W0Zvc2hhbiBaaG9uZ3h1ZV0iLAogICAgICAgICAgICAgICAgImhpZ2hfc2Nob29sIiA9PiAiaWYoPShAanVuaW9yX21pZGRsZV9zY2hvb2wsTWlhbmh1IFpob25neHVlKSl8cmVxdWlyZWR8bGVuZ3RoPlsxOF0iLAogICAgICAgICAgICAgICAgInVuaXZlcnNpdHkiID0+ICIhaWYoPShAanVuaW9yX21pZGRsZV9zY2hvb2wsTWlhbmh1IFpob25neHVlKSl8cmVxdWlyZWR8bGVuZ3RoPls4XSIsCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJjb21wYW55IiA9PiBbCiAgICAgICAgICAgICAgICAibmFtZSIgPT4gInJlcXVpcmVkfGxlbmd0aD48PVs4LDY0XSIsCiAgICAgICAgICAgICAgICAid2Vic2l0ZSIgPT4gInJlcXVpcmVkfHVybCIsCiAgICAgICAgICAgICAgICAiY291bnRyeSIgPT4gIm9wdGlvbmFsfGxlbmd0aD49WzZdIiwKICAgICAgICAgICAgICAgICJhZGRyIiA9PiAicmVxdWlyZWR8bGVuZ3RoPlsxNl0iLAogICAgICAgICAgICAgICAgInBvc3Rjb2RlIiA9PiAib3B0aW9uYWx8bGVuZ3RoPFsxNl18Y2hlY2tfcG9zdGNvZGUoQHBhcmVudCkiLAogICAgICAgICAgICAgICAgImNvbGxlYWd1ZXMuKiIgPT4gWwogICAgICAgICAgICAgICAgICAgICJuYW1lIiA9PiAicmVxdWlyZWR8c3RyaW5nfGxlbmd0aD48PVszLDMyXSIsCiAgICAgICAgICAgICAgICAgICAgInBvc2l0aW9uIiA9PiAicmVxdWlyZWR8PHN0cmluZz5bUmVjZXB0aW9uLEZpbmFuY2lhbCxQSFAsSkFWQV0iCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgImJvc3MiID0+IFsKICAgICAgICAgICAgICAgICAgICAicmVxdWlyZWR8PVtNaWtlXSIsCiAgICAgICAgICAgICAgICAgICAgInJlcXVpcmVkfDxzdHJpbmc+W0pvaG5ueSxEYXZpZF0iLAogICAgICAgICAgICAgICAgICAgICJvcHRpb25hbHw8c3RyaW5nPltKb2hubnksRGF2aWRdIgogICAgICAgICAgICAgICAgXQogICAgICAgICAgICBdLAogICAgICAgICAgICAiZmF2b3VyaXRlX2Zvb2Rbb3B0aW9uYWxdLioiID0+IFsKICAgICAgICAgICAgICAgICJuYW1lIiA9PiAicmVxdWlyZWR8c3RyaW5nIiwKICAgICAgICAgICAgICAgICJwbGFjZV9uYW1lIiA9PiAib3B0aW9uYWx8c3RyaW5nIgogICAgICAgICAgICBdCiAgICAgICAgXTsKCiAgICAgICAgJHZhbGlkYXRpb25fY29uZiA9IFsKICAgICAgICAgICAgJ2xhbmd1YWdlJyA9PiAnemgtY24nLAogICAgICAgICAgICAndmFsaWRhdGlvbl9nbG9iYWwnID0+IHRydWUsCiAgICAgICAgXTsKCiAgICAgICAgcmV0dXJuICR0aGlzLT52YWxpZGF0ZSgkZGF0YSwgJHJ1bGUsICR2YWxpZGF0aW9uX2NvbmYpOwogICAgfQoKICAgIHB1YmxpYyBmdW5jdGlvbiB0ZXN0X2Vycm9yXzIoJGRhdGEgPSBbXSkKICAgIHsKICAgICAgICBpZiAoZW1wdHkoJGRhdGEpKSB7CiAgICAgICAgICAgICRkYXRhID0gWwogICAgICAgICAgICAgICAgImlkIiA9PiAiQUJCQyIsCiAgICAgICAgICAgICAgICAibmFtZSIgPT4gIjEyIiwKICAgICAgICAgICAgICAgICJnZW5kZXIiID0+ICJmZW1hbGUyIiwKICAgICAgICAgICAgICAgICJkb2IiID0+ICIyMDAwLTAxLTAxIiwKICAgICAgICAgICAgICAgICJhZ2UiID0+IDExLAogICAgICAgICAgICAgICAgImhlaWdodCIgPT4gMS42NSwKICAgICAgICAgICAgICAgICJoZWlnaHRfdW5pdCIgPT4gImNtIiwKICAgICAgICAgICAgICAgICJ3ZWlnaHQiID0+IDgwLAogICAgICAgICAgICAgICAgIndlaWdodF91bml0IiA9PiAibGIxIiwKICAgICAgICAgICAgICAgICJlbWFpbCIgPT4gIjEwMDAwQHFxLmNvbS4xMjNAcXEiLAogICAgICAgICAgICAgICAgInBob25lIiA9PiAiMTU2MjAwMDQwMDAtIiwKICAgICAgICAgICAgICAgICJpcCIgPT4gIjE5Mi4xNjguMS4xMTExIiwKICAgICAgICAgICAgICAgICJtYWMiID0+ICIwNjoxOTpDMjpGQTozNjoyQjExMSIsCiAgICAgICAgICAgICAgICAiZWR1Y2F0aW9uIiA9PiBbCiAgICAgICAgICAgICAgICAgICAgInByaW1hcnlfc2Nob29sIiA9PiAiPz8/UWlhbmtlbmcgWGlhb3h1ZSIsCiAgICAgICAgICAgICAgICAgICAgImp1bmlvcl9taWRkbGVfc2Nob29sIiA9PiAiRm9zaGFuIFpob25neHVlIiwKICAgICAgICAgICAgICAgICAgICAiaGlnaF9zY2hvb2wiID0+ICJNaWFuaHUgR2FvemhvbmciLAogICAgICAgICAgICAgICAgICAgICJ1bml2ZXJzaXR5IiA9PiAiRm9zaGFuIiwKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAiY29tcGFueSIgPT4gWwogICAgICAgICAgICAgICAgICAgICJuYW1lIiA9PiAiUWlhbmtlbiIsCiAgICAgICAgICAgICAgICAgICAgIndlYnNpdGUiID0+ICJodHRwczovL3d3dy5xaWFua2VuZy5jb20xIiwKICAgICAgICAgICAgICAgICAgICAiY291bnRyeSIgPT4gIlVTIiwKICAgICAgICAgICAgICAgICAgICAiYWRkciIgPT4gIkZvc2hhbiBOYW5oYWkiLAogICAgICAgICAgICAgICAgICAgICJwb3N0Y29kZSIgPT4gIjUzMjAwMCIsCiAgICAgICAgICAgICAgICAgICAgImNvbGxlYWd1ZXMiID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+IDEsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAicG9zaXRpb24iID0+ICJSZWNlcHRpb24iCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA9PiAyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInBvc2l0aW9uIiA9PiAiRmluYW5jaWFsMSIKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+IDMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAicG9zaXRpb24iID0+ICJKQVZBIgogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSIgPT4gIkt1cnQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInBvc2l0aW9uIiA9PiAiUEhQMSIKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICJib3NzIiA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgICJNaWtlMSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJEYXZpZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJKb2hubnkyIiwKICAgICAgICAgICAgICAgICAgICAgICAgIkV4dHJhIiwKICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgImZhdm91cml0ZV9mb29kIiA9PiBbCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAibmFtZSIgPT4gIkh1b0d1byIsCiAgICAgICAgICAgICAgICAgICAgICAgICJwbGFjZV9uYW1lIiA9PiAiU2lDaHVhbiIKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICJCZWlqaW5nIEthb3lhIiwKICAgICAgICAgICAgICAgICAgICAgICAgInBsYWNlX25hbWUiID0+ICJCZWlqaW5nIgogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgIF07CiAgICAgICAgfQoKICAgICAgICAkcnVsZSA9IFsKICAgICAgICAgICAgImlkIiA9PiAicmVxdWlyZWR8aW50fC9eXGQrJC8iLAogICAgICAgICAgICAibmFtZSIgPT4gInJlcXVpcmVkfHN0cmluZ3xsZW5ndGg+PD1bOCwzMl0iLAogICAgICAgICAgICAiZ2VuZGVyIiA9PiAicmVxdWlyZWR8PHN0cmluZz5bbWFsZSxmZW1hbGVdIiwKICAgICAgICAgICAgImRvYiIgPT4gInJlcXVpcmVkfGRvYiIsCiAgICAgICAgICAgICJhZ2UiID0+ICJyZXF1aXJlZHxjaGVja19hZ2VbQGdlbmRlciwzMF0gPj4gQHRoaXMgaXMgd3JvbmciLAogICAgICAgICAgICAiaGVpZ2h0IiA9PiBbCiAgICAgICAgICAgICAgICAiW29yXSIgPT4gWwogICAgICAgICAgICAgICAgICAgICJyZXF1aXJlZHw9KEBoZWlnaHRfdW5pdCxjbSl8Pj08PVsxMDAsMjAwXSA+PiBAdGhpcyBzaG91bGQgYmUgaW4gWzEwMCwyMDBdIHdoZW4gaGVpZ2h0X3VuaXQgaXMgY20iLAogICAgICAgICAgICAgICAgICAgICJyZXF1aXJlZHw9KEBoZWlnaHRfdW5pdCxtKXw+PTw9WzEsMl0gPj4gQHRoaXMgc2hvdWxkIGJlIGluIFsxLDJdIHdoZW4gaGVpZ2h0X3VuaXQgaXMgbSIsCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJoZWlnaHRfdW5pdCIgPT4gInJlcXVpcmVkfDxzdHJpbmc+W2NtLG1dIiwKICAgICAgICAgICAgIndlaWdodFtvcl0iID0+IFsKICAgICAgICAgICAgICAgICJbb3JdIiA9PiBbCiAgICAgICAgICAgICAgICAgICAgInJlcXVpcmVkfD0oQHdlaWdodF91bml0LGtnKXw+PTw9WzQwLDEwMF0gPj4gQHRoaXMgc2hvdWxkIGJlIGluIFs0MCwxMDBdIHdoZW4gaGVpZ2h0X3VuaXQgaXMga2ciLAogICAgICAgICAgICAgICAgICAgICJyZXF1aXJlZHw9KEB3ZWlnaHRfdW5pdCxsYil8Pjw9Wzg4LDIyMF0gPj4gQHRoaXMgc2hvdWxkIGJlIGluIFs4OCwyMjBdIHdoZW4gaGVpZ2h0X3VuaXQgaXMgbGIiLAogICAgICAgICAgICAgICAgXQogICAgICAgICAgICBdLAogICAgICAgICAgICAid2VpZ2h0X3VuaXQiID0+ICJyZXF1aXJlZHw8c3RyaW5nPltrZyxsYl0iLAogICAgICAgICAgICAiZW1haWwiID0+ICJyZXF1aXJlZHxlbWFpbCIsCiAgICAgICAgICAgICJwaG9uZSIgPT4gInJlcXVpcmVkfC8oXjFbM3w0fDV8Nnw3fDh8OV1cZHs5fSQpfCheMDlcZHs4fSQpLyA+PiBwaG9uZSBudW1iZXIgZXJyb3IiLAogICAgICAgICAgICAiaXAiID0+ICJvcHRpb25hbHxpcCIsCiAgICAgICAgICAgICJtYWMiID0+ICJvcHRpb25hbHxtYWMiLAogICAgICAgICAgICAiZWR1Y2F0aW9uIiA9PiBbCiAgICAgICAgICAgICAgICAicHJpbWFyeV9zY2hvb2wiID0+ICJyZXF1aXJlZHw9W1FpYW5rZW5nIFhpYW94dWVdIiwKICAgICAgICAgICAgICAgICJqdW5pb3JfbWlkZGxlX3NjaG9vbCIgPT4gInJlcXVpcmVkfCE9W0Zvc2hhbiBaaG9uZ3h1ZV0iLAogICAgICAgICAgICAgICAgImhpZ2hfc2Nob29sIiA9PiAiaWYoPShAanVuaW9yX21pZGRsZV9zY2hvb2wsTWlhbmh1IFpob25neHVlKSl8cmVxdWlyZWR8bGVuZ3RoPlsxOF0iLAogICAgICAgICAgICAgICAgInVuaXZlcnNpdHkiID0+ICIhaWYoPShAanVuaW9yX21pZGRsZV9zY2hvb2wsTWlhbmh1IFpob25neHVlKSl8cmVxdWlyZWR8bGVuZ3RoPls4XSIsCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgICJjb21wYW55IiA9PiBbCiAgICAgICAgICAgICAgICAibmFtZSIgPT4gInJlcXVpcmVkfGxlbmd0aD48PVs4LDY0XSIsCiAgICAgICAgICAgICAgICAid2Vic2l0ZSIgPT4gInJlcXVpcmVkfHVybCIsCiAgICAgICAgICAgICAgICAiY291bnRyeSIgPT4gIm9wdGlvbmFsfGxlbmd0aD49WzZdIiwKICAgICAgICAgICAgICAgICJhZGRyIiA9PiAicmVxdWlyZWR8bGVuZ3RoPlsxNl0iLAogICAgICAgICAgICAgICAgInBvc3Rjb2RlIiA9PiAib3B0aW9uYWx8bGVuZ3RoPFsxNl18Y2hlY2tfcG9zdGNvZGUoQHBhcmVudCkiLAogICAgICAgICAgICAgICAgImNvbGxlYWd1ZXMiID0+IFsKICAgICAgICAgICAgICAgICAgICAiLioiID0+IFsKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICJyZXF1aXJlZHxzdHJpbmd8bGVuZ3RoPjw9WzMsMzJdIiwKICAgICAgICAgICAgICAgICAgICAgICAgInBvc2l0aW9uIiA9PiAicmVxdWlyZWR8PHN0cmluZz5bUmVjZXB0aW9uLEZpbmFuY2lhbCxQSFAsSkFWQV0iCiAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICJib3NzIiA9PiBbCiAgICAgICAgICAgICAgICAgICAgInJlcXVpcmVkfD1bTWlrZV0iLAogICAgICAgICAgICAgICAgICAgICJyZXF1aXJlZHw8c3RyaW5nPltKb2hubnksRGF2aWRdIiwKICAgICAgICAgICAgICAgICAgICAib3B0aW9uYWx8PHN0cmluZz5bSm9obm55LERhdmlkXSIKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgImZhdm91cml0ZV9mb29kIiA9PiBbCiAgICAgICAgICAgICAgICAiW29wdGlvbmFsXS4qIiA9PiBbCiAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICJyZXF1aXJlZHxzdHJpbmciLAogICAgICAgICAgICAgICAgICAgICJwbGFjZV9uYW1lIiA9PiAib3B0aW9uYWx8c3RyaW5nIgogICAgICAgICAgICAgICAgXQogICAgICAgICAgICBdCiAgICAgICAgXTsKCiAgICAgICAgJHZhbGlkYXRpb25fY29uZiA9IFsKICAgICAgICAgICAgJ2xhbmd1YWdlJyA9PiAnemgtY24nLAogICAgICAgICAgICAndmFsaWRhdGlvbl9nbG9iYWwnID0+IHRydWUsCiAgICAgICAgXTsKCiAgICAgICAgcmV0dXJuICR0aGlzLT52YWxpZGF0ZSgkZGF0YSwgJHJ1bGUsICR2YWxpZGF0aW9uX2NvbmYpOwogICAgfQoKICAgIHB1YmxpYyBmdW5jdGlvbiB0ZXN0X3JlYWRtZV9jYXNlKCRkYXRhID0gW10pCiAgICB7CiAgICAgICAgaWYgKGVtcHR5KCRkYXRhKSkgewogICAgICAgICAgICAkZGF0YSA9IFsKICAgICAgICAgICAgICAgICJpZCIgPT4gIiIsCiAgICAgICAgICAgICAgICAibmFtZSIgPT4gIjEyIiwKICAgICAgICAgICAgICAgICJlbWFpbCIgPT4gIjEwMDAwQHFxLmNvbS4xMjNAcXEiLAogICAgICAgICAgICAgICAgInBob25lIiA9PiAiMTU2MjAwMDQwMDAtIiwKICAgICAgICAgICAgICAgICJlZHVjYXRpb24iID0+IFsKICAgICAgICAgICAgICAgICAgICAicHJpbWFyeV9zY2hvb2wiID0+ICI/Pz9RaWFua2VuZyBYaWFveHVlIiwKICAgICAgICAgICAgICAgICAgICAianVuaW9yX21pZGRsZV9zY2hvb2wiID0+ICJGb3NoYW4gWmhvbmd4dWUiLAogICAgICAgICAgICAgICAgICAgICJoaWdoX3NjaG9vbCIgPT4gIk1pYW5odSBHYW96aG9uZyIsCiAgICAgICAgICAgICAgICAgICAgInVuaXZlcnNpdHkiID0+ICJGb3NoYW4iLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICJjb21wYW55IiA9PiBbCiAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICJRaWFua2VuIiwKICAgICAgICAgICAgICAgICAgICAid2Vic2l0ZSIgPT4gImh0dHBzOi8vd3d3LnFpYW5rZW5nLmNvbTEiLAogICAgICAgICAgICAgICAgICAgICJjb2xsZWFndWVzIiA9PiBbCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA9PiAxLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInBvc2l0aW9uIiA9PiAiUmVjZXB0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSIgPT4gMiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJwb3NpdGlvbiIgPT4gIkZpbmFuY2lhbDEiCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA9PiAzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInBvc2l0aW9uIiA9PiAiSkFWQSIKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICJLdXJ0IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJwb3NpdGlvbiIgPT4gIlBIUDEiCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAiYm9zcyIgPT4gWwogICAgICAgICAgICAgICAgICAgICAgICAiTWlrZTEiLAogICAgICAgICAgICAgICAgICAgICAgICAiRGF2aWQiLAogICAgICAgICAgICAgICAgICAgICAgICAiSm9obm55MiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJFeHRyYSIsCiAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICJmYXZvdXJpdGVfZm9vZCIgPT4gWwogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICJIdW9HdW8iLAogICAgICAgICAgICAgICAgICAgICAgICAicGxhY2VfbmFtZSIgPT4gIlNpQ2h1YW4iCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIiA9PiAiQmVpamluZyBLYW95YSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJwbGFjZV9uYW1lIiA9PiAiQmVpamluZyIKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgXQogICAgICAgICAgICBdOwogICAgICAgIH0KCiAgICAgICAgJHJ1bGUgPSBbCiAgICAgICAgICAgIC8vIGlkIOaYr+W/heimgeeahOS4lOW/hemhu+WMuemFjeato+WImSAvXlxkKyQv77yMID4+IOWQjumdoueahHJlcXVpcmVkIOWSjCDmraPliJnlr7nlupTnmoTmiqXplJnkv6Hmga8KICAgICAgICAgICAgImlkIiA9PiAncmVxdWlyZWR8L15cZCskLyA+PiB7ICJyZXF1aXJlZCI6ICLnlKjmiLfoh6rlrprkuYkgLSBAdGhpcyDmmK/lv4XopoHnmoQiLCAicHJlZyI6ICLnlKjmiLfoh6rlrprkuYkgLSBAdGhpcyDlv4XpobvljLnphY0gQHByZWciIH0nLAogICAgICAgICAgICAvLyBuYW1lIOaYr+W/heimgeeahOS4lOW/hemhu+aYr+Wtl+espuS4suS4lOmVv+W6puWcqOWMuumXtCDjgJA477yMMzIpCiAgICAgICAgICAgICJuYW1lIiA9PiAicmVxdWlyZWR8c3RyaW5nfGxlbmd0aD48PVs4LDMyXSIsCiAgICAgICAgICAgICJlbWFpbCIgPT4gInJlcXVpcmVkfGVtYWlsIiwKICAgICAgICAgICAgInBob25lIiA9PiAicmVxdWlyZWR8LyheMVszfDR8NXw2fDd8OHw5XVxkezl9JCl8KF4wOVxkezh9JCkvID4+IOeUqOaIt+iHquWumuS5iSAtIHBob25lIG51bWJlciDplJnor68iLAogICAgICAgICAgICAvLyBpcCDmmK/lj6/pgInnmoQKICAgICAgICAgICAgImlwIiA9PiAib3B0aW9uYWx8aXAiLAogICAgICAgICAgICAiZWR1Y2F0aW9uIiA9PiBbCiAgICAgICAgICAgICAgICAvLyBlZHVjYXRpb24ucHJpbWFyeV9zY2hvb2wg5b+F6aG7562J5LqOIOKAnFFpYW5rZW5nIFhpYW94dWXigJ0KICAgICAgICAgICAgICAgICJwcmltYXJ5X3NjaG9vbCIgPT4gInJlcXVpcmVkfD1bUWlhbmtlbmcgWGlhb3h1ZV0iLAogICAgICAgICAgICAgICAgImp1bmlvcl9taWRkbGVfc2Nob29sIiA9PiAicmVxdWlyZWR8IT1bRm9zaGFuIFpob25neHVlXSIsCiAgICAgICAgICAgICAgICAiaGlnaF9zY2hvb2wiID0+ICJvcHRpb25hbHxzdHJpbmciLAogICAgICAgICAgICAgICAgInVuaXZlcnNpdHkiID0+ICJvcHRpb25hbHxzdHJpbmciLAogICAgICAgICAgICBdLAogICAgICAgICAgICAiY29tcGFueSIgPT4gWwogICAgICAgICAgICAgICAgIm5hbWUiID0+ICJyZXF1aXJlZHxsZW5ndGg+PD1bOCw2NF0iLAogICAgICAgICAgICAgICAgIndlYnNpdGUiID0+ICJyZXF1aXJlZHx1cmwiLAogICAgICAgICAgICAgICAgImNvbGxlYWd1ZXMuKiIgPT4gWwogICAgICAgICAgICAgICAgICAgICJuYW1lIiA9PiAicmVxdWlyZWR8c3RyaW5nfGxlbmd0aD48PVszLDMyXSIsCiAgICAgICAgICAgICAgICAgICAgLy8gY29tcGFueS5jb2xsZWFndWVzLioucG9zaXRpb24g5b+F6aG7562J5LqOIFJlY2VwdGlvbixGaW5hbmNpYWwsUEhQLEpBVkEg5YW25Lit5LmL5LiACiAgICAgICAgICAgICAgICAgICAgInBvc2l0aW9uIiA9PiAicmVxdWlyZWR8PHN0cmluZz5bUmVjZXB0aW9uLEZpbmFuY2lhbCxQSFAsSkFWQV0iCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgLy8g5Lul5LiL5LiJ5Liq6KeE5YiZ5Y+q5a+5IGJvc3MuMCwgYm9zcy4xLCBib3NzLjIg5pyJ5pWI77yMYm9zcy4zIOWPiuWFtuS7lumDveaXoOaViCAKICAgICAgICAgICAgICAgICJib3NzIiA9PiBbCiAgICAgICAgICAgICAgICAgICAgInJlcXVpcmVkfD1bTWlrZV0iLAogICAgICAgICAgICAgICAgICAgICJyZXF1aXJlZHw8c3RyaW5nPltKb2hubnksRGF2aWRdIiwKICAgICAgICAgICAgICAgICAgICAib3B0aW9uYWx8PHN0cmluZz5bSm9obm55LERhdmlkXSIKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgLy8gZmF2b3VyaXRlX2Zvb2Qg5piv5Y+v6YCJ55qE57Si5byV5pWw57uE77yM5YWB6K645Li656m6CiAgICAgICAgICAgICJmYXZvdXJpdGVfZm9vZFtvcHRpb25hbF0uKiIgPT4gWwogICAgICAgICAgICAgICAgLy8gZmF2b3VyaXRlX2Zvb2QuKi5uYW1lIOW/hemhu+aYr+Wtl+espuS4sgogICAgICAgICAgICAgICAgIm5hbWUiID0+ICJyZXF1aXJlZHxzdHJpbmciLAogICAgICAgICAgICAgICAgInBsYWNlX25hbWUiID0+ICJvcHRpb25hbHxzdHJpbmciCiAgICAgICAgICAgIF0KICAgICAgICBdOwoKICAgICAgICAkdmFsaWRhdGlvbl9jb25mID0gWwogICAgICAgICAgICAnbGFuZ3VhZ2UnID0+ICd6aC1jbicsCiAgICAgICAgICAgICd2YWxpZGF0aW9uX2dsb2JhbCcgPT4gdHJ1ZSwKICAgICAgICBdOwoKICAgICAgICByZXR1cm4gJHRoaXMtPnZhbGlkYXRlKCRkYXRhLCAkcnVsZSwgJHZhbGlkYXRpb25fY29uZik7CiAgICB9CgogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIHZhbGlkYXRlKCRkYXRhLCAkcnVsZSwgJHZhbGlkYXRpb25fY29uZiA9IFtdKQogICAgewogICAgICAgICR2YWxpZGF0aW9uID0gbmV3IFZhbGlkYXRpb24oJHZhbGlkYXRpb25fY29uZik7CgogICAgICAgICR2YWxpZGF0aW9uLT5hZGRfbWV0aG9kKCdjaGVja19wb3N0Y29kZScsIGZ1bmN0aW9uICgkY29tcGFueSkgewogICAgICAgICAgICBpZiAoaXNzZXQoJGNvbXBhbnlbJ2NvdW50cnknXSkgJiYgJGNvbXBhbnlbJ2NvdW50cnknXSA9PSAiVVMiKSB7CiAgICAgICAgICAgICAgICBpZiAoIWlzc2V0KCRjb21wYW55Wydwb3N0Y29kZSddKSB8fCAkY29tcGFueVsncG9zdGNvZGUnXSAhPSAiMTIzIikgewogICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAvLyByZXR1cm4gIiMjIyMgY2hlY2tfcG9zdGNvZGUgbWV0aG9kIGVycm9yIG1lc3NhZ2UoQHRoaXMpIjsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgICAgICAgICAnZXJyb3JfdHlwZScgPT4gJ3NlcnZlcl9lcnJvcicsCiAgICAgICAgICAgICAgICAgICAgICAgICdtZXNzYWdlJyA9PiAnKioqIGNoZWNrX3Bvc3Rjb2RlIG1ldGhvZCBlcnJvciBtZXNzYWdlKEB0aGlzKScsCiAgICAgICAgICAgICAgICAgICAgICAgICJleHRyYSIgPT4gImV4dHJhIG1lc3NhZ2UiCiAgICAgICAgICAgICAgICAgICAgXTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSk7CgogICAgICAgIGlmICgkdmFsaWRhdGlvbi0+c2V0X3J1bGVzKCRydWxlKS0+dmFsaWRhdGUoJGRhdGEpKSB7CiAgICAgICAgICAgIHJldHVybiAkdmFsaWRhdGlvbi0+Z2V0X3Jlc3VsdCgpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIHJldHVybiAkdmFsaWRhdGlvbi0+Z2V0X2Vycm9yKHRydWUsIGZhbHNlKTsKICAgICAgICAgICAgLy8gcmV0dXJuICR2YWxpZGF0aW9uLT5nZXRfZXJyb3IoVmFsaWRhdGlvbjo6RVJST1JfRk9STUFUX05FU1RFRF9ERVRBSUxFRCk7CiAgICAgICAgICAgIC8vIHJldHVybiAkdmFsaWRhdGlvbi0+Z2V0X2Vycm9yKFZhbGlkYXRpb246OkVSUk9SX0ZPUk1BVF9ORVNURURfR0VORVJBTCk7CiAgICAgICAgICAgIC8vIHJldHVybiAkdmFsaWRhdGlvbi0+Z2V0X2Vycm9yKFZhbGlkYXRpb246OkVSUk9SX0ZPUk1BVF9ET1RURURfREVUQUlMRUQpOwogICAgICAgICAgICByZXR1cm4gJHZhbGlkYXRpb24tPmdldF9lcnJvcihWYWxpZGF0aW9uOjpFUlJPUl9GT1JNQVRfRE9UVEVEX0dFTkVSQUwpOwogICAgICAgIH0KICAgIH0KfQoiO3M6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZG9jQmxvY2siO047czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";