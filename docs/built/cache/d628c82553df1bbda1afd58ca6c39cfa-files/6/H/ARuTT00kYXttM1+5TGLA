1722123625
d628c82553df1bbda1afd58ca6c39cfa-phpdoc%3Ae33fc10d76401eef629517730eafcadc-ed0910acf9a6113c8fd84106cd2ad73e
s:390888:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:20:"TestRuleDatetime.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:22:"\githusband\Tests\Rule";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:22:"\githusband\Tests\Rule";s:36:" phpDocumentor\Reflection\Fqsen name";s:4:"Rule";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:1:{s:39:"\githusband\Tests\Rule\TestRuledatetime";O:35:"phpDocumentor\Reflection\Php\Trait_":10:{s:47:" phpDocumentor\Reflection\Php\Trait_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Trait_ methods";a:35:{s:63:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:15;s:47:" phpDocumentor\Reflection\Location columnNumber";i:243;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:303;s:47:" phpDocumentor\Reflection\Location columnNumber";i:11930;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:63:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime()";s:36:" phpDocumentor\Reflection\Fqsen name";s:20:"test_method_datetime";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:69:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_equal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:305;s:47:" phpDocumentor\Reflection\Location columnNumber";i:11937;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:705;s:47:" phpDocumentor\Reflection\Location columnNumber";i:29812;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:69:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_equal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:26:"test_method_datetime_equal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:73:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_not_equal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:707;s:47:" phpDocumentor\Reflection\Location columnNumber";i:29819;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:779;s:47:" phpDocumentor\Reflection\Location columnNumber";i:32498;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:73:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_not_equal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:30:"test_method_datetime_not_equal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:76:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_greater_than()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:781;s:47:" phpDocumentor\Reflection\Location columnNumber";i:32505;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:857;s:47:" phpDocumentor\Reflection\Location columnNumber";i:35231;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:76:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_greater_than()";s:36:" phpDocumentor\Reflection\Fqsen name";s:33:"test_method_datetime_greater_than";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:77:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_greater_equal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:859;s:47:" phpDocumentor\Reflection\Location columnNumber";i:35238;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:950;s:47:" phpDocumentor\Reflection\Location columnNumber";i:38472;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:77:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_greater_equal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:34:"test_method_datetime_greater_equal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:73:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_less_than()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:952;s:47:" phpDocumentor\Reflection\Location columnNumber";i:38479;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1050;s:47:" phpDocumentor\Reflection\Location columnNumber";i:41953;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:73:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_less_than()";s:36:" phpDocumentor\Reflection\Fqsen name";s:30:"test_method_datetime_less_than";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:74:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_less_equal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1052;s:47:" phpDocumentor\Reflection\Location columnNumber";i:41960;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1150;s:47:" phpDocumentor\Reflection\Location columnNumber";i:45591;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:74:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_less_equal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:31:"test_method_datetime_less_equal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:76:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_greater_less()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1152;s:47:" phpDocumentor\Reflection\Location columnNumber";i:45598;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1267;s:47:" phpDocumentor\Reflection\Location columnNumber";i:50329;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:76:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_greater_less()";s:36:" phpDocumentor\Reflection\Fqsen name";s:33:"test_method_datetime_greater_less";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:81:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_greater_lessequal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1269;s:47:" phpDocumentor\Reflection\Location columnNumber";i:50336;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1384;s:47:" phpDocumentor\Reflection\Location columnNumber";i:55183;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:81:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_greater_lessequal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:38:"test_method_datetime_greater_lessequal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:81:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_greaterequal_less()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1386;s:47:" phpDocumentor\Reflection\Location columnNumber";i:55190;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1501;s:47:" phpDocumentor\Reflection\Location columnNumber";i:60028;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:81:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_greaterequal_less()";s:36:" phpDocumentor\Reflection\Fqsen name";s:38:"test_method_datetime_greaterequal_less";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:71:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_between()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:1503;s:47:" phpDocumentor\Reflection\Location columnNumber";i:60035;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2097;s:47:" phpDocumentor\Reflection\Location columnNumber";i:86365;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:71:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_between()";s:36:" phpDocumentor\Reflection\Fqsen name";s:28:"test_method_datetime_between";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:59:"\githusband\Tests\Rule\TestRuledatetime::test_method_date()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2099;s:47:" phpDocumentor\Reflection\Location columnNumber";i:86372;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2326;s:47:" phpDocumentor\Reflection\Location columnNumber";i:94382;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:59:"\githusband\Tests\Rule\TestRuledatetime::test_method_date()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"test_method_date";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:65:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_equal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2328;s:47:" phpDocumentor\Reflection\Location columnNumber";i:94389;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2498;s:47:" phpDocumentor\Reflection\Location columnNumber";i:101067;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:65:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_equal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:22:"test_method_date_equal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:69:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_not_equal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2500;s:47:" phpDocumentor\Reflection\Location columnNumber";i:101074;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2554;s:47:" phpDocumentor\Reflection\Location columnNumber";i:102865;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:69:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_not_equal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:26:"test_method_date_not_equal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:72:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_greater_than()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2556;s:47:" phpDocumentor\Reflection\Location columnNumber";i:102872;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2705;s:47:" phpDocumentor\Reflection\Location columnNumber";i:108085;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:72:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_greater_than()";s:36:" phpDocumentor\Reflection\Fqsen name";s:29:"test_method_date_greater_than";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:73:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_greater_equal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2707;s:47:" phpDocumentor\Reflection\Location columnNumber";i:108092;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2776;s:47:" phpDocumentor\Reflection\Location columnNumber";i:110349;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:73:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_greater_equal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:30:"test_method_date_greater_equal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:69:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_less_than()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2778;s:47:" phpDocumentor\Reflection\Location columnNumber";i:110356;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2852;s:47:" phpDocumentor\Reflection\Location columnNumber";i:112636;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:69:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_less_than()";s:36:" phpDocumentor\Reflection\Fqsen name";s:26:"test_method_date_less_than";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:70:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_less_equal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2854;s:47:" phpDocumentor\Reflection\Location columnNumber";i:112643;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2918;s:47:" phpDocumentor\Reflection\Location columnNumber";i:114744;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:70:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_less_equal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:27:"test_method_date_less_equal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:72:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_greater_less()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:2920;s:47:" phpDocumentor\Reflection\Location columnNumber";i:114751;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3021;s:47:" phpDocumentor\Reflection\Location columnNumber";i:118598;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:72:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_greater_less()";s:36:" phpDocumentor\Reflection\Fqsen name";s:29:"test_method_date_greater_less";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:77:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_greater_lessequal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3023;s:47:" phpDocumentor\Reflection\Location columnNumber";i:118605;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3134;s:47:" phpDocumentor\Reflection\Location columnNumber";i:122805;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:77:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_greater_lessequal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:34:"test_method_date_greater_lessequal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:77:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_greaterequal_less()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3136;s:47:" phpDocumentor\Reflection\Location columnNumber";i:122812;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3247;s:47:" phpDocumentor\Reflection\Location columnNumber";i:127012;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:77:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_greaterequal_less()";s:36:" phpDocumentor\Reflection\Fqsen name";s:34:"test_method_date_greaterequal_less";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:67:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_between()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3249;s:47:" phpDocumentor\Reflection\Location columnNumber";i:127019;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3484;s:47:" phpDocumentor\Reflection\Location columnNumber";i:135210;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:67:"\githusband\Tests\Rule\TestRuledatetime::test_method_date_between()";s:36:" phpDocumentor\Reflection\Fqsen name";s:24:"test_method_date_between";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:59:"\githusband\Tests\Rule\TestRuledatetime::test_method_time()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3486;s:47:" phpDocumentor\Reflection\Location columnNumber";i:135217;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3648;s:47:" phpDocumentor\Reflection\Location columnNumber";i:140687;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:59:"\githusband\Tests\Rule\TestRuledatetime::test_method_time()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"test_method_time";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:65:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_equal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3650;s:47:" phpDocumentor\Reflection\Location columnNumber";i:140694;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3794;s:47:" phpDocumentor\Reflection\Location columnNumber";i:145812;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:65:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_equal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:22:"test_method_time_equal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:69:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_not_equal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3796;s:47:" phpDocumentor\Reflection\Location columnNumber";i:145819;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3875;s:47:" phpDocumentor\Reflection\Location columnNumber";i:148545;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:69:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_not_equal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:26:"test_method_time_not_equal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:72:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_greater_than()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3877;s:47:" phpDocumentor\Reflection\Location columnNumber";i:148552;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3951;s:47:" phpDocumentor\Reflection\Location columnNumber";i:151069;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:72:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_greater_than()";s:36:" phpDocumentor\Reflection\Fqsen name";s:29:"test_method_time_greater_than";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:73:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_greater_equal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:3953;s:47:" phpDocumentor\Reflection\Location columnNumber";i:151076;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:4054;s:47:" phpDocumentor\Reflection\Location columnNumber";i:154545;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:73:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_greater_equal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:30:"test_method_time_greater_equal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:69:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_less_than()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:4056;s:47:" phpDocumentor\Reflection\Location columnNumber";i:154552;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:4142;s:47:" phpDocumentor\Reflection\Location columnNumber";i:157512;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:69:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_less_than()";s:36:" phpDocumentor\Reflection\Fqsen name";s:26:"test_method_time_less_than";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:70:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_less_equal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:4144;s:47:" phpDocumentor\Reflection\Location columnNumber";i:157519;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:4251;s:47:" phpDocumentor\Reflection\Location columnNumber";i:161188;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:70:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_less_equal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:27:"test_method_time_less_equal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:72:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_greater_less()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:4253;s:47:" phpDocumentor\Reflection\Location columnNumber";i:161195;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:4462;s:47:" phpDocumentor\Reflection\Location columnNumber";i:169227;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:72:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_greater_less()";s:36:" phpDocumentor\Reflection\Fqsen name";s:29:"test_method_time_greater_less";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:77:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_greater_lessequal()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:4464;s:47:" phpDocumentor\Reflection\Location columnNumber";i:169234;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:4682;s:47:" phpDocumentor\Reflection\Location columnNumber";i:177636;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:77:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_greater_lessequal()";s:36:" phpDocumentor\Reflection\Fqsen name";s:34:"test_method_time_greater_lessequal";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:77:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_greaterequal_less()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:4684;s:47:" phpDocumentor\Reflection\Location columnNumber";i:177643;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:4902;s:47:" phpDocumentor\Reflection\Location columnNumber";i:186045;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:77:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_greaterequal_less()";s:36:" phpDocumentor\Reflection\Fqsen name";s:34:"test_method_time_greaterequal_less";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:67:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_between()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:4904;s:47:" phpDocumentor\Reflection\Location columnNumber";i:186052;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:5125;s:47:" phpDocumentor\Reflection\Location columnNumber";i:193727;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:67:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_between()";s:36:" phpDocumentor\Reflection\Fqsen name";s:24:"test_method_time_between";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:97:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_between_by_relative_date_notation()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:5127;s:47:" phpDocumentor\Reflection\Location columnNumber";i:193734;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:5255;s:47:" phpDocumentor\Reflection\Location columnNumber";i:198974;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:97:"\githusband\Tests\Rule\TestRuledatetime::test_method_datetime_between_by_relative_date_notation()";s:36:" phpDocumentor\Reflection\Fqsen name";s:54:"test_method_datetime_between_by_relative_date_notation";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:93:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_between_by_relative_date_notation()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:5257;s:47:" phpDocumentor\Reflection\Location columnNumber";i:198981;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:5379;s:47:" phpDocumentor\Reflection\Location columnNumber";i:203524;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:93:"\githusband\Tests\Rule\TestRuledatetime::test_method_time_between_by_relative_date_notation()";s:36:" phpDocumentor\Reflection\Fqsen name";s:50:"test_method_time_between_by_relative_date_notation";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Trait_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Trait_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:13;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Trait_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:5380;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:46:" phpDocumentor\Reflection\Php\Trait_ constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\Trait_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:39:"\githusband\Tests\Rule\TestRuledatetime";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"TestRuledatetime";}s:45:" phpDocumentor\Reflection\Php\Trait_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:23:"Test cases of date time";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:45:"The default timezone is 'Asia/Shanghai', %1$s";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:1:{i:0;O:49:"phpDocumentor\Reflection\DocBlock\Tags\InvalidTag":3:{s:55:" phpDocumentor\Reflection\DocBlock\Tags\InvalidTag name";s:3:"see";s:55:" phpDocumentor\Reflection\DocBlock\Tags\InvalidTag body";s:14:"tests/Test.php";s:60:" phpDocumentor\Reflection\DocBlock\Tags\InvalidTag throwable";O:24:"InvalidArgumentException":7:{s:10:" * message";s:61:""\githusband\Tests\Rule\tests/Test.php" is not a valid Fqsen.";s:17:" Exception string";s:0:"";s:7:" * code";i:0;s:7:" * file";s:94:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection-common/src/Fqsen.php";s:7:" * line";i:57;s:16:" Exception trace";a:56:{i:0;a:6:{s:4:"file";s:98:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/type-resolver/src/FqsenResolver.php";s:4:"line";i:73;s:8:"function";s:11:"__construct";s:5:"class";s:30:"phpDocumentor\Reflection\Fqsen";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:37:"\githusband\Tests\Rule\tests/Test.php";}}i:1;a:6:{s:4:"file";s:98:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/type-resolver/src/FqsenResolver.php";s:4:"line";i:43;s:8:"function";s:35:"resolvePartialStructuralElementName";s:5:"class";s:38:"phpDocumentor\Reflection\FqsenResolver";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:14:"tests/Test.php";i:1;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:2;a:6:{s:4:"file";s:108:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection-docblock/src/DocBlock/Tags/See.php";s:4:"line";i:72;s:8:"function";s:7:"resolve";s:5:"class";s:38:"phpDocumentor\Reflection\FqsenResolver";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:14:"tests/Test.php";i:1;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:3;a:6:{s:4:"file";s:108:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection-docblock/src/DocBlock/Tags/See.php";s:4:"line";i:65;s:8:"function";s:12:"resolveFqsen";s:5:"class";s:42:"phpDocumentor\Reflection\DocBlock\Tags\See";s:4:"type";s:2:"::";s:4:"args";a:3:{i:0;s:14:"tests/Test.php";i:1;s:46:"object(phpDocumentor\Reflection\FqsenResolver)";i:2;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:4;a:6:{s:4:"file";s:118:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection-docblock/src/DocBlock/StandardTagFactory.php";s:4:"line";i:231;s:8:"function";s:6:"create";s:5:"class";s:42:"phpDocumentor\Reflection\DocBlock\Tags\See";s:4:"type";s:2:"::";s:4:"args";a:4:{i:0;s:14:"tests/Test.php";i:1;s:46:"object(phpDocumentor\Reflection\FqsenResolver)";i:2;s:60:"object(phpDocumentor\Reflection\DocBlock\DescriptionFactory)";i:3;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:5;a:6:{s:4:"file";s:118:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection-docblock/src/DocBlock/StandardTagFactory.php";s:4:"line";i:152;s:8:"function";s:9:"createTag";s:5:"class";s:52:"phpDocumentor\Reflection\DocBlock\StandardTagFactory";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:14:"tests/Test.php";i:1;s:3:"see";i:2;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:6;a:6:{s:4:"file";s:118:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection-docblock/src/DocBlock/DescriptionFactory.php";s:4:"line";i:72;s:8:"function";s:6:"create";s:5:"class";s:52:"phpDocumentor\Reflection\DocBlock\StandardTagFactory";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:19:"@see tests/Test.php";i:1;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:7;a:6:{s:4:"file";s:106:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection-docblock/src/DocBlockFactory.php";s:4:"line";i:129;s:8:"function";s:6:"create";s:5:"class";s:52:"phpDocumentor\Reflection\DocBlock\DescriptionFactory";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:62:"The default timezone is 'Asia/Shanghai', {@see tests/Test.php}";i:1;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:8;a:6:{s:4:"file";s:134:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/AbstractFactory.php";s:4:"line";i:79;s:8:"function";s:6:"create";s:5:"class";s:40:"phpDocumentor\Reflection\DocBlockFactory";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:172:"/**
 * Test cases of date time
 * 
 * The default timezone is 'Asia/Shanghai', {@see tests/Test.php}
 * 
 * @see githusband\Rule\RuleClassDatetime
 * @package UnitTests
 */";i:1;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:9;a:6:{s:4:"file";s:125:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/Trait_.php";s:4:"line";i:43;s:8:"function";s:14:"createDocBlock";s:5:"class";s:52:"phpDocumentor\Reflection\Php\Factory\AbstractFactory";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:29:"object(PhpParser\Comment\Doc)";i:1;s:46:"object(phpDocumentor\Reflection\Types\Context)";}}i:10;a:6:{s:4:"file";s:134:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/AbstractFactory.php";s:4:"line";i:57;s:8:"function";s:8:"doCreate";s:5:"class";s:43:"phpDocumentor\Reflection\Php\Factory\Trait_";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:57:"object(phpDocumentor\Reflection\Php\Factory\ContextStack)";i:1;s:34:"object(PhpParser\Node\Stmt\Trait_)";i:2;s:61:"object(phpDocumentor\Reflection\Php\ProjectFactoryStrategies)";}}i:11;a:6:{s:4:"file";s:129:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/Namespace_.php";s:4:"line";i:45;s:8:"function";s:6:"create";s:5:"class";s:52:"phpDocumentor\Reflection\Php\Factory\AbstractFactory";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:57:"object(phpDocumentor\Reflection\Php\Factory\ContextStack)";i:1;s:34:"object(PhpParser\Node\Stmt\Trait_)";i:2;s:61:"object(phpDocumentor\Reflection\Php\ProjectFactoryStrategies)";}}i:12;a:6:{s:4:"file";s:123:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php";s:4:"line";i:128;s:8:"function";s:6:"create";s:5:"class";s:47:"phpDocumentor\Reflection\Php\Factory\Namespace_";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:57:"object(phpDocumentor\Reflection\Php\Factory\ContextStack)";i:1;s:38:"object(PhpParser\Node\Stmt\Namespace_)";i:2;s:61:"object(phpDocumentor\Reflection\Php\ProjectFactoryStrategies)";}}i:13;a:6:{s:4:"file";s:123:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php";s:4:"line";i:115;s:8:"function";s:14:"createElements";s:5:"class";s:41:"phpDocumentor\Reflection\Php\Factory\File";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:57:"object(phpDocumentor\Reflection\Php\Factory\ContextStack)";i:1;a:1:{i:0;s:38:"object(PhpParser\Node\Stmt\Namespace_)";}i:2;s:61:"object(phpDocumentor\Reflection\Php\ProjectFactoryStrategies)";}}i:14;a:6:{s:4:"file";s:123:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php";s:4:"line";i:65;s:8:"function";s:10:"createFile";s:5:"class";s:41:"phpDocumentor\Reflection\Php\Factory\File";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";}}i:15;a:6:{s:4:"file";s:137:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Parser/Middleware/ReEncodingMiddleware.php";s:4:"line";i:43;s:8:"function";s:46:"phpDocumentor\Reflection\Php\Factory\{closure}";s:5:"class";s:41:"phpDocumentor\Reflection\Php\Factory\File";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";}}i:16;a:6:{s:4:"file";s:130:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php";s:4:"line";i:38;s:8:"function";s:7:"execute";s:5:"class";s:52:"phpDocumentor\Parser\Middleware\ReEncodingMiddleware";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";i:1;s:139:"(Closure at /Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php:65)";}}i:17;a:6:{s:4:"file";s:140:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Parser/Middleware/ErrorHandlingMiddleware.php";s:4:"line";i:40;s:8:"function";s:45:"phpDocumentor\Reflection\Middleware\{closure}";s:5:"class";s:48:"phpDocumentor\Reflection\Middleware\ChainFactory";s:4:"type";s:2:"::";s:4:"args";a:1:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";}}i:18;a:6:{s:4:"file";s:130:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php";s:4:"line";i:38;s:8:"function";s:7:"execute";s:5:"class";s:55:"phpDocumentor\Parser\Middleware\ErrorHandlingMiddleware";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";i:1;s:146:"(Closure at /Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:38)";}}i:19;a:6:{s:4:"file";s:132:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Parser/Middleware/CacheMiddleware.php";s:4:"line";i:56;s:8:"function";s:45:"phpDocumentor\Reflection\Middleware\{closure}";s:5:"class";s:48:"phpDocumentor\Reflection\Middleware\ChainFactory";s:4:"type";s:2:"::";s:4:"args";a:1:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";}}i:20;a:6:{s:4:"file";s:79:"/Users/devin/Develop/MyProject/Validation/vendor/symfony/cache/LockRegistry.php";s:4:"line";i:111;s:8:"function";s:41:"phpDocumentor\Parser\Middleware\{closure}";s:5:"class";s:47:"phpDocumentor\Parser\Middleware\CacheMiddleware";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:41:"object(Symfony\Component\Cache\CacheItem)";i:1;b:1;}}i:21;a:6:{s:4:"file";s:88:"/Users/devin/Develop/MyProject/Validation/vendor/symfony/cache/Traits/ContractsTrait.php";s:4:"line";i:102;s:8:"function";s:7:"compute";s:5:"class";s:36:"Symfony\Component\Cache\LockRegistry";s:4:"type";s:2:"::";s:4:"args";a:6:{i:0;s:148:"(Closure at /Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Parser/Middleware/CacheMiddleware.php:54)";i:1;s:41:"object(Symfony\Component\Cache\CacheItem)";i:2;b:1;i:3;s:52:"object(phpDocumentor\Parser\Cache\FilesystemAdapter)";i:4;s:105:"(Closure at /Users/devin/Develop/MyProject/Validation/vendor/symfony/cache/Traits/ContractsTrait.php:102)";i:5;N;}}i:22;a:6:{s:4:"file";s:87:"/Users/devin/Develop/MyProject/Validation/vendor/symfony/contracts/Cache/CacheTrait.php";s:4:"line";i:64;s:8:"function";s:40:"Symfony\Component\Cache\Traits\{closure}";s:5:"class";s:47:"Symfony\Component\Cache\Adapter\AbstractAdapter";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:41:"object(Symfony\Component\Cache\CacheItem)";i:1;b:1;}}i:23;a:6:{s:4:"file";s:88:"/Users/devin/Develop/MyProject/Validation/vendor/symfony/cache/Traits/ContractsTrait.php";s:4:"line";i:85;s:8:"function";s:12:"contractsGet";s:5:"class";s:47:"Symfony\Component\Cache\Adapter\AbstractAdapter";s:4:"type";s:2:"->";s:4:"args";a:6:{i:0;s:52:"object(phpDocumentor\Parser\Cache\FilesystemAdapter)";i:1;s:65:"e33fc10d76401eef629517730eafcadc-ed0910acf9a6113c8fd84106cd2ad73e";i:2;s:104:"(Closure at /Users/devin/Develop/MyProject/Validation/vendor/symfony/cache/Traits/ContractsTrait.php:85)";i:3;d:1;i:4;a:0:{}i:5;N;}}i:24;a:6:{s:4:"file";s:87:"/Users/devin/Develop/MyProject/Validation/vendor/symfony/contracts/Cache/CacheTrait.php";s:4:"line";i:30;s:8:"function";s:5:"doGet";s:5:"class";s:47:"Symfony\Component\Cache\Adapter\AbstractAdapter";s:4:"type";s:2:"->";s:4:"args";a:5:{i:0;s:52:"object(phpDocumentor\Parser\Cache\FilesystemAdapter)";i:1;s:65:"e33fc10d76401eef629517730eafcadc-ed0910acf9a6113c8fd84106cd2ad73e";i:2;s:148:"(Closure at /Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Parser/Middleware/CacheMiddleware.php:54)";i:3;d:1;i:4;a:0:{}}}i:25;a:6:{s:4:"file";s:132:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Parser/Middleware/CacheMiddleware.php";s:4:"line";i:52;s:8:"function";s:3:"get";s:5:"class";s:47:"Symfony\Component\Cache\Adapter\AbstractAdapter";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:65:"e33fc10d76401eef629517730eafcadc-ed0910acf9a6113c8fd84106cd2ad73e";i:1;s:148:"(Closure at /Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Parser/Middleware/CacheMiddleware.php:54)";}}i:26;a:6:{s:4:"file";s:130:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php";s:4:"line";i:38;s:8:"function";s:7:"execute";s:5:"class";s:47:"phpDocumentor\Parser\Middleware\CacheMiddleware";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";i:1;s:146:"(Closure at /Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:38)";}}i:27;a:6:{s:4:"file";s:135:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Parser/Middleware/EmittingMiddleware.php";s:4:"line";i:38;s:8:"function";s:45:"phpDocumentor\Reflection\Middleware\{closure}";s:5:"class";s:48:"phpDocumentor\Reflection\Middleware\ChainFactory";s:4:"type";s:2:"::";s:4:"args";a:1:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";}}i:28;a:6:{s:4:"file";s:130:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php";s:4:"line";i:38;s:8:"function";s:7:"execute";s:5:"class";s:50:"phpDocumentor\Parser\Middleware\EmittingMiddleware";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";i:1;s:146:"(Closure at /Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:38)";}}i:29;a:6:{s:4:"file";s:136:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Parser/Middleware/StopwatchMiddleware.php";s:4:"line";i:42;s:8:"function";s:45:"phpDocumentor\Reflection\Middleware\{closure}";s:5:"class";s:48:"phpDocumentor\Reflection\Middleware\ChainFactory";s:4:"type";s:2:"::";s:4:"args";a:1:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";}}i:30;a:6:{s:4:"file";s:130:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php";s:4:"line";i:38;s:8:"function";s:7:"execute";s:5:"class";s:51:"phpDocumentor\Parser\Middleware\StopwatchMiddleware";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";i:1;s:146:"(Closure at /Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Middleware/ChainFactory.php:38)";}}i:31;a:6:{s:4:"file";s:123:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/File.php";s:4:"line";i:90;s:8:"function";s:45:"phpDocumentor\Reflection\Middleware\{closure}";s:5:"class";s:48:"phpDocumentor\Reflection\Middleware\ChainFactory";s:4:"type";s:2:"::";s:4:"args";a:1:{i:0;s:63:"object(phpDocumentor\Reflection\Php\Factory\File\CreateCommand)";}}i:32;a:6:{s:4:"file";s:134:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/Factory/AbstractFactory.php";s:4:"line";i:57;s:8:"function";s:8:"doCreate";s:5:"class";s:41:"phpDocumentor\Reflection\Php\Factory\File";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:57:"object(phpDocumentor\Reflection\Php\Factory\ContextStack)";i:1;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:2;s:61:"object(phpDocumentor\Reflection\Php\ProjectFactoryStrategies)";}}i:33;a:6:{s:4:"file";s:125:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/reflection/src/phpDocumentor/Reflection/Php/ProjectFactory.php";s:4:"line";i:125;s:8:"function";s:6:"create";s:5:"class";s:52:"phpDocumentor\Reflection\Php\Factory\AbstractFactory";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:57:"object(phpDocumentor\Reflection\Php\Factory\ContextStack)";i:1;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:2;s:61:"object(phpDocumentor\Reflection\Php\ProjectFactoryStrategies)";}}i:34;a:6:{s:4:"file";s:112:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Parser/Parser.php";s:4:"line";i:198;s:8:"function";s:6:"create";s:5:"class";s:43:"phpDocumentor\Reflection\Php\ProjectFactory";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:16:"Untitled project";i:1;a:23:{i:0;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:1;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:2;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:3;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:4;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:5;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:6;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:7;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:8;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:9;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:10;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:11;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:12;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:13;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:14;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:15;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:16;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:17;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:18;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:19;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:20;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:21;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:22;s:42:"object(phpDocumentor\Parser\FlySystemFile)";}}}i:35;a:6:{s:4:"file";s:131:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Pipeline/Stage/Parser/ParseFiles.php";s:4:"line";i:53;s:8:"function";s:5:"parse";s:5:"class";s:27:"phpDocumentor\Parser\Parser";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;a:23:{i:0;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:1;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:2;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:3;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:4;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:5;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:6;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:7;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:8;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:9;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:10;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:11;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:12;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:13;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:14;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:15;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:16;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:17;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:18;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:19;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:20;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:21;s:42:"object(phpDocumentor\Parser\FlySystemFile)";i:22;s:42:"object(phpDocumentor\Parser\FlySystemFile)";}}}i:36;a:6:{s:4:"file";s:133:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Pipeline/Stage/TimedStageDecorator.php";s:4:"line";i:40;s:8:"function";s:8:"__invoke";s:5:"class";s:46:"phpDocumentor\Pipeline\Stage\Parser\ParseFiles";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:57:"object(phpDocumentor\Pipeline\Stage\Parser\ApiSetPayload)";}}i:37;a:6:{s:4:"file";s:96:"/Users/devin/Develop/MyProject/Validation/vendor/league/pipeline/src/FingersCrossedProcessor.php";s:4:"line";i:11;s:8:"function";s:8:"__invoke";s:5:"class";s:48:"phpDocumentor\Pipeline\Stage\TimedStageDecorator";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:57:"object(phpDocumentor\Pipeline\Stage\Parser\ApiSetPayload)";}}i:38;a:6:{s:4:"file";s:81:"/Users/devin/Develop/MyProject/Validation/vendor/league/pipeline/src/Pipeline.php";s:4:"line";i:34;s:8:"function";s:7:"process";s:5:"class";s:39:"League\Pipeline\FingersCrossedProcessor";s:4:"type";s:2:"->";s:4:"args";a:4:{i:0;s:57:"object(phpDocumentor\Pipeline\Stage\Parser\ApiSetPayload)";i:1;s:56:"object(phpDocumentor\Pipeline\Stage\TimedStageDecorator)";i:2;s:56:"object(phpDocumentor\Pipeline\Stage\TimedStageDecorator)";i:3;s:56:"object(phpDocumentor\Pipeline\Stage\TimedStageDecorator)";}}i:39;a:6:{s:4:"file";s:139:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Pipeline/Stage/ParseApiDocumentationSets.php";s:4:"line";i:31;s:8:"function";s:7:"process";s:5:"class";s:24:"League\Pipeline\Pipeline";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:57:"object(phpDocumentor\Pipeline\Stage\Parser\ApiSetPayload)";}}i:40;a:6:{s:4:"file";s:133:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Pipeline/Stage/TimedStageDecorator.php";s:4:"line";i:40;s:8:"function";s:8:"__invoke";s:5:"class";s:54:"phpDocumentor\Pipeline\Stage\ParseApiDocumentationSets";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:44:"object(phpDocumentor\Pipeline\Stage\Payload)";}}i:41;a:6:{s:4:"file";s:96:"/Users/devin/Develop/MyProject/Validation/vendor/league/pipeline/src/FingersCrossedProcessor.php";s:4:"line";i:11;s:8:"function";s:8:"__invoke";s:5:"class";s:48:"phpDocumentor\Pipeline\Stage\TimedStageDecorator";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:44:"object(phpDocumentor\Pipeline\Stage\Payload)";}}i:42;a:6:{s:4:"file";s:81:"/Users/devin/Develop/MyProject/Validation/vendor/league/pipeline/src/Pipeline.php";s:4:"line";i:34;s:8:"function";s:7:"process";s:5:"class";s:39:"League\Pipeline\FingersCrossedProcessor";s:4:"type";s:2:"->";s:4:"args";a:5:{i:0;s:44:"object(phpDocumentor\Pipeline\Stage\Payload)";i:1;s:56:"object(phpDocumentor\Pipeline\Stage\TimedStageDecorator)";i:2;s:56:"object(phpDocumentor\Pipeline\Stage\TimedStageDecorator)";i:3;s:56:"object(phpDocumentor\Pipeline\Stage\TimedStageDecorator)";i:4;s:56:"object(phpDocumentor\Pipeline\Stage\TimedStageDecorator)";}}i:43;a:6:{s:4:"file";s:81:"/Users/devin/Develop/MyProject/Validation/vendor/league/pipeline/src/Pipeline.php";s:4:"line";i:39;s:8:"function";s:7:"process";s:5:"class";s:24:"League\Pipeline\Pipeline";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:44:"object(phpDocumentor\Pipeline\Stage\Payload)";}}i:44;a:6:{s:4:"file";s:133:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Pipeline/Stage/TimedStageDecorator.php";s:4:"line";i:40;s:8:"function";s:8:"__invoke";s:5:"class";s:24:"League\Pipeline\Pipeline";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:44:"object(phpDocumentor\Pipeline\Stage\Payload)";}}i:45;a:6:{s:4:"file";s:96:"/Users/devin/Develop/MyProject/Validation/vendor/league/pipeline/src/FingersCrossedProcessor.php";s:4:"line";i:11;s:8:"function";s:8:"__invoke";s:5:"class";s:48:"phpDocumentor\Pipeline\Stage\TimedStageDecorator";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;s:44:"object(phpDocumentor\Pipeline\Stage\Payload)";}}i:46;a:6:{s:4:"file";s:81:"/Users/devin/Develop/MyProject/Validation/vendor/league/pipeline/src/Pipeline.php";s:4:"line";i:34;s:8:"function";s:7:"process";s:5:"class";s:39:"League\Pipeline\FingersCrossedProcessor";s:4:"type";s:2:"->";s:4:"args";a:4:{i:0;s:44:"object(phpDocumentor\Pipeline\Stage\Payload)";i:1;s:56:"object(phpDocumentor\Pipeline\Stage\TimedStageDecorator)";i:2;s:56:"object(phpDocumentor\Pipeline\Stage\TimedStageDecorator)";i:3;s:56:"object(phpDocumentor\Pipeline\Stage\TimedStageDecorator)";}}i:47;a:6:{s:4:"file";s:81:"/Users/devin/Develop/MyProject/Validation/vendor/league/pipeline/src/Pipeline.php";s:4:"line";i:39;s:8:"function";s:7:"process";s:5:"class";s:24:"League\Pipeline\Pipeline";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;a:31:{s:6:"target";N;s:12:"cache-folder";N;s:8:"filename";a:0:{}s:9:"directory";a:0:{}s:8:"encoding";N;s:10:"extensions";a:0:{}s:6:"ignore";a:0:{}s:11:"ignore-tags";a:0:{}s:6:"hidden";b:0;s:15:"ignore-symlinks";N;s:7:"markers";a:0:{}s:5:"title";N;s:5:"force";b:0;s:8:"validate";b:0;s:10:"visibility";a:0:{}s:18:"defaultpackagename";N;s:10:"sourcecode";N;s:8:"template";a:0:{}s:12:"examples-dir";N;s:7:"setting";a:0:{}s:13:"list-settings";b:0;s:12:"parseprivate";b:0;s:4:"help";b:0;s:5:"quiet";b:0;s:7:"verbose";b:0;s:7:"version";b:0;s:4:"ansi";N;s:14:"no-interaction";b:0;s:6:"config";s:15:"docs/phpdoc.xml";s:14:"extensions-dir";a:1:{i:0;s:60:"/Users/devin/Develop/MyProject/Validation/.phpdoc/extensions";}s:3:"log";N;}}}i:48;a:6:{s:4:"file";s:133:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Console/Command/Project/RunCommand.php";s:4:"line";i:273;s:8:"function";s:8:"__invoke";s:5:"class";s:24:"League\Pipeline\Pipeline";s:4:"type";s:2:"->";s:4:"args";a:1:{i:0;a:31:{s:6:"target";N;s:12:"cache-folder";N;s:8:"filename";a:0:{}s:9:"directory";a:0:{}s:8:"encoding";N;s:10:"extensions";a:0:{}s:6:"ignore";a:0:{}s:11:"ignore-tags";a:0:{}s:6:"hidden";b:0;s:15:"ignore-symlinks";N;s:7:"markers";a:0:{}s:5:"title";N;s:5:"force";b:0;s:8:"validate";b:0;s:10:"visibility";a:0:{}s:18:"defaultpackagename";N;s:10:"sourcecode";N;s:8:"template";a:0:{}s:12:"examples-dir";N;s:7:"setting";a:0:{}s:13:"list-settings";b:0;s:12:"parseprivate";b:0;s:4:"help";b:0;s:5:"quiet";b:0;s:7:"verbose";b:0;s:7:"version";b:0;s:4:"ansi";N;s:14:"no-interaction";b:0;s:6:"config";s:15:"docs/phpdoc.xml";s:14:"extensions-dir";a:1:{i:0;s:60:"/Users/devin/Develop/MyProject/Validation/.phpdoc/extensions";}s:3:"log";N;}}}i:49;a:6:{s:4:"file";s:84:"/Users/devin/Develop/MyProject/Validation/vendor/symfony/console/Command/Command.php";s:4:"line";i:326;s:8:"function";s:7:"execute";s:5:"class";s:48:"phpDocumentor\Console\Command\Project\RunCommand";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:49:"object(Symfony\Component\Console\Input\ArgvInput)";i:1;s:54:"object(Symfony\Component\Console\Output\ConsoleOutput)";}}i:50;a:6:{s:4:"file";s:80:"/Users/devin/Develop/MyProject/Validation/vendor/symfony/console/Application.php";s:4:"line";i:1096;s:8:"function";s:3:"run";s:5:"class";s:41:"Symfony\Component\Console\Command\Command";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:49:"object(Symfony\Component\Console\Input\ArgvInput)";i:1;s:54:"object(Symfony\Component\Console\Output\ConsoleOutput)";}}i:51;a:6:{s:4:"file";s:80:"/Users/devin/Develop/MyProject/Validation/vendor/symfony/console/Application.php";s:4:"line";i:324;s:8:"function";s:12:"doRunCommand";s:5:"class";s:37:"Symfony\Component\Console\Application";s:4:"type";s:2:"->";s:4:"args";a:3:{i:0;s:56:"object(phpDocumentor\Console\Command\Project\RunCommand)";i:1;s:49:"object(Symfony\Component\Console\Input\ArgvInput)";i:2;s:54:"object(Symfony\Component\Console\Output\ConsoleOutput)";}}i:52;a:6:{s:4:"file";s:118:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/src/phpDocumentor/Console/Application.php";s:4:"line";i:78;s:8:"function";s:5:"doRun";s:5:"class";s:37:"Symfony\Component\Console\Application";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:49:"object(Symfony\Component\Console\Input\ArgvInput)";i:1;s:54:"object(Symfony\Component\Console\Output\ConsoleOutput)";}}i:53;a:6:{s:4:"file";s:80:"/Users/devin/Develop/MyProject/Validation/vendor/symfony/console/Application.php";s:4:"line";i:175;s:8:"function";s:5:"doRun";s:5:"class";s:33:"phpDocumentor\Console\Application";s:4:"type";s:2:"->";s:4:"args";a:2:{i:0;s:49:"object(Symfony\Component\Console\Input\ArgvInput)";i:1;s:54:"object(Symfony\Component\Console\Output\ConsoleOutput)";}}i:54;a:6:{s:4:"file";s:87:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/bin/phpdoc";s:4:"line";i:14;s:8:"function";s:3:"run";s:5:"class";s:37:"Symfony\Component\Console\Application";s:4:"type";s:2:"->";s:4:"args";a:0:{}}i:55;a:4:{s:4:"file";s:59:"/Users/devin/Develop/MyProject/Validation/vendor/bin/phpdoc";s:4:"line";i:120;s:4:"args";a:1:{i:0;s:87:"/Users/devin/Develop/MyProject/Validation/vendor/phpdocumentor/phpdocumentor/bin/phpdoc";}s:8:"function";s:7:"include";}}s:19:" Exception previous";N;}}}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:42:"phpDocumentor\Reflection\DocBlock\Tags\See":3:{s:7:" * name";s:3:"see";s:14:" * description";N;s:9:" * refers";O:54:"phpDocumentor\Reflection\DocBlock\Tags\Reference\Fqsen":1:{s:61:" phpDocumentor\Reflection\DocBlock\Tags\Reference\Fqsen fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:56:"\githusband\Tests\Rule\githusband\Rule\RuleClassDatetime";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"RuleClassDatetime";}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:9:"UnitTests";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:21:"githusband\Tests\Rule";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Trait_ metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Trait_ attributes";a:0:{}}}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"ed0910acf9a6113c8fd84106cd2ad73e";s:39:" phpDocumentor\Reflection\Php\File path";s:31:"tests/Rule/TestRuleDatetime.php";s:41:" phpDocumentor\Reflection\Php\File source";s:203528:"<?php

namespace githusband\Tests\Rule;

/**
 * Test cases of date time
 * 
 * The default timezone is 'Asia/Shanghai', {@see tests/Test.php}
 * 
 * @see githusband\Rule\RuleClassDatetime
 * @package UnitTests
 */
trait TestRuledatetime
{
    protected function test_method_datetime()
    {
        $rules = [
            "symbol" => [
                "A_datetime" => "optional|datetime",
                "B_datetime" => "optional|datetime[Y-m-d]",
                "C_datetime" => "optional|datetime[Y/m/d]",
                "D_datetime" => "optional|datetime[Y/m-d]",
                "E_datetime" => "optional|datetime[d/m/Y]",
                "F_datetime" => "optional|datetime[Y-m-d H:i:s]",
                "G_datetime" => "optional|datetime[Y/m/d H:i:s]",
                "H_datetime" => "optional|datetime[YmdHis]",
                "I_datetime" => "optional|datetime[ATOM]",
                "J_datetime" => "optional|datetime[COOKIE]",
                "K_datetime" => "optional|datetime[RFC3339]",
                // "L_datetime" => "optional|datetime[RFC3339_EXTENDED]", // PHP 7+
                "M_datetime" => "optional|datetime[W3C]",
            ],
            "method" => [
                "A_datetime" => "optional|is_datetime",
                "B_datetime" => "optional|is_datetime[Y-m-d]",
                "C_datetime" => "optional|is_datetime[Y/m/d]",
                "D_datetime" => "optional|is_datetime[Y/m-d]",
                "E_datetime" => "optional|is_datetime[d/m/Y]",
                "F_datetime" => "optional|is_datetime[Y-m-d H:i:s]",
                "G_datetime" => "optional|is_datetime[Y/m/d H:i:s]",
                "H_datetime" => "optional|is_datetime[YmdHis]",
                "I_datetime" => "optional|is_datetime[ATOM]",
                "J_datetime" => "optional|is_datetime[COOKIE]",
                "K_datetime" => "optional|is_datetime[RFC3339]",
                // "L_datetime" => "optional|is_datetime[RFC3339_EXTENDED]", // PHP 7+
                "M_datetime" => "optional|is_datetime[W3C]",
            ],
        ];

        $cases = [
            "Valid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "20240423",
                ]
            ],
            "Valid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => '2024-04-23',
                ]
            ],
            "Valid_A_datetime_3" => [
                "data" => [
                    "A_datetime" => '04/23/2024',
                ]
            ],
            "Valid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => '2024-04-23',
                ]
            ],
            "Valid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => '2024/04/23',
                ]
            ],
            "Valid_D_datetime_1" => [
                "data" => [
                    "D_datetime" => '2024/04-23',
                ]
            ],
            "Valid_E_datetime_1" => [
                "data" => [
                    "E_datetime" => '23/04/2024',
                ]
            ],
            "Valid_F_datetime_1" => [
                "data" => [
                    "F_datetime" => '2024-04-23 12:00:00',
                ]
            ],
            "Valid_G_datetime_1" => [
                "data" => [
                    "G_datetime" => '2024/04/23 12:00:00',
                ]
            ],
            "Valid_H_datetime_1" => [
                "data" => [
                    "H_datetime" => '20240423000000',
                ]
            ],
            "Valid_I_datetime_1" => [
                "data" => [
                    "I_datetime" => '2024-04-23T12:00:00+08:00',
                ]
            ],
            "Valid_J_datetime_1" => [
                "data" => [
                    "J_datetime" => 'Wed, 15-Apr-2024 12:00:00 UTC',
                ]
            ],
            "Valid_K_datetime_1" => [
                "data" => [
                    "K_datetime" => '2024-04-23T12:00:00+08:00',
                ]
            ],
            // "Valid_L_datetime_1" => [
            //     "data" => [
            //         "L_datetime" => '2024-04-23T12:00:00.000+08:00',
            //     ]
            // ],
            "Valid_M_datetime_1" => [
                "data" => [
                    "M_datetime" => '2024-04-23T12:00:00+08:00',
                ]
            ],

            /**
             * Invalid cases
             */
            "Invalid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "12345678",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime"]
            ],
            "Invalid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "23/04/2024",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime"]
            ],
            "Invalid_A_datetime_3" => [
                "data" => [
                    "A_datetime" => "2024-04-50",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime"]
            ],
            "Invalid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-50",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime in format Y-m-d"]
            ],
            "Invalid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024/04/23",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime in format Y-m-d"]
            ],
            "Invalid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "2024/04/50",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime in format Y/m/d"]
            ],
            "Invalid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => "2024/04-23",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime in format Y/m/d"]
            ],
            "Invalid_D_datetime_1" => [
                "data" => [
                    "D_datetime" => "2024/04-50",
                ],
                "expected_msg" => ["D_datetime" => "D_datetime must be a valid datetime in format Y/m-d"]
            ],
            "Invalid_D_datetime_2" => [
                "data" => [
                    "D_datetime" => "2024-04-23",
                ],
                "expected_msg" => ["D_datetime" => "D_datetime must be a valid datetime in format Y/m-d"]
            ],
            "Invalid_E_datetime_1" => [
                "data" => [
                    "E_datetime" => "50/04/2024",
                ],
                "expected_msg" => ["E_datetime" => "E_datetime must be a valid datetime in format d/m/Y"]
            ],
            "Invalid_E_datetime_2" => [
                "data" => [
                    "E_datetime" => "2024-04-23",
                ],
                "expected_msg" => ["E_datetime" => "E_datetime must be a valid datetime in format d/m/Y"]
            ],
            "Invalid_F_datetime_1" => [
                "data" => [
                    "F_datetime" => "2024-04-23 23:60:00",
                ],
                "expected_msg" => ["F_datetime" => "F_datetime must be a valid datetime in format Y-m-d H:i:s"]
            ],
            "Invalid_F_datetime_2" => [
                "data" => [
                    "F_datetime" => "2024-04-23+23:59:59",
                ],
                "expected_msg" => ["F_datetime" => "F_datetime must be a valid datetime in format Y-m-d H:i:s"]
            ],
            "Invalid_G_datetime_1" => [
                "data" => [
                    "G_datetime" => "2024/04/23 23:60:00",
                ],
                "expected_msg" => ["G_datetime" => "G_datetime must be a valid datetime in format Y/m/d H:i:s"]
            ],
            "Invalid_G_datetime_2" => [
                "data" => [
                    "G_datetime" => "2024/04/23+23:59:59",
                ],
                "expected_msg" => ["G_datetime" => "G_datetime must be a valid datetime in format Y/m/d H:i:s"]
            ],
            "Invalid_H_datetime_1" => [
                "data" => [
                    "H_datetime" => "20240423236000",
                ],
                "expected_msg" => ["H_datetime" => "H_datetime must be a valid datetime in format YmdHis"]
            ],
            "Invalid_H_datetime_2" => [
                "data" => [
                    "H_datetime" => "202404232359590",
                ],
                "expected_msg" => ["H_datetime" => "H_datetime must be a valid datetime in format YmdHis"]
            ],
            "Invalid_I_datetime_1" => [
                "data" => [
                    "I_datetime" => '2024-04-23T25:00:00+08:00',
                ],
                "expected_msg" => ["I_datetime" => "I_datetime must be a valid datetime in format ATOM"]
            ],
            "Invalid_I_datetime_2" => [
                "data" => [
                    "I_datetime" => '2024-04-23 23:00:00+08:00',
                ],
                "expected_msg" => ["I_datetime" => "I_datetime must be a valid datetime in format ATOM"]
            ],
            "Invalid_J_datetime_1" => [
                "data" => [
                    "J_datetime" => 'Wed 15-Apr-2024 15:52:01 UTC',
                ],
                "expected_msg" => ["J_datetime" => "J_datetime must be a valid datetime in format COOKIE"]
            ],
            "Invalid_J_datetime_2" => [
                "data" => [
                    "J_datetime" => 'Wed, 50-Apr-2024 15:52:01 UTC',
                ],
                "expected_msg" => ["J_datetime" => "J_datetime must be a valid datetime in format COOKIE"]
            ],
            "Invalid_K_datetime_1" => [
                "data" => [
                    "K_datetime" => '2024-04-23T25:00:00+08:00',
                ],
                "expected_msg" => ["K_datetime" => "K_datetime must be a valid datetime in format RFC3339"]
            ],
            "Invalid_K_datetime_2" => [
                "data" => [
                    "K_datetime" => '2024-04-23 23:00:00+08:00',
                ],
                "expected_msg" => ["K_datetime" => "K_datetime must be a valid datetime in format RFC3339"]
            ],
            // "Invalid_L_datetime_1" => [
            //     "data" => [
            //         "L_datetime" => '2024-04-23T25:00:00.000+08:00',
            //     ],
            //     "expected_msg" => ["L_datetime" => "L_datetime must be a valid datetime in format RFC3339_EXTENDED"]
            // ],
            // "Invalid_L_datetime_2" => [
            //     "data" => [
            //         "L_datetime" => '2024-04-23T23:00:00.0001+08:00',
            //     ],
            //     "expected_msg" => ["L_datetime" => "L_datetime must be a valid datetime in format RFC3339_EXTENDED"]
            // ],
            "Invalid_M_datetime_1" => [
                "data" => [
                    "M_datetime" => '2024-04-23T25:00:0008:00',
                ],
                "expected_msg" => ["M_datetime" => "M_datetime must be a valid datetime in format W3C"]
            ],
            "Invalid_M_datetime_2" => [
                "data" => [
                    "M_datetime" => '2024-04-23 23:00:00+08:00',
                ],
                "expected_msg" => ["M_datetime" => "M_datetime must be a valid datetime in format W3C"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_datetime_equal()
    {
        $rules = [
            "symbol" => [
                "A_datetime" => "optional|datetime=[2024-04-23]",
                "B_datetime" => "optional|datetime=[2024-04-23,Y-m-d]",
                "C_datetime" => "optional|datetime=[2024-04-23,d/Y/m]",
                "D_datetime" => "optional|datetime=[2024-04-23 01,Y-m-d H]",
                "E_datetime" => "optional|datetime=[2024-04-23 01:01,Y-m-d H:i]",
                "F_datetime" => "optional|datetime=[2024-04-23 01:01:01,Y-m-d H:i:s]",
                "G_datetime" => "optional|datetime=[2024-04-23 01:01,Y/m/d H:i]",
                "H_datetime" => "optional|datetime=[2024-04-23 01:01:01,Y/m/d H:i:s]",
                "I_datetime" => "optional|datetime=[2024-04-23T01:01:01+08:00,RFC3339]",
                "J_datetime" => "optional|datetime=[2024-04-23 01:01:01,RFC3339]",  // The default timezone is 'Asia/Shanghai', {@see tests/Test.php}
                "K_datetime" => "optional|datetime=[Tue\, 23-Apr-2024 01:01:01 Asia/Shanghai,COOKIE]",
                "L_datetime" => "optional|datetime=[2024-04-23 01:01:01,COOKIE]",   // The default timezone is 'Asia/Shanghai', {@see tests/Test.php}
                "A_exc" => "optional|datetime=[2024-04-50]",
                "C_exc" => "optional|datetime=[2024-13-23,d/Y/m]",
                "F_exc" => "optional|datetime=[2024-04-23 25:01:01,Y-m-d H:i:s]",
                "I_exc" => "optional|datetime=[2024-04-23T01:0101+08:00,RFC3339]",
                "K_exc" => "optional|datetime=[Tue\, 23-Apri-2024 01:01:01 Asia/Shanghai,COOKIE]",
            ],
            "method" => [
                "A_datetime" => "optional|datetime_equal[2024-04-23]",
                "B_datetime" => "optional|datetime_equal[2024-04-23,Y-m-d]",
                "C_datetime" => "optional|datetime_equal[2024-04-23,d/Y/m]",
                "D_datetime" => "optional|datetime_equal[2024-04-23 01,Y-m-d H]",
                "E_datetime" => "optional|datetime_equal[2024-04-23 01:01,Y-m-d H:i]",
                "F_datetime" => "optional|datetime_equal[2024-04-23 01:01:01,Y-m-d H:i:s]",
                "G_datetime" => "optional|datetime_equal[2024-04-23 01:01,Y/m/d H:i]",
                "H_datetime" => "optional|datetime_equal[2024-04-23 01:01:01,Y/m/d H:i:s]",
                "I_datetime" => "optional|datetime_equal[2024-04-23T01:01:01+08:00,RFC3339]",
                "J_datetime" => "optional|datetime_equal[2024-04-23 01:01:01,RFC3339]",  // The default timezone is 'Asia/Shanghai', {@see tests/Test.php}
                "K_datetime" => "optional|datetime_equal[Tue\, 23-Apr-2024 01:01:01 Asia/Shanghai,COOKIE]",
                "L_datetime" => "optional|datetime_equal[2024-04-23 01:01:01,COOKIE]",   // The default timezone is 'Asia/Shanghai', {@see tests/Test.php}
                "A_exc" => "optional|datetime_equal[2024-04-50]",
                "A_exc" => "optional|datetime_equal[2024-04-50]",
                "C_exc" => "optional|datetime_equal[2024-13-23,d/Y/m]",
                "F_exc" => "optional|datetime_equal[2024-04-23 25:01:01,Y-m-d H:i:s]",
                "I_exc" => "optional|datetime_equal[2024-04-23T01:0101+08:00,RFC3339]",
                "K_exc" => "optional|datetime_equal[Tue\, 23-Apri-2024 01:01:01 Asia/Shanghai,COOKIE]",
            ]
        ];

        $cases = [
            "Valid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "20240423",
                ]
            ],
            "Valid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => '2024-04-23',
                ]
            ],
            "Valid_A_datetime_3" => [
                "data" => [
                    "A_datetime" => '04/23/2024',
                ]
            ],
            "Valid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => '2024-04-23',
                ]
            ],
            "Valid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => '23/2024/04',
                ]
            ],
            "Valid_D_datetime_1" => [
                "data" => [
                    "D_datetime" => '2024-04-23 01',
                ]
            ],
            "Valid_D_datetime_2" => [
                "data" => [
                    "D_datetime" => '2024-04-23 1',
                ]
            ],
            "Valid_E_datetime_1" => [
                "data" => [
                    "E_datetime" => '2024-04-23 01:01',
                ]
            ],
            "Valid_E_datetime_1" => [
                "data" => [
                    "E_datetime" => '2024-04-23 01:01',
                ]
            ],
            "Valid_F_datetime_1" => [
                "data" => [
                    "F_datetime" => '2024-04-23 01:01:01',
                ]
            ],
            "Valid_G_datetime_1" => [
                "data" => [
                    "G_datetime" => '2024/04/23 01:01',
                ]
            ],
            "Valid_H_datetime_1" => [
                "data" => [
                    "H_datetime" => '2024/04/23 01:01:01',
                ]
            ],
            "Valid_I_datetime_1" => [
                "data" => [
                    "I_datetime" => '2024-04-23T01:01:01+08:00',
                ]
            ],
            "Valid_I_datetime_2" => [
                "data" => [
                    "I_datetime" => '2024-04-22T17:01:01+00:00',
                ]
            ],
            "Valid_J_datetime_1" => [
                "data" => [
                    "J_datetime" => '2024-04-23T01:01:01+08:00',
                ]
            ],
            "Valid_J_datetime_2" => [
                "data" => [
                    "J_datetime" => '2024-04-22T17:01:01+00:00',
                ]
            ],
            "Valid_K_datetime_1" => [
                "data" => [
                    "K_datetime" => 'Tue, 23-Apr-2024 01:01:01 Asia/Shanghai',
                ]
            ],
            "Valid_K_datetime_2" => [
                "data" => [
                    "K_datetime" => 'Mon, 22-Apr-2024 17:01:01 UTC',
                ]
            ],
            "Valid_L_datetime_1" => [
                "data" => [
                    "L_datetime" => 'Tue, 23-Apr-2024 01:01:01 Asia/Shanghai',
                ]
            ],
            "Valid_L_datetime_2" => [
                "data" => [
                    "L_datetime" => 'Mon, 22-Apr-2024 17:01:01 UTC',
                ]
            ],

            /**
             * Invalid cases
             */
            "Invalid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "12345678",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime"]
            ],
            "Invalid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "23/04/2024",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime"]
            ],
            "Invalid_A_datetime_3" => [
                "data" => [
                    "A_datetime" => "2024-04-50",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime"]
            ],
            "Invalid_A_datetime_4" => [
                "data" => [
                    "A_datetime" => "2024-05-01",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and equal to 2024-04-23"]
            ],
            "Invalid_A_datetime_5" => [
                "data" => [
                    "A_datetime" => "2024/05/01",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and equal to 2024-04-23"]
            ],
            "Invalid_A_datetime_6" => [
                "data" => [
                    "A_datetime" => "05/01/2024",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and equal to 2024-04-23"]
            ],
            "Invalid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024/04/23",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime in format Y-m-d"]
            ],
            "Invalid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024-04-23 01:00:00",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime in format Y-m-d"]
            ],
            "Invalid_B_datetime_3" => [
                "data" => [
                    "B_datetime" => "2024-04-24",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and equal to 2024-04-23"]
            ],
            "Invalid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "2024/04/23",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime in format d/Y/m"]
            ],
            "Invalid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => "2024-04-23 01:00:00",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime in format d/Y/m"]
            ],
            "Invalid_C_datetime_3" => [
                "data" => [
                    "C_datetime" => "24/2024/04",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime and equal to 2024-04-23"]
            ],
            "Invalid_D_datetime_1" => [
                "data" => [
                    "D_datetime" => "2024-04-23 25",
                ],
                "expected_msg" => ["D_datetime" => "D_datetime must be a valid datetime in format Y-m-d H"]
            ],
            "Invalid_D_datetime_2" => [
                "data" => [
                    "D_datetime" => "2024-04-23 02",
                ],
                "expected_msg" => ["D_datetime" => "D_datetime must be a valid datetime and equal to 2024-04-23 01"]
            ],
            "Invalid_D_datetime_3" => [
                "data" => [
                    "D_datetime" => "2024-04-24 01",
                ],
                "expected_msg" => ["D_datetime" => "D_datetime must be a valid datetime and equal to 2024-04-23 01"]
            ],
            "Invalid_E_datetime_1" => [
                "data" => [
                    "E_datetime" => "2024-04-24 01",
                ],
                "expected_msg" => ["E_datetime" => "E_datetime must be a valid datetime in format Y-m-d H:i"]
            ],
            "Invalid_E_datetime_2" => [
                "data" => [
                    "E_datetime" => "2024-04-24 01:02",
                ],
                "expected_msg" => ["E_datetime" => "E_datetime must be a valid datetime and equal to 2024-04-23 01:01"]
            ],
            "Invalid_F_datetime_1" => [
                "data" => [
                    "F_datetime" => "2024-04-23 01:01",
                ],
                "expected_msg" => ["F_datetime" => "F_datetime must be a valid datetime in format Y-m-d H:i:s"]
            ],
            "Invalid_F_datetime_2" => [
                "data" => [
                    "F_datetime" => "2024-04-23 01:01:02",
                ],
                "expected_msg" => ["F_datetime" => "F_datetime must be a valid datetime and equal to 2024-04-23 01:01:01"]
            ],
            "Invalid_G_datetime_1" => [
                "data" => [
                    "G_datetime" => "2024/04/23 01:61",
                ],
                "expected_msg" => ["G_datetime" => "G_datetime must be a valid datetime in format Y/m/d H:i"]
            ],
            "Invalid_G_datetime_2" => [
                "data" => [
                    "G_datetime" => "2024/04/23 01:02",
                ],
                "expected_msg" => ["G_datetime" => "G_datetime must be a valid datetime and equal to 2024-04-23 01:01"]
            ],
            "Invalid_H_datetime_1" => [
                "data" => [
                    "H_datetime" => "2024/04/23 01:01:60",
                ],
                "expected_msg" => ["H_datetime" => "H_datetime must be a valid datetime in format Y/m/d H:i:s"]
            ],
            "Invalid_H_datetime_2" => [
                "data" => [
                    "H_datetime" => "2024/04/23 01:01:02",
                ],
                "expected_msg" => ["H_datetime" => "H_datetime must be a valid datetime and equal to 2024-04-23 01:01:01"]
            ],
            "Invalid_I_datetime_1" => [
                "data" => [
                    "I_datetime" => '2024-04-23T01:01:01&08:00',
                ],
                "expected_msg" => ["I_datetime" => "I_datetime must be a valid datetime in format RFC3339"]
            ],
            "Invalid_I_datetime_2" => [
                "data" => [
                    "I_datetime" => '2024-04-23T01:01:02+08:00',
                ],
                "expected_msg" => ["I_datetime" => "I_datetime must be a valid datetime and equal to 2024-04-23T01:01:01+08:00"]
            ],
            "Invalid_I_datetime_3" => [
                "data" => [
                    "I_datetime" => '2024-04-23T01:01:01+00:00',
                ],
                "expected_msg" => ["I_datetime" => "I_datetime must be a valid datetime and equal to 2024-04-23T01:01:01+08:00"]
            ],
            "Invalid_J_datetime_1" => [
                "data" => [
                    "J_datetime" => '2024-04-23T01:01:01&08:00',
                ],
                "expected_msg" => ["J_datetime" => "J_datetime must be a valid datetime in format RFC3339"]
            ],
            "Invalid_J_datetime_2" => [
                "data" => [
                    "J_datetime" => '2024-04-23T01:01:02+08:00',
                ],
                "expected_msg" => ["J_datetime" => "J_datetime must be a valid datetime and equal to 2024-04-23 01:01:01"]
            ],
            "Invalid_J_datetime_3" => [
                "data" => [
                    "J_datetime" => '2024-04-23T01:01:01+00:00',
                ],
                "expected_msg" => ["J_datetime" => "J_datetime must be a valid datetime and equal to 2024-04-23 01:01:01"]
            ],
            "Invalid_K_datetime_1" => [
                "data" => [
                    "K_datetime" => 'Tue. 23-Apr-2024 01:01:01 Asia/Shanghai',
                ],
                "expected_msg" => ["K_datetime" => "K_datetime must be a valid datetime in format COOKIE"]
            ],
            "Invalid_K_datetime_2" => [
                "data" => [
                    "K_datetime" => 'Tue, 23-Apr-2024 01:01:02 Asia/Shanghai',
                ],
                "expected_msg" => ["K_datetime" => "K_datetime must be a valid datetime and equal to Tue, 23-Apr-2024 01:01:01 Asia/Shanghai"]
            ],
            "Invalid_K_datetime_3" => [
                "data" => [
                    "K_datetime" => 'Tue, 23-Apr-2024 01:01:01 UTC',
                ],
                "expected_msg" => ["K_datetime" => "K_datetime must be a valid datetime and equal to Tue, 23-Apr-2024 01:01:01 Asia/Shanghai"]
            ],
            "Invalid_L_datetime_1" => [
                "data" => [
                    "L_datetime" => 'Tue. 23-Apr-2024 01:01:01 Asia/Shanghai',
                ],
                "expected_msg" => ["L_datetime" => "L_datetime must be a valid datetime in format COOKIE"]
            ],
            "Invalid_L_datetime_2" => [
                "data" => [
                    "L_datetime" => 'Tue, 23-Apr-2024 01:01:02 Asia/Shanghai',
                ],
                "expected_msg" => ["L_datetime" => "L_datetime must be a valid datetime and equal to 2024-04-23 01:01:01"]
            ],
            "Invalid_L_datetime_3" => [
                "data" => [
                    "L_datetime" => 'Tue, 23-Apr-2024 01:01:01 UTC',
                ],
                "expected_msg" => ["L_datetime" => "L_datetime must be a valid datetime and equal to 2024-04-23 01:01:01"]
            ],
            "Exception_A_exc" => [
                "data" => [
                    "A_exc" => "2024-04-23",
                ],
                "expected_msg" => '@field:A_exc, @method:datetime_equal - Parameter 2024-04-50 is not a valid datetime'
            ],
            "Exception_C_exc" => [
                "data" => [
                    "C_exc" => "23/2024/04",
                ],
                "expected_msg" => '@field:C_exc, @method:datetime_equal - Parameter 2024-13-23 is not a valid datetime'
            ],
            "Exception_F_exc" => [
                "data" => [
                    "F_exc" => "2024-04-23 01:01:01",
                ],
                "expected_msg" => '@field:F_exc, @method:datetime_equal - Parameter 2024-04-23 25:01:01 is not a valid datetime'
            ],
            "Exception_I_exc" => [
                "data" => [
                    "I_exc" => "2024-04-23T01:01:01+08:00",
                ],
                "expected_msg" => '@field:I_exc, @method:datetime_equal - Parameter 2024-04-23T01:0101+08:00 is not a valid datetime'
            ],
            "Exception_K_exc" => [
                "data" => [
                    "K_exc" => "Tue, 23-Apr-2024 01:01:01 Asia/Shanghai",
                ],
                "expected_msg" => '@field:K_exc, @method:datetime_equal - Parameter Tue, 23-Apri-2024 01:01:01 Asia/Shanghai is not a valid datetime'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_datetime_not_equal()
    {
        $rules = [
            "symbol" => [
                "A_datetime" => "optional|datetime!=[2024-04-23]",
                "B_datetime" => "optional|datetime!=[2024-04-23 01:01:01,Y-m-d H:i:s]",
                "A_exc" => "optional|datetime!=[2024-04-50]",
            ],
            "method" => [
                "A_datetime" => "optional|datetime_not_equal[2024-04-23]",
                "B_datetime" => "optional|datetime_not_equal[2024-04-23 01:01:01,Y-m-d H:i:s]",
                "A_exc" => "optional|datetime_not_equal[2024-04-50]",
            ]
        ];

        $cases = [
            "Valid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-22",
                ]
            ],
            "Valid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024/04/23 00:00:01",
                ]
            ],
            "Valid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-23 01:01:00",
                ]
            ],
            "Invalid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "123456789",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime"]
            ],
            "Invalid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024-04-23",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and not equal to 2024-04-23"]
            ],
            "Invalid_A_datetime_3" => [
                "data" => [
                    "A_datetime" => "2024-04-23 00:00:00",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and not equal to 2024-04-23"]
            ],
            "Invalid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-23 01:01:01",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and not equal to 2024-04-23 01:01:01"]
            ],
            "Exception_A_exc" => [
                "data" => [
                    "A_exc" => "2024-04-23",
                ],
                "expected_msg" => '@field:A_exc, @method:datetime_not_equal - Parameter 2024-04-50 is not a valid datetime'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_datetime_greater_than()
    {
        $rules = [
            "symbol" => [
                "A_datetime" => "optional|datetime>[2024-04-23]",
                "B_datetime" => "optional|datetime>[2024-04-23 12:12:12]",
                "C_datetime" => "optional|datetime>[04/23/2024,m/d/Y]",
            ],
            "method" => [
                "A_datetime" => "optional|datetime_greater_than[2024-04-23]",
                "B_datetime" => "optional|datetime_greater_than[2024-04-23 12:12:12]",
                "C_datetime" => "optional|datetime_greater_than[04/23/2024,m/d/Y]",
            ]
        ];

        $cases = [
            "Valid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-24",
                ]
            ],
            "Valid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024-04-23 00:00:01",
                ]
            ],
            "Valid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-23 12:12:13",
                ]
            ],
            "Valid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024-04-24",
                ]
            ],
            "Valid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "04/24/2024",
                ]
            ],
            "Invalid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-23",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and greater than 2024-04-23"]
            ],
            "Invalid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-23 12:12:12",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and greater than 2024-04-23 12:12:12"]
            ],
            "Invalid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "2024-04-23",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime in format m/d/Y"]
            ],
            "Invalid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => "04/23/2024",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime and greater than 04/23/2024"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_datetime_greater_equal()
    {
        $rules = [
            "symbol" => [
                "A_datetime" => "optional|datetime>=[2024-04-23]",
                "B_datetime" => "optional|datetime>=[2024-04-23 12:12:12]",
                "C_datetime" => "optional|datetime>=[04/23/2024,m/d/Y]",
            ],
            "method" => [
                "A_datetime" => "optional|datetime_greater_equal[2024-04-23]",
                "B_datetime" => "optional|datetime_greater_equal[2024-04-23 12:12:12]",
                "C_datetime" => "optional|datetime_greater_equal[04/23/2024,m/d/Y]",
            ]
        ];

        $cases = [
            "Valid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-23",
                ]
            ],
            "Valid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024-04-24",
                ]
            ],
            "Valid_A_datetime_3" => [
                "data" => [
                    "A_datetime" => "2024-04-23 00:00:00",
                ]
            ],
            "Valid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-23 12:12:13",
                ]
            ],
            "Valid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024-04-23 12:12:13",
                ]
            ],
            "Valid_B_datetime_3" => [
                "data" => [
                    "B_datetime" => "2024-04-24",
                ]
            ],
            "Valid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "04/23/2024",
                ]
            ],
            "Valid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => "04/24/2024",
                ]
            ],
            "Invalid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-22 23:59:59",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and greater than or equal to 2024-04-23"]
            ],
            "Invalid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-23 12:12:11",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and greater than or equal to 2024-04-23 12:12:12"]
            ],
            "Invalid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "2024-04-22",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime in format m/d/Y"]
            ],
            "Invalid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => "04/22/2024",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime and greater than or equal to 04/23/2024"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_datetime_less_than()
    {
        $rules = [
            "symbol" => [
                "A_datetime" => "optional|datetime<[2024-04-23]",
                "B_datetime" => "optional|datetime<[2024-04-23 12:12:12]",
                "C_datetime" => "optional|datetime<[04/23/2024,m/d/Y]",
            ],
            "method" => [
                "A_datetime" => "optional|datetime_less_than[2024-04-23]",
                "B_datetime" => "optional|datetime_less_than[2024-04-23 12:12:12]",
                "C_datetime" => "optional|datetime_less_than[04/23/2024,m/d/Y]",
            ]
        ];

        $cases = [
            "Valid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-22",
                ]
            ],
            "Valid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024-04-22 23:59:59",
                ]
            ],
            "Valid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-23 12:12:11",
                ]
            ],
            "Valid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024-04-23",
                ]
            ],
            "Valid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "04/22/2024",
                ]
            ],
            "Invalid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-24",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and less than 2024-04-23"]
            ],
            "Invalid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024-04-23 00:00:01",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and less than 2024-04-23"]
            ],
            "Invalid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-23 12:12:12",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and less than 2024-04-23 12:12:12"]
            ],
            "Invalid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024-04-23 12:12:13",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and less than 2024-04-23 12:12:12"]
            ],
            "Invalid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "2024-04-23",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime in format m/d/Y"]
            ],
            "Invalid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => "04/23/2024",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime and less than 04/23/2024"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_datetime_less_equal()
    {
        $rules = [
            "symbol" => [
                "A_datetime" => "optional|datetime<=[2024-04-23]",
                "B_datetime" => "optional|datetime<=[2024-04-23 12:12:12]",
                "C_datetime" => "optional|datetime<=[04/23/2024,m/d/Y]",
            ],
            "method" => [
                "A_datetime" => "optional|datetime_less_equal[2024-04-23]",
                "B_datetime" => "optional|datetime_less_equal[2024-04-23 12:12:12]",
                "C_datetime" => "optional|datetime_less_equal[04/23/2024,m/d/Y]",
            ]
        ];

        $cases = [
            "Valid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-23",
                ]
            ],
            "Valid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024-04-22",
                ]
            ],
            "Valid_A_datetime_3" => [
                "data" => [
                    "A_datetime" => "2024-04-23 00:00:00",
                ]
            ],
            "Valid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-23 12:12:12",
                ]
            ],
            "Valid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024-04-23 12:12:11",
                ]
            ],
            "Valid_B_datetime_3" => [
                "data" => [
                    "B_datetime" => "2024-04-23",
                ]
            ],
            "Valid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "04/22/2024",
                ]
            ],
            "Invalid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-24",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and less than or equal to 2024-04-23"]
            ],
            "Invalid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024-04-23 00:00:01",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and less than or equal to 2024-04-23"]
            ],
            "Invalid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-23 12:12:13",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and less than or equal to 2024-04-23 12:12:12"]
            ],
            "Invalid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024-04-24",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and less than or equal to 2024-04-23 12:12:12"]
            ],
            "Invalid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "2024-04-23",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime in format m/d/Y"]
            ],
            "Invalid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => "04/24/2024",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime and less than or equal to 04/23/2024"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_datetime_greater_less()
    {
        $rules = [
            "symbol" => [
                "A_datetime" => "optional|datetime><[2024-04-23,2024-05-01]",
                "B_datetime" => "optional|datetime><[2024-04-23 01:01:01,2024-05-01 12:12:12]",
                "C_datetime" => "optional|datetime><[2024-04-23 01:01:01,2024-05-01 12:12:12,m/d/Y H:i:s]",
            ],
            "method" => [
                "A_datetime" => "optional|datetime_greater_less[2024-04-23,2024-05-01]",
                "B_datetime" => "optional|datetime_greater_less[2024-04-23 01:01:01,2024-05-01 12:12:12]",
                "C_datetime" => "optional|datetime_greater_less[2024-04-23 01:01:01,2024-05-01 12:12:12,m/d/Y H:i:s]",
            ]
        ];

        $cases = [
            "Valid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-24",
                ]
            ],
            "Valid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024-04-23 01:01:01",
                ]
            ],
            "Valid_A_datetime_3" => [
                "data" => [
                    "A_datetime" => "2024/04/30 23:59:59",
                ]
            ],
            "Valid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-24",
                ]
            ],
            "Valid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024-04-23 01:01:02",
                ]
            ],
            "Valid_B_datetime_3" => [
                "data" => [
                    "B_datetime" => "2024/05/01 12:12:11",
                ]
            ],
            "Valid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "04/23/2024 01:01:02",
                ]
            ],
            "Valid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => "05/01/2024 12:12:11",
                ]
            ],
            "Invalid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-23",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and greater than 2024-04-23 and less than 2024-05-01"]
            ],
            "Invalid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024/05/01",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and greater than 2024-04-23 and less than 2024-05-01"]
            ],
            "Invalid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-23 01:01:01",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and greater than 2024-04-23 01:01:01 and less than 2024-05-01 12:12:12"]
            ],
            "Invalid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024-05-01 12:12:12",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and greater than 2024-04-23 01:01:01 and less than 2024-05-01 12:12:12"]
            ],
            "Invalid_B_datetime_3" => [
                "data" => [
                    "B_datetime" => "2024/05/01 12:12:12",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and greater than 2024-04-23 01:01:01 and less than 2024-05-01 12:12:12"]
            ],
            "Invalid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "2024-04-23 01:01:01",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime in format m/d/Y H:i:s"]
            ],
            "Invalid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => "04/23/2024 01:01:01",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime and greater than 2024-04-23 01:01:01 and less than 2024-05-01 12:12:12"]
            ],
            "Invalid_C_datetime_3" => [
                "data" => [
                    "C_datetime" => "05/01/2024 12:12:12",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime and greater than 2024-04-23 01:01:01 and less than 2024-05-01 12:12:12"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_datetime_greater_lessequal()
    {
        $rules = [
            "symbol" => [
                "A_datetime" => "optional|datetime><=[2024-04-23,2024-05-01]",
                "B_datetime" => "optional|datetime><=[2024-04-23 01:01:01,2024-05-01 12:12:12]",
                "C_datetime" => "optional|datetime><=[2024-04-23 01:01:01,2024-05-01 12:12:12,m/d/Y H:i:s]",
            ],
            "method" => [
                "A_datetime" => "optional|datetime_greater_lessequal[2024-04-23,2024-05-01]",
                "B_datetime" => "optional|datetime_greater_lessequal[2024-04-23 01:01:01,2024-05-01 12:12:12]",
                "C_datetime" => "optional|datetime_greater_lessequal[2024-04-23 01:01:01,2024-05-01 12:12:12,m/d/Y H:i:s]",
            ]
        ];

        $cases = [
            "Valid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-24",
                ]
            ],
            "Valid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024-04-23 01:01:01",
                ]
            ],
            "Valid_A_datetime_3" => [
                "data" => [
                    "A_datetime" => "2024/05/01 00:00:00",
                ]
            ],
            "Valid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-24",
                ]
            ],
            "Valid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024-04-23 01:01:02",
                ]
            ],
            "Valid_B_datetime_3" => [
                "data" => [
                    "B_datetime" => "2024/05/01 12:12:12",
                ]
            ],
            "Valid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "04/23/2024 01:01:02",
                ]
            ],
            "Valid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => "05/01/2024 12:12:12",
                ]
            ],
            "Invalid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-23",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and greater than 2024-04-23 and less than or equal to 2024-05-01"]
            ],
            "Invalid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024/05/01 00:00:01",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and greater than 2024-04-23 and less than or equal to 2024-05-01"]
            ],
            "Invalid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-23 01:01:01",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and greater than 2024-04-23 01:01:01 and less than or equal to 2024-05-01 12:12:12"]
            ],
            "Invalid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024-05-01 12:12:13",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and greater than 2024-04-23 01:01:01 and less than or equal to 2024-05-01 12:12:12"]
            ],
            "Invalid_B_datetime_3" => [
                "data" => [
                    "B_datetime" => "2024/05/01 12:12:13",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and greater than 2024-04-23 01:01:01 and less than or equal to 2024-05-01 12:12:12"]
            ],
            "Invalid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "2024-04-23 01:01:01",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime in format m/d/Y H:i:s"]
            ],
            "Invalid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => "04/23/2024 01:01:01",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime and greater than 2024-04-23 01:01:01 and less than or equal to 2024-05-01 12:12:12"]
            ],
            "Invalid_C_datetime_3" => [
                "data" => [
                    "C_datetime" => "05/01/2024 12:12:13",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime and greater than 2024-04-23 01:01:01 and less than or equal to 2024-05-01 12:12:12"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_datetime_greaterequal_less()
    {
        $rules = [
            "symbol" => [
                "A_datetime" => "optional|datetime>=<[2024-04-23,2024-05-01]",
                "B_datetime" => "optional|datetime>=<[2024-04-23 01:01:01,2024-05-01 12:12:12]",
                "C_datetime" => "optional|datetime>=<[2024-04-23 01:01:01,2024-05-01 12:12:12,m/d/Y H:i:s]",
            ],
            "method" => [
                "A_datetime" => "optional|datetime_greaterequal_less[2024-04-23,2024-05-01]",
                "B_datetime" => "optional|datetime_greaterequal_less[2024-04-23 01:01:01,2024-05-01 12:12:12]",
                "C_datetime" => "optional|datetime_greaterequal_less[2024-04-23 01:01:01,2024-05-01 12:12:12,m/d/Y H:i:s]",
            ]
        ];

        $cases = [
            "Valid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-23",
                ]
            ],
            "Valid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024-04-23 00:00:00",
                ]
            ],
            "Valid_A_datetime_3" => [
                "data" => [
                    "A_datetime" => "2024/04/30 23:59:59",
                ]
            ],
            "Valid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-24",
                ]
            ],
            "Valid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024-04-23 01:01:01",
                ]
            ],
            "Valid_B_datetime_3" => [
                "data" => [
                    "B_datetime" => "2024/05/01 12:12:11",
                ]
            ],
            "Valid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "04/23/2024 01:01:01",
                ]
            ],
            "Valid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => "05/01/2024 12:12:11",
                ]
            ],
            "Invalid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "2024-04-22",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and greater than or equal to 2024-04-23 and less than 2024-05-01"]
            ],
            "Invalid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024/05/01",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime and greater than or equal to 2024-04-23 and less than 2024-05-01"]
            ],
            "Invalid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024-04-23 01:01:00",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and greater than or equal to 2024-04-23 01:01:01 and less than 2024-05-01 12:12:12"]
            ],
            "Invalid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024-05-01 12:12:12",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and greater than or equal to 2024-04-23 01:01:01 and less than 2024-05-01 12:12:12"]
            ],
            "Invalid_B_datetime_3" => [
                "data" => [
                    "B_datetime" => "2024/05/01 12:12:12",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime and greater than or equal to 2024-04-23 01:01:01 and less than 2024-05-01 12:12:12"]
            ],
            "Invalid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "2024-04-23 01:01:01",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime in format m/d/Y H:i:s"]
            ],
            "Invalid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => "04/23/2024 01:01:00",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime and greater than or equal to 2024-04-23 01:01:01 and less than 2024-05-01 12:12:12"]
            ],
            "Invalid_C_datetime_3" => [
                "data" => [
                    "C_datetime" => "05/01/2024 12:12:12",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime and greater than or equal to 2024-04-23 01:01:01 and less than 2024-05-01 12:12:12"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_datetime_between()
    {
        $rules = [
            "symbol" => [
                "A_datetime" => "optional|datetime>=<=[2024-04-23, 2024-05-01]",
                "B_datetime" => "optional|datetime>=<=[2024-04-23, 2024-05-01, Y-m-d]",
                "C_datetime" => "optional|datetime>=<=[2024-04-23, 2024-05-01, m/d/Y]",
                "D_datetime" => "optional|datetime>=<=[2024-04-23 01, 2024-05-01 12, Y-m-d H]",
                "E_datetime" => "optional|datetime>=<=[2024-04-23 01:01, 2024-05-01 12:12, Y-m-d H:i]",
                "F_datetime" => "optional|datetime>=<=[2024-04-23 01:01:01, 2024-05-01 12:12:12, Y-m-d H:i:s]",

                "I_datetime" => "optional|datetime>=<=[2024-04-23T01:01:01+08:00, 2024-05-01T12:12:12+08:00, RFC3339]",
                "J_datetime" => "optional|datetime>=<=[2024-04-23 01:01:01, 2024-05-01 12:12:12, RFC3339]",   // The default timezone is 'Asia/Shanghai', {@see tests/Test.php}
                "K_datetime" => "optional|datetime>=<=[Tue\, 23 Apr 2024 01:01:01 +0800, Wed\, 01 May 2024 12:12:12 +0800, RFC2822]",
                "L_datetime" => "optional|datetime>=<=[2024-04-23 01:01:01, 2024-05-01 12:12:12, RFC2822]",   // The default timezone is 'Asia/Shanghai', {@see tests/Test.php}
                "A1_exc" => "optional|datetime>=<=[2024-04-50, 2024-05-01]",
                "A2_exc" => "optional|datetime>=<=[2024-04-23, 2024-13-01]",
                "E1_exc" => "optional|datetime>=<=[2024-04-23 01:60, 2024-05-01 12:12, Y-m-d H:i]",
                "E2_exc" => "optional|datetime>=<=[2024-04-23 01:01, 2024-05-50 12:12, Y-m-d H:i]",
                "K1_exc" => "optional|datetime>=<=[Tue\, 23 Apri 2024 01:01:01 +0800, Wed\, 01 May 2024 12:12:12 +0800, RFC2822]",
                "K2_exc" => "optional|datetime>=<=[Tue\, 23 Apr 2024 01:01:01 +0800, Wen\, 01 May 2024 12:12:12 +0800, RFC2822]",
            ],
            "method" => [
                "A_datetime" => "optional|datetime_between[2024-04-23, 2024-05-01]",
                "B_datetime" => "optional|datetime_between[2024-04-23, 2024-05-01, Y-m-d]",
                "C_datetime" => "optional|datetime_between[2024-04-23, 2024-05-01, m/d/Y]",
                "D_datetime" => "optional|datetime_between[2024-04-23 01, 2024-05-01 12, Y-m-d H]",
                "E_datetime" => "optional|datetime_between[2024-04-23 01:01, 2024-05-01 12:12, Y-m-d H:i]",
                "F_datetime" => "optional|datetime_between[2024-04-23 01:01:01, 2024-05-01 12:12:12, Y-m-d H:i:s]",

                "I_datetime" => "optional|datetime_between[2024-04-23T01:01:01+08:00, 2024-05-01T12:12:12+08:00, RFC3339]",
                "J_datetime" => "optional|datetime_between[2024-04-23 01:01:01, 2024-05-01 12:12:12, RFC3339]",   // The default timezone is 'Asia/Shanghai', {@see tests/Test.php}
                "K_datetime" => "optional|datetime_between[Tue\, 23 Apr 2024 01:01:01 +0800, Wed\, 01 May 2024 12:12:12 +0800, RFC2822]",
                "L_datetime" => "optional|datetime_between[2024-04-23 01:01:01, 2024-05-01 12:12:12, RFC2822]",   // The default timezone is 'Asia/Shanghai', {@see tests/Test.php}
                "A1_exc" => "optional|datetime_between[2024-04-50, 2024-05-01]",
                "A2_exc" => "optional|datetime_between[2024-04-23, 2024-13-01]",
                "E1_exc" => "optional|datetime_between[2024-04-23 01:60, 2024-05-01 12:12, Y-m-d H:i]",
                "E2_exc" => "optional|datetime_between[2024-04-23 01:01, 2024-05-50 12:12, Y-m-d H:i]",
                "K1_exc" => "optional|datetime_between[Tue\, 23 Apri 2024 01:01:01 +0800, Wed\, 01 May 2024 12:12:12 +0800, RFC2822]",
                "K2_exc" => "optional|datetime_between[Tue\, 23 Apr 2024 01:01:01 +0800, Wen\, 01 May 2024 12:12:12 +0800, RFC2822]",
            ],
        ];

        $cases = [
            "Valid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "20240424",
                ]
            ],
            "Valid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => '2024-04-24',
                ]
            ],
            "Valid_A_datetime_3" => [
                "data" => [
                    "A_datetime" => '04/24/2024',
                ]
            ],
            "Valid_A_datetime_4" => [
                "data" => [
                    "A_datetime" => '2024-04-23 00:00',
                ]
            ],
            "Valid_A_datetime_5" => [
                "data" => [
                    "A_datetime" => '2024/04/23 00:00:00',
                ]
            ],
            "Valid_A_datetime_6" => [
                "data" => [
                    "A_datetime" => '2024-05-01 00:00:00',
                ]
            ],
            "Valid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => '2024-04-23',
                ]
            ],
            "Valid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => '2024-05-01',
                ]
            ],
            "Valid_B_datetime_3" => [
                "data" => [
                    "B_datetime" => '2024-04-25',
                ]
            ],
            "Valid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => '04/23/2024',
                ]
            ],
            "Valid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => '05/01/2024',
                ]
            ],
            "Valid_C_datetime_3" => [
                "data" => [
                    "C_datetime" => '04/25/2024',
                ]
            ],
            "Valid_D_datetime_1" => [
                "data" => [
                    "D_datetime" => '2024-04-23 01',
                ]
            ],
            "Valid_D_datetime_2" => [
                "data" => [
                    "D_datetime" => '2024-05-01 12',
                ]
            ],
            "Valid_D_datetime_3" => [
                "data" => [
                    "D_datetime" => '2024-05-01 08',
                ]
            ],
            "Valid_E_datetime_1" => [
                "data" => [
                    "E_datetime" => '2024-04-23 01:01',
                ]
            ],
            "Valid_E_datetime_2" => [
                "data" => [
                    "E_datetime" => '2024-05-01 12:12',
                ]
            ],
            "Valid_E_datetime_3" => [
                "data" => [
                    "E_datetime" => '2024-05-01 12:08',
                ]
            ],
            "Valid_F_datetime_1" => [
                "data" => [
                    "F_datetime" => '2024-04-23 01:01:01',
                ]
            ],
            "Valid_F_datetime_2" => [
                "data" => [
                    "F_datetime" => '2024-05-01 12:12:12',
                ]
            ],
            "Valid_F_datetime_3" => [
                "data" => [
                    "F_datetime" => '2024-05-01 12:12:08',
                ]
            ],
            "Valid_I_datetime_1" => [
                "data" => [
                    "I_datetime" => '2024-04-23T01:01:01+08:00',
                ]
            ],
            "Valid_I_datetime_2" => [
                "data" => [
                    "I_datetime" => '2024-05-01T12:12:12+08:00',
                ]
            ],
            "Valid_I_datetime_3" => [
                "data" => [
                    "I_datetime" => '2024-05-01T12:12:08+08:00',
                ]
            ],
            "Valid_I_datetime_4" => [
                "data" => [
                    "I_datetime" => '2024-04-22T17:01:01+00:00',
                ]
            ],
            "Valid_I_datetime_5" => [
                "data" => [
                    "I_datetime" => '2024-05-01T14:12:12+10:00',
                ]
            ],
            "Valid_J_datetime_1" => [
                "data" => [
                    "J_datetime" => '2024-04-23T01:01:01+08:00',
                ]
            ],
            "Valid_J_datetime_2" => [
                "data" => [
                    "J_datetime" => '2024-05-01T12:12:12+08:00',
                ]
            ],
            "Valid_J_datetime_3" => [
                "data" => [
                    "J_datetime" => '2024-05-01T12:12:08+08:00',
                ]
            ],
            "Valid_J_datetime_4" => [
                "data" => [
                    "J_datetime" => '2024-04-22T17:01:01+00:00',
                ]
            ],
            "Valid_J_datetime_5" => [
                "data" => [
                    "J_datetime" => '2024-05-01T14:12:12+10:00',
                ]
            ],
            "Valid_K_datetime_1" => [
                "data" => [
                    "K_datetime" => 'Tue, 23 Apr 2024 01:01:01 +0800',
                ]
            ],
            "Valid_K_datetime_2" => [
                "data" => [
                    "K_datetime" => 'Wed, 01 May 2024 12:12:12 +0800',
                ]
            ],
            "Valid_K_datetime_3" => [
                "data" => [
                    "K_datetime" => 'Wed, 01 May 2024 12:12:08 +0800',
                ]
            ],
            "Valid_K_datetime_4" => [
                "data" => [
                    "K_datetime" => 'Mon, 22 Apr 2024 17:01:01 +0000',
                ]
            ],
            "Valid_K_datetime_5" => [
                "data" => [
                    "K_datetime" => 'Wed, 01 May 2024 16:12:12 +1200',
                ]
            ],
            "Valid_L_datetime_1" => [
                "data" => [
                    "L_datetime" => 'Tue, 23 Apr 2024 01:01:01 +0800',
                ]
            ],
            "Valid_L_datetime_2" => [
                "data" => [
                    "L_datetime" => 'Wed, 01 May 2024 12:12:12 +0800',
                ]
            ],
            "Valid_L_datetime_3" => [
                "data" => [
                    "L_datetime" => 'Wed, 01 May 2024 12:12:08 +0800',
                ]
            ],
            "Valid_L_datetime_4" => [
                "data" => [
                    "L_datetime" => 'Mon, 22 Apr 2024 17:01:01 +0000',
                ]
            ],
            "Valid_L_datetime_5" => [
                "data" => [
                    "L_datetime" => 'Wed, 01 May 2024 16:12:12 +1200',
                ]
            ],

            /**
             * Invalid cases
             */
            "Invalid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => "12345678",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime"]
            ],
            "Invalid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => "2024-04-50",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime must be a valid datetime"]
            ],
            "Invalid_A_datetime_3" => [
                "data" => [
                    "A_datetime" => "2024-04-22",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime datetime must be between 2024-04-23 and 2024-05-01"]
            ],
            "Invalid_A_datetime_4" => [
                "data" => [
                    "A_datetime" => "2024-05-02",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime datetime must be between 2024-04-23 and 2024-05-01"]
            ],
            "Invalid_A_datetime_5" => [
                "data" => [
                    "A_datetime" => "2024-05-01 00:00:01",
                ],
                "expected_msg" => ["A_datetime" => "A_datetime datetime must be between 2024-04-23 and 2024-05-01"]
            ],
            "Invalid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => "2024/04/23",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime in format Y-m-d"]
            ],
            "Invalid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => "2024-04-50",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime must be a valid datetime in format Y-m-d"]
            ],
            "Invalid_B_datetime_3" => [
                "data" => [
                    "B_datetime" => "2024-04-22",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime datetime must be between 2024-04-23 and 2024-05-01"]
            ],
            "Invalid_B_datetime_4" => [
                "data" => [
                    "B_datetime" => "2024-05-02",
                ],
                "expected_msg" => ["B_datetime" => "B_datetime datetime must be between 2024-04-23 and 2024-05-01"]
            ],
            "Invalid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => "2024/04/23",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime in format m/d/Y"]
            ],
            "Invalid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => "04/50/2024",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime must be a valid datetime in format m/d/Y"]
            ],
            "Invalid_C_datetime_3" => [
                "data" => [
                    "C_datetime" => "04/22/2024",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime datetime must be between 2024-04-23 and 2024-05-01"]
            ],
            "Invalid_C_datetime_4" => [
                "data" => [
                    "C_datetime" => "05/02/2024",
                ],
                "expected_msg" => ["C_datetime" => "C_datetime datetime must be between 2024-04-23 and 2024-05-01"]
            ],
            "Invalid_D_datetime_1" => [
                "data" => [
                    "D_datetime" => "2024/04/23 01",
                ],
                "expected_msg" => ["D_datetime" => "D_datetime must be a valid datetime in format Y-m-d H"]
            ],
            "Invalid_D_datetime_2" => [
                "data" => [
                    "D_datetime" => "2024-04-23 24",
                ],
                "expected_msg" => ["D_datetime" => "D_datetime must be a valid datetime in format Y-m-d H"]
            ],
            "Invalid_D_datetime_3" => [
                "data" => [
                    "D_datetime" => "2024-04-23 00",
                ],
                "expected_msg" => ["D_datetime" => "D_datetime datetime must be between 2024-04-23 01 and 2024-05-01 12"]
            ],
            "Invalid_D_datetime_4" => [
                "data" => [
                    "D_datetime" => "2024-05-01 13",
                ],
                "expected_msg" => ["D_datetime" => "D_datetime datetime must be between 2024-04-23 01 and 2024-05-01 12"]
            ],
            "Invalid_E_datetime_1" => [
                "data" => [
                    "E_datetime" => "2024-04-23 01_01",
                ],
                "expected_msg" => ["E_datetime" => "E_datetime must be a valid datetime in format Y-m-d H:i"]
            ],
            "Invalid_E_datetime_2" => [
                "data" => [
                    "E_datetime" => "2024-04-23 01:60",
                ],
                "expected_msg" => ["E_datetime" => "E_datetime must be a valid datetime in format Y-m-d H:i"]
            ],
            "Invalid_E_datetime_3" => [
                "data" => [
                    "E_datetime" => "2024-04-23 01:00",
                ],
                "expected_msg" => ["E_datetime" => "E_datetime datetime must be between 2024-04-23 01:01 and 2024-05-01 12:12"]
            ],
            "Invalid_E_datetime_4" => [
                "data" => [
                    "E_datetime" => "2024-05-01 12:13",
                ],
                "expected_msg" => ["E_datetime" => "E_datetime datetime must be between 2024-04-23 01:01 and 2024-05-01 12:12"]
            ],
            "Invalid_F_datetime_1" => [
                "data" => [
                    "F_datetime" => "2024-04-23 01_01_01",
                ],
                "expected_msg" => ["F_datetime" => "F_datetime must be a valid datetime in format Y-m-d H:i:s"]
            ],
            "Invalid_F_datetime_2" => [
                "data" => [
                    "F_datetime" => "2024-04-23 01:01:60",
                ],
                "expected_msg" => ["F_datetime" => "F_datetime must be a valid datetime in format Y-m-d H:i:s"]
            ],
            "Invalid_F_datetime_3" => [
                "data" => [
                    "F_datetime" => "2024-04-23 01:01:00",
                ],
                "expected_msg" => ["F_datetime" => "F_datetime datetime must be between 2024-04-23 01:01:01 and 2024-05-01 12:12:12"]
            ],
            "Invalid_F_datetime_4" => [
                "data" => [
                    "F_datetime" => "2024-05-01 12:12:13",
                ],
                "expected_msg" => ["F_datetime" => "F_datetime datetime must be between 2024-04-23 01:01:01 and 2024-05-01 12:12:12"]
            ],
            "Invalid_I_datetime_1" => [
                "data" => [
                    "I_datetime" => "2024-04-23T01:01:01@08:00",
                ],
                "expected_msg" => ["I_datetime" => "I_datetime must be a valid datetime in format RFC3339"]
            ],
            "Invalid_I_datetime_2" => [
                "data" => [
                    "I_datetime" => "2024-04-23T24:01:01+08:00",
                ],
                "expected_msg" => ["I_datetime" => "I_datetime must be a valid datetime in format RFC3339"]
            ],
            "Invalid_I_datetime_3" => [
                "data" => [
                    "I_datetime" => "2024-04-23T01:01:00+08:00",
                ],
                "expected_msg" => ["I_datetime" => "I_datetime datetime must be between 2024-04-23T01:01:01+08:00 and 2024-05-01T12:12:12+08:00"]
            ],
            "Invalid_I_datetime_4" => [
                "data" => [
                    "I_datetime" => "2024-05-01T12:12:13+08:00",
                ],
                "expected_msg" => ["I_datetime" => "I_datetime datetime must be between 2024-04-23T01:01:01+08:00 and 2024-05-01T12:12:12+08:00"]
            ],
            "Invalid_I_datetime_5" => [
                "data" => [
                    "I_datetime" => '2024-04-22T17:01:00+00:00',
                ],
                "expected_msg" => ["I_datetime" => "I_datetime datetime must be between 2024-04-23T01:01:01+08:00 and 2024-05-01T12:12:12+08:00"]
            ],
            "Invalid_I_datetime_6" => [
                "data" => [
                    "I_datetime" => '2024-05-01T14:12:13+10:00',
                ],
                "expected_msg" => ["I_datetime" => "I_datetime datetime must be between 2024-04-23T01:01:01+08:00 and 2024-05-01T12:12:12+08:00"]
            ],
            "Invalid_J_datetime_1" => [
                "data" => [
                    "J_datetime" => "2024-04-23T01:01:01@08:00",
                ],
                "expected_msg" => ["J_datetime" => "J_datetime must be a valid datetime in format RFC3339"]
            ],
            "Invalid_J_datetime_2" => [
                "data" => [
                    "J_datetime" => "2024-04-23T24:01:01+08:00",
                ],
                "expected_msg" => ["J_datetime" => "J_datetime must be a valid datetime in format RFC3339"]
            ],
            "Invalid_J_datetime_3" => [
                "data" => [
                    "J_datetime" => "2024-04-23T01:01:00+08:00",
                ],
                "expected_msg" => ["J_datetime" => "J_datetime datetime must be between 2024-04-23 01:01:01 and 2024-05-01 12:12:12"]
            ],
            "Invalid_J_datetime_4" => [
                "data" => [
                    "J_datetime" => "2024-05-01T12:12:13+08:00",
                ],
                "expected_msg" => ["J_datetime" => "J_datetime datetime must be between 2024-04-23 01:01:01 and 2024-05-01 12:12:12"]
            ],
            "Invalid_J_datetime_5" => [
                "data" => [
                    "J_datetime" => '2024-04-22T17:01:00+00:00',
                ],
                "expected_msg" => ["J_datetime" => "J_datetime datetime must be between 2024-04-23 01:01:01 and 2024-05-01 12:12:12"]
            ],
            "Invalid_J_datetime_6" => [
                "data" => [
                    "J_datetime" => '2024-05-01T14:12:13+10:00',
                ],
                "expected_msg" => ["J_datetime" => "J_datetime datetime must be between 2024-04-23 01:01:01 and 2024-05-01 12:12:12"]
            ],
            "Invalid_K_datetime_1" => [
                "data" => [
                    "K_datetime" => "Tue, 23 Apr 2024 01:01:01 #0800",
                ],
                "expected_msg" => ["K_datetime" => "K_datetime must be a valid datetime in format RFC2822"]
            ],
            "Invalid_K_datetime_2" => [
                "data" => [
                    "K_datetime" => "Tue, 23 Apr 2024 01:60:01 +0800",
                ],
                "expected_msg" => ["K_datetime" => "K_datetime must be a valid datetime in format RFC2822"]
            ],
            "Invalid_K_datetime_3" => [
                "data" => [
                    "K_datetime" => "Tue, 23 Apr 2024 01:01:00 +0800",
                ],
                "expected_msg" => ["K_datetime" => "K_datetime datetime must be between Tue, 23 Apr 2024 01:01:01 +0800 and Wed, 01 May 2024 12:12:12 +0800"]
            ],
            "Invalid_K_datetime_4" => [
                "data" => [
                    "K_datetime" => "Wed, 01 May 2024 12:12:13 +0800",
                ],
                "expected_msg" => ["K_datetime" => "K_datetime datetime must be between Tue, 23 Apr 2024 01:01:01 +0800 and Wed, 01 May 2024 12:12:12 +0800"]
            ],
            "Invalid_K_datetime_5" => [
                "data" => [
                    "K_datetime" => 'Mon, 22 Apr 2024 17:01:00 +0000',
                ],
                "expected_msg" => ["K_datetime" => "K_datetime datetime must be between Tue, 23 Apr 2024 01:01:01 +0800 and Wed, 01 May 2024 12:12:12 +0800"]
            ],
            "Invalid_K_datetime_6" => [
                "data" => [
                    "K_datetime" => 'Wed, 01 May 2024 16:12:13 +1200',
                ],
                "expected_msg" => ["K_datetime" => "K_datetime datetime must be between Tue, 23 Apr 2024 01:01:01 +0800 and Wed, 01 May 2024 12:12:12 +0800"]
            ],
            "Invalid_L_datetime_1" => [
                "data" => [
                    "L_datetime" => "Tue, 23 Apr 2024 01:01:01 #0800",
                ],
                "expected_msg" => ["L_datetime" => "L_datetime must be a valid datetime in format RFC2822"]
            ],
            "Invalid_L_datetime_2" => [
                "data" => [
                    "L_datetime" => "Tue, 23 Apr 2024 01:60:01 +0800",
                ],
                "expected_msg" => ["L_datetime" => "L_datetime must be a valid datetime in format RFC2822"]
            ],
            "Invalid_L_datetime_3" => [
                "data" => [
                    "L_datetime" => "Tue, 23 Apr 2024 01:01:00 +0800",
                ],
                "expected_msg" => ["L_datetime" => "L_datetime datetime must be between 2024-04-23 01:01:01 and 2024-05-01 12:12:12"]
            ],
            "Invalid_L_datetime_4" => [
                "data" => [
                    "L_datetime" => "Wed, 01 May 2024 12:12:13 +0800",
                ],
                "expected_msg" => ["L_datetime" => "L_datetime datetime must be between 2024-04-23 01:01:01 and 2024-05-01 12:12:12"]
            ],
            "Invalid_L_datetime_5" => [
                "data" => [
                    "L_datetime" => 'Mon, 22 Apr 2024 17:01:00 +0000',
                ],
                "expected_msg" => ["L_datetime" => "L_datetime datetime must be between 2024-04-23 01:01:01 and 2024-05-01 12:12:12"]
            ],
            "Invalid_L_datetime_6" => [
                "data" => [
                    "L_datetime" => 'Wed, 01 May 2024 16:12:13 +1200',
                ],
                "expected_msg" => ["L_datetime" => "L_datetime datetime must be between 2024-04-23 01:01:01 and 2024-05-01 12:12:12"]
            ],
            "Exception_A1_exc" => [
                "data" => [
                    "A1_exc" => "2024-05-01",
                ],
                "expected_msg" => '@field:A1_exc, @method:datetime_between - Parameter 2024-04-50 is not a valid datetime'
            ],
            "Exception_A2_exc" => [
                "data" => [
                    "A2_exc" => "2024-05-01",
                ],
                "expected_msg" => '@field:A2_exc, @method:datetime_between - Parameter 2024-13-01 is not a valid datetime'
            ],
            "Exception_E1_exc" => [
                "data" => [
                    "E1_exc" => "2024-05-01 12:12",
                ],
                "expected_msg" => '@field:E1_exc, @method:datetime_between - Parameter 2024-04-23 01:60 is not a valid datetime'
            ],
            "Exception_E2_exc" => [
                "data" => [
                    "E2_exc" => "2024-05-01 12:12",
                ],
                "expected_msg" => '@field:E2_exc, @method:datetime_between - Parameter 2024-05-50 12:12 is not a valid datetime'
            ],
            "Exception_K1_exc" => [
                "data" => [
                    "K1_exc" => "Wed, 01 May 2024 12:12:12 +0800",
                ],
                "expected_msg" => '@field:K1_exc, @method:datetime_between - Parameter Tue, 23 Apri 2024 01:01:01 +0800 is not a valid datetime'
            ],
            "Exception_K2_exc" => [
                "data" => [
                    "K2_exc" => "Wed, 01 May 2024 12:12:12 +0800",
                ],
                "expected_msg" => '@field:K2_exc, @method:datetime_between - Parameter Wen, 01 May 2024 12:12:12 +0800 is not a valid datetime'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_date()
    {
        $rules = [
            "symbol" => [
                "A_date" => "optional|date",
                "B_date" => "optional|date[Y-m-d]",
                "C_date" => "optional|date[Y/m/d]",
                "D_date" => "optional|date[Y/m-d]",
                "E_date" => "optional|date[d/m/Y]",
                "F_date" => "optional|date[Y-m]",
                "G_date" => "optional|date[d/m]",
                "H_date" => "optional|date[d]",
                "I_date" => "optional|date[m]",
                "J_date" => "optional|date[Y]",
            ],
            "method" => [
                "A_date" => "optional|is_date",
                "B_date" => "optional|is_date[Y-m-d]",
                "C_date" => "optional|is_date[Y/m/d]",
                "D_date" => "optional|is_date[Y/m-d]",
                "E_date" => "optional|is_date[d/m/Y]",
                "F_date" => "optional|is_date[Y-m]",
                "G_date" => "optional|is_date[d/m]",
                "H_date" => "optional|is_date[d]",
                "I_date" => "optional|is_date[m]",
                "J_date" => "optional|is_date[Y]",
            ],
        ];

        $cases = [
            "Valid_A_date_1" => [
                "data" => [
                    "A_date" => '2024-04-23',
                ]
            ],
            "Valid_B_date_1" => [
                "data" => [
                    "B_date" => '2024-04-23',
                ]
            ],
            "Valid_C_date_1" => [
                "data" => [
                    "C_date" => '2024/04/23',
                ]
            ],
            "Valid_D_date_1" => [
                "data" => [
                    "D_date" => '2024/04-23',
                ]
            ],
            "Valid_E_date_1" => [
                "data" => [
                    "E_date" => '23/04/2024',
                ]
            ],
            "Valid_F_date_1" => [
                "data" => [
                    "F_date" => '2024-04',
                ]
            ],
            "Valid_G_date_1" => [
                "data" => [
                    "G_date" => '23/04',
                ]
            ],
            "Valid_H_date_1" => [
                "data" => [
                    "H_date" => '23',
                ]
            ],
            "Valid_I_date_1" => [
                "data" => [
                    "I_date" => '04',
                ]
            ],
            "Valid_J_date_1" => [
                "data" => [
                    "J_date" => '2024',
                ]
            ],

            /**
             * Invalid cases
             */
            "Invalid_A_date_1" => [
                "data" => [
                    "A_date" => "12345678",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_A_date_2" => [
                "data" => [
                    "A_date" => "23/04/2024",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_A_date_3" => [
                "data" => [
                    "A_date" => "2024-04-50",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_A_date_4" => [
                "data" => [
                    "A_date" => "2024/04/23",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_B_date_1" => [
                "data" => [
                    "B_date" => "2024-04-50",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_B_date_2" => [
                "data" => [
                    "B_date" => "2024/04/23",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_C_date_1" => [
                "data" => [
                    "C_date" => "2024/04/50",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date in format Y/m/d"]
            ],
            "Invalid_C_date_2" => [
                "data" => [
                    "C_date" => "2024/04-23",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date in format Y/m/d"]
            ],
            "Invalid_D_date_1" => [
                "data" => [
                    "D_date" => "2024/04-50",
                ],
                "expected_msg" => ["D_date" => "D_date must be a valid date in format Y/m-d"]
            ],
            "Invalid_D_date_2" => [
                "data" => [
                    "D_date" => "2024-04-23",
                ],
                "expected_msg" => ["D_date" => "D_date must be a valid date in format Y/m-d"]
            ],
            "Invalid_E_date_1" => [
                "data" => [
                    "E_date" => "50/04/2024",
                ],
                "expected_msg" => ["E_date" => "E_date must be a valid date in format d/m/Y"]
            ],
            "Invalid_E_date_2" => [
                "data" => [
                    "E_date" => "2024-04-23",
                ],
                "expected_msg" => ["E_date" => "E_date must be a valid date in format d/m/Y"]
            ],
            "Invalid_F_date_1" => [
                "data" => [
                    "F_date" => "2024-13",
                ],
                "expected_msg" => ["F_date" => "F_date must be a valid date in format Y-m"]
            ],
            "Invalid_F_date_2" => [
                "data" => [
                    "F_date" => "20240-04",
                ],
                "expected_msg" => ["F_date" => "F_date must be a valid date in format Y-m"]
            ],
            "Invalid_G_date_1" => [
                "data" => [
                    "G_date" => "23/13",
                ],
                "expected_msg" => ["G_date" => "G_date must be a valid date in format d/m"]
            ],
            "Invalid_G_date_2" => [
                "data" => [
                    "G_date" => "32/04",
                ],
                "expected_msg" => ["G_date" => "G_date must be a valid date in format d/m"]
            ],
            "Invalid_H_date_1" => [
                "data" => [
                    "H_date" => "32",
                ],
                "expected_msg" => ["H_date" => "H_date must be a valid date in format d"]
            ],
            "Invalid_H_date_2" => [
                "data" => [
                    "H_date" => "00",
                ],
                "expected_msg" => ["H_date" => "H_date must be a valid date in format d"]
            ],
            "Invalid_I_date_1" => [
                "data" => [
                    "I_date" => "13",
                ],
                "expected_msg" => ["I_date" => "I_date must be a valid date in format m"]
            ],
            "Invalid_I_date_2" => [
                "data" => [
                    "I_date" => "00",
                ],
                "expected_msg" => ["I_date" => "I_date must be a valid date in format m"]
            ],
            "Invalid_J_date_1" => [
                "data" => [
                    "J_date" => "12345",
                ],
                "expected_msg" => ["J_date" => "J_date must be a valid date in format Y"]
            ],
            "Invalid_J_date_2" => [
                "data" => [
                    "J_date" => "01234",
                ],
                "expected_msg" => ["J_date" => "J_date must be a valid date in format Y"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_date_equal()
    {
        $rules = [
            "symbol" => [
                "A_date" => "optional|date=[2024-04-23]",
                "B_date" => "optional|date=[2024-04-23,Y-m-d]",
                "C_date" => "optional|date=[2024-04-23,d/Y/m]",
                "D_date" => "optional|date=[2024-04-23 00:00:00,Y-m-d H:i:s]",      // date method is not recommended using time part H:i:s(00:00:00)
                "E_date" => "optional|date=[2024-04-23T00:00:00+08:00,RFC3339]",    // date method is not recommended using the format contains time part
                "A_exc" => "optional|date=[2024-04-50]",
                "C_exc" => "optional|date=[2024-13-23,d/Y/m]",
            ],
            "method" => [
                "A_date" => "optional|date_equal[2024-04-23]",
                "B_date" => "optional|date_equal[2024-04-23,Y-m-d]",
                "C_date" => "optional|date_equal[2024-04-23,d/Y/m]",
                "D_date" => "optional|date_equal[2024-04-23 00:00:00,Y-m-d H:i:s]",      // date method is not recommended using time part H:i:s(00:00:00)
                "E_date" => "optional|date_equal[2024-04-23T00:00:00+08:00,RFC3339]",    // date method is not recommended using the format contains time part
                "A_exc" => "optional|date_equal[2024-04-50]",
                "C_exc" => "optional|date_equal[2024-13-23,d/Y/m]",
            ]
        ];

        $cases = [
            "Valid_A_date_1" => [
                "data" => [
                    "A_date" => '2024-04-23',
                ]
            ],
            "Valid_B_date_1" => [
                "data" => [
                    "B_date" => '2024-04-23',
                ]
            ],
            "Valid_C_date_1" => [
                "data" => [
                    "C_date" => '23/2024/04',
                ]
            ],
            "Valid_D_date_1" => [
                "data" => [
                    "D_date" => '2024-04-23 00:00:00',
                ]
            ],
            "Valid_E_date_1" => [
                "data" => [
                    "E_date" => '2024-04-23T00:00:00+08:00',
                ]
            ],

            /**
             * Invalid cases
             */
            "Invalid_A_date_1" => [
                "data" => [
                    "A_date" => "12345678",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_A_date_2" => [
                "data" => [
                    "A_date" => "23/04/2024",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_A_date_3" => [
                "data" => [
                    "A_date" => "2024-04-50",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_A_date_4" => [
                "data" => [
                    "A_date" => "2023/04/23",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_A_date_5" => [
                "data" => [
                    "A_date" => "2024-05-01",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date and equal to 2024-04-23"]
            ],
            "Invalid_B_date_1" => [
                "data" => [
                    "B_date" => "2024/04/23",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_B_date_2" => [
                "data" => [
                    "B_date" => "2024-04-23 01:00:00",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_B_date_3" => [
                "data" => [
                    "B_date" => "2024-04-24",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date and equal to 2024-04-23"]
            ],
            "Invalid_C_date_1" => [
                "data" => [
                    "C_date" => "2024/04/23",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date in format d/Y/m"]
            ],
            "Invalid_C_date_2" => [
                "data" => [
                    "C_date" => "2024-04-23 01:00:00",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date in format d/Y/m"]
            ],
            "Invalid_C_date_3" => [
                "data" => [
                    "C_date" => "24/2024/04",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date and equal to 2024-04-23"]
            ],
            "Invalid_D_date_1" => [
                "data" => [
                    "D_date" => "2024-04-23 01:01:01",
                ],
                "expected_msg" => ["D_date" => 'D_date format Y-m-d H:i:s is not a valid date format']
            ],
            "Invalid_D_date_2" => [
                "data" => [
                    "D_date" => "2024-04-23",
                ],
                "expected_msg" => ["D_date" => 'D_date must be a valid date in format Y-m-d H:i:s']
            ],
            "Invalid_E_date_1" => [
                "data" => [
                    "E_date" => '2024-04-23T00:00:01+08:00',
                ],
                "expected_msg" => ["E_date" => 'E_date format RFC3339 is not a valid date format']
            ],
            "Invalid_E_date_2" => [
                "data" => [
                    "E_date" => '2024-04-23',
                ],
                "expected_msg" => ["E_date" => 'E_date must be a valid date in format RFC3339']
            ],

            /**
             * Exception cases
             */
            "Exception_A_exc" => [
                "data" => [
                    "A_exc" => "2024-04-23",
                ],
                "expected_msg" => '@field:A_exc, @method:date_equal - Parameter 2024-04-50 is not a valid date'
            ],
            "Exception_C_exc" => [
                "data" => [
                    "C_exc" => "23/2024/04",
                ],
                "expected_msg" => '@field:C_exc, @method:date_equal - Parameter 2024-13-23 is not a valid date'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_date_not_equal()
    {
        $rules = [
            "symbol" => [
                "A_date" => "optional|date!=[2024-04-23]",
                "A_exc" => "optional|date!=[2024-04-50]",
            ],
            "method" => [
                "A_date" => "optional|date_not_equal[2024-04-23]",
                "A_exc" => "optional|date_not_equal[2024-04-50]",
            ]
        ];

        $cases = [
            "Valid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-22",
                ]
            ],
            "Invalid_A_date_1" => [
                "data" => [
                    "A_date" => "123456789",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-04-23",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date and not equal to 2024-04-23"]
            ],
            "Invalid_A_date_3" => [
                "data" => [
                    "A_date" => "2024-04-23 00:00:00",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Exception_A_exc" => [
                "data" => [
                    "A_exc" => "2024-04-23",
                ],
                "expected_msg" => '@field:A_exc, @method:date_not_equal - Parameter 2024-04-50 is not a valid date'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_date_greater_than()
    {
        $rules = [
            "symbol" => [
                "A_date" => "optional|date>[2024-04-23]",
                "B_date" => "optional|date>[04/23/2024,m/d/Y]",
                "C_date" => "optional|date>[2024-04,Y-m]",
                "D_date" => "optional|date>[04/23,m/d]",
                "E_date" => "optional|date>[23,d]",
            ],
            "method" => [
                "A_date" => "optional|date_greater_than[2024-04-23]",
                "B_date" => "optional|date_greater_than[04/23/2024,m/d/Y]",
                "C_date" => "optional|date>[2024-04,Y-m]",
                "D_date" => "optional|date>[04/23,m/d]",
                "E_date" => "optional|date>[23,d]",
            ]
        ];

        $cases = [
            "Valid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-24",
                ]
            ],
            "Valid_B_date_1" => [
                "data" => [
                    "B_date" => "04/24/2024",
                ]
            ],
            "Valid_C_date_1" => [
                "data" => [
                    "C_date" => "2024-05",
                ]
            ],
            "Valid_C_date_2" => [
                "data" => [
                    "C_date" => "2025-01",
                ]
            ],
            "Valid_D_date_1" => [
                "data" => [
                    "D_date" => "04/24",
                ]
            ],
            "Valid_D_date_2" => [
                "data" => [
                    "D_date" => "05/01",
                ]
            ],
            "Valid_E_date_1" => [
                "data" => [
                    "E_date" => "24",
                ]
            ],
            "Valid_E_date_2" => [
                "data" => [
                    "E_date" => "31",
                ]
            ],
            "Invalid_A_date_1" => [
                "data" => [
                    "A_date" => "2024/04/23",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-04-23",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date and greater than 2024-04-23"]
            ],
            "Invalid_B_date_1" => [
                "data" => [
                    "B_date" => "2024-04-23",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date in format m/d/Y"]
            ],
            "Invalid_B_date_2" => [
                "data" => [
                    "B_date" => "04/23/2024",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date and greater than 04/23/2024"]
            ],
            "Invalid_C_date_1" => [
                "data" => [
                    "C_date" => "2024-13",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date in format Y-m"]
            ],
            "Invalid_C_date_2" => [
                "data" => [
                    "C_date" => "2024-04",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date and greater than 2024-04"]
            ],
            "Invalid_C_date_3" => [
                "data" => [
                    "C_date" => "2023-12",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date and greater than 2024-04"]
            ],
            "Invalid_D_date_1" => [
                "data" => [
                    "D_date" => "13/23",
                ],
                "expected_msg" => ["D_date" => "D_date must be a valid date in format m/d"]
            ],
            "Invalid_D_date_2" => [
                "data" => [
                    "D_date" => "04/23",
                ],
                "expected_msg" => ["D_date" => "D_date must be a valid date and greater than 04/23"]
            ],
            "Invalid_D_date_3" => [
                "data" => [
                    "D_date" => "03/30",
                ],
                "expected_msg" => ["D_date" => "D_date must be a valid date and greater than 04/23"]
            ],
            "Invalid_E_date_1" => [
                "data" => [
                    "E_date" => "32",
                ],
                "expected_msg" => ["E_date" => "E_date must be a valid date in format d"]
            ],
            "Invalid_E_date_2" => [
                "data" => [
                    "E_date" => "23",
                ],
                "expected_msg" => ["E_date" => "E_date must be a valid date and greater than 23"]
            ],
            "Invalid_E_date_3" => [
                "data" => [
                    "E_date" => "01",
                ],
                "expected_msg" => ["E_date" => "E_date must be a valid date and greater than 23"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_date_greater_equal()
    {
        $rules = [
            "symbol" => [
                "A_date" => "optional|date>=[2024-04-23]",
                "B_date" => "optional|date>=[04/23/2024,m/d/Y]",
            ],
            "method" => [
                "A_date" => "optional|date_greater_equal[2024-04-23]",
                "B_date" => "optional|date_greater_equal[04/23/2024,m/d/Y]",
            ]
        ];

        $cases = [
            "Valid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-23",
                ]
            ],
            "Valid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-04-24",
                ]
            ],
            "Valid_B_date_1" => [
                "data" => [
                    "B_date" => "04/23/2024",
                ]
            ],
            "Valid_B_date_2" => [
                "data" => [
                    "B_date" => "04/24/2024",
                ]
            ],
            "Invalid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-22 23:59:59",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-04-22",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date and greater than or equal to 2024-04-23"]
            ],
            "Invalid_B_date_1" => [
                "data" => [
                    "B_date" => "2024-04-22",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date in format m/d/Y"]
            ],
            "Invalid_B_date_2" => [
                "data" => [
                    "B_date" => "04/22/2024",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date and greater than or equal to 04/23/2024"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_date_less_than()
    {
        $rules = [
            "symbol" => [
                "A_date" => "optional|date<[2024-04-23]",
                "B_date" => "optional|date<[04/23/2024,m/d/Y]",
            ],
            "method" => [
                "A_date" => "optional|date_less_than[2024-04-23]",
                "B_date" => "optional|date_less_than[04/23/2024,m/d/Y]",
            ]
        ];

        $cases = [
            "Valid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-22",
                ]
            ],
            "Valid_A_date_2" => [
                "data" => [
                    "A_date" => "1970-01-01",
                ]
            ],
            "Valid_B_date_1" => [
                "data" => [
                    "B_date" => "04/22/2024",
                ]
            ],
            "Invalid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-23 00:00:00",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-04-24",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date and less than 2024-04-23"]
            ],
            "Invalid_B_date_1" => [
                "data" => [
                    "B_date" => "2024-04-23",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date in format m/d/Y"]
            ],
            "Invalid_B_date_2" => [
                "data" => [
                    "B_date" => "04/23/2024",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date and less than 04/23/2024"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_date_less_equal()
    {
        $rules = [
            "symbol" => [
                "A_date" => "optional|date<=[2024-04-23]",
                "B_date" => "optional|date<=[04/23/2024,m/d/Y]",
            ],
            "method" => [
                "A_date" => "optional|date_less_equal[2024-04-23]",
                "B_date" => "optional|date_less_equal[04/23/2024,m/d/Y]",
            ]
        ];

        $cases = [
            "Valid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-23",
                ]
            ],
            "Valid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-04-22",
                ]
            ],
            "Valid_B_date_1" => [
                "data" => [
                    "B_date" => "04/22/2024",
                ]
            ],
            "Invalid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-23 00:00:01",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-04-24",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date and less than or equal to 2024-04-23"]
            ],
            "Invalid_B_date_1" => [
                "data" => [
                    "B_date" => "2024-04-23",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date in format m/d/Y"]
            ],
            "Invalid_B_date_2" => [
                "data" => [
                    "B_date" => "04/24/2024",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date and less than or equal to 04/23/2024"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_date_greater_less()
    {
        $rules = [
            "symbol" => [
                "A_date" => "optional|date><[2024-04-23,2024-05-01]",
                "B_date" => "optional|date><[2024-04-23,2024-05-01,m/d/Y]",
                "C_date" => "optional|date><[2024-04-23 01:01:01,2024-05-01 12:12:12,m/d/Y H:i:s]",
            ],
            "method" => [
                "A_date" => "optional|date_greater_less[2024-04-23,2024-05-01]",
                "B_date" => "optional|date_greater_less[2024-04-23,2024-05-01,m/d/Y]",
                "C_date" => "optional|date_greater_less[2024-04-23 01:01:01,2024-05-01 12:12:12,m/d/Y H:i:s]",
            ]
        ];

        $cases = [
            "Valid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-24",
                ]
            ],
            "Valid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-04-30",
                ]
            ],
            "Valid_B_date_1" => [
                "data" => [
                    "B_date" => "04/24/2024",
                ]
            ],
            "Valid_B_date_2" => [
                "data" => [
                    "B_date" => "04/30/2024",
                ]
            ],
            "Invalid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-23",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date and greater than 2024-04-23 and less than 2024-05-01"]
            ],
            "Invalid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-05-01",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date and greater than 2024-04-23 and less than 2024-05-01"]
            ],
            "Invalid_A_date_3" => [
                "data" => [
                    "A_date" => "2024-04-24 00:00:00",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_B_date_1" => [
                "data" => [
                    "B_date" => "04/23/2024",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date and greater than 2024-04-23 and less than 2024-05-01"]
            ],
            "Invalid_B_date_2" => [
                "data" => [
                    "B_date" => "05/01/2024",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date and greater than 2024-04-23 and less than 2024-05-01"]
            ],
            "Invalid_B_date_3" => [
                "data" => [
                    "B_date" => "04/24/2024 00:00:00",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date in format m/d/Y"]
            ],
            "Invalid_C_date_1" => [
                "data" => [
                    "C_date" => "04/23/2024 01:01:01",
                ],
                "expected_msg" => ["C_date" => "C_date format m/d/Y H:i:s is not a valid date format"]
            ],
            "Invalid_C_date_2" => [
                "data" => [
                    "C_date" => "05/01/2024",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date in format m/d/Y H:i:s"]
            ],
            "Invalid_C_date_3" => [
                "data" => [
                    "C_date" => "2024-04-23 01:01:01",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date in format m/d/Y H:i:s"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_date_greater_lessequal()
    {
        $rules = [
            "symbol" => [
                "A_date" => "optional|date><=[2024-04-23,2024-05-01]",
                "B_date" => "optional|date><=[2024-04-23,2024-05-01,m/d/Y]",
                "C_date" => "optional|date><=[2024-04-23 01:01:01,2024-05-01 12:12:12,m/d/Y H:i:s]",
            ],
            "method" => [
                "A_date" => "optional|date_greater_lessequal[2024-04-23,2024-05-01]",
                "B_date" => "optional|date_greater_lessequal[2024-04-23,2024-05-01,m/d/Y]",
                "C_date" => "optional|date_greater_lessequal[2024-04-23 01:01:01,2024-05-01 12:12:12,m/d/Y H:i:s]",
            ]
        ];

        $cases = [
            "Valid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-24",
                ]
            ],
            "Valid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-04-30",
                ]
            ],
            "Valid_A_date_3" => [
                "data" => [
                    "A_date" => "2024-05-01",
                ]
            ],
            "Valid_B_date_1" => [
                "data" => [
                    "B_date" => "04/24/2024",
                ]
            ],
            "Valid_B_date_2" => [
                "data" => [
                    "B_date" => "04/30/2024",
                ]
            ],
            "Valid_B_date_3" => [
                "data" => [
                    "B_date" => "05/01/2024",
                ]
            ],
            "Invalid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-23",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date and greater than 2024-04-23 and less than or equal to 2024-05-01"]
            ],
            "Invalid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-05-02",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date and greater than 2024-04-23 and less than or equal to 2024-05-01"]
            ],
            "Invalid_A_date_3" => [
                "data" => [
                    "A_date" => "2024-04-24 00:00:00",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_B_date_1" => [
                "data" => [
                    "B_date" => "04/23/2024",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date and greater than 2024-04-23 and less than or equal to 2024-05-01"]
            ],
            "Invalid_B_date_2" => [
                "data" => [
                    "B_date" => "05/02/2024",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date and greater than 2024-04-23 and less than or equal to 2024-05-01"]
            ],
            "Invalid_B_date_3" => [
                "data" => [
                    "B_date" => "04/24/2024 00:00:00",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date in format m/d/Y"]
            ],
            "Invalid_C_date_1" => [
                "data" => [
                    "C_date" => "04/23/2024 01:01:01",
                ],
                "expected_msg" => ["C_date" => "C_date format m/d/Y H:i:s is not a valid date format"]
            ],
            "Invalid_C_date_2" => [
                "data" => [
                    "C_date" => "05/01/2024",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date in format m/d/Y H:i:s"]
            ],
            "Invalid_C_date_3" => [
                "data" => [
                    "C_date" => "2024-04-23 01:01:01",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date in format m/d/Y H:i:s"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_date_greaterequal_less()
    {
        $rules = [
            "symbol" => [
                "A_date" => "optional|date>=<[2024-04-23,2024-05-01]",
                "B_date" => "optional|date>=<[2024-04-23,2024-05-01,m/d/Y]",
                "C_date" => "optional|date>=<[2024-04-23 01:01:01,2024-05-01 12:12:12,m/d/Y H:i:s]",
            ],
            "method" => [
                "A_date" => "optional|date_greaterequal_less[2024-04-23,2024-05-01]",
                "B_date" => "optional|date_greaterequal_less[2024-04-23,2024-05-01,m/d/Y]",
                "C_date" => "optional|date_greaterequal_less[2024-04-23 01:01:01,2024-05-01 12:12:12,m/d/Y H:i:s]",
            ]
        ];

        $cases = [
            "Valid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-23",
                ]
            ],
            "Valid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-04-24",
                ]
            ],
            "Valid_A_date_3" => [
                "data" => [
                    "A_date" => "2024-04-30",
                ]
            ],
            "Valid_B_date_1" => [
                "data" => [
                    "B_date" => "04/23/2024",
                ]
            ],
            "Valid_B_date_2" => [
                "data" => [
                    "B_date" => "04/24/2024",
                ]
            ],
            "Valid_B_date_3" => [
                "data" => [
                    "B_date" => "04/30/2024",
                ]
            ],
            "Invalid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-22",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date and greater than or equal to 2024-04-23 and less than 2024-05-01"]
            ],
            "Invalid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-05-01",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date and greater than or equal to 2024-04-23 and less than 2024-05-01"]
            ],
            "Invalid_A_date_3" => [
                "data" => [
                    "A_date" => "2024-04-24 00:00:00",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_B_date_1" => [
                "data" => [
                    "B_date" => "04/22/2024",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date and greater than or equal to 2024-04-23 and less than 2024-05-01"]
            ],
            "Invalid_B_date_2" => [
                "data" => [
                    "B_date" => "05/01/2024",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date and greater than or equal to 2024-04-23 and less than 2024-05-01"]
            ],
            "Invalid_B_date_3" => [
                "data" => [
                    "B_date" => "04/24/2024 00:00:00",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date in format m/d/Y"]
            ],
            "Invalid_C_date_1" => [
                "data" => [
                    "C_date" => "04/23/2024 01:01:01",
                ],
                "expected_msg" => ["C_date" => "C_date format m/d/Y H:i:s is not a valid date format"]
            ],
            "Invalid_C_date_2" => [
                "data" => [
                    "C_date" => "05/01/2024",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date in format m/d/Y H:i:s"]
            ],
            "Invalid_C_date_3" => [
                "data" => [
                    "C_date" => "2024-04-23 01:01:01",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date in format m/d/Y H:i:s"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_date_between()
    {
        $rules = [
            "symbol" => [
                "A_date" => "optional|date>=<=[2024-04-23,2024-05-01]",
                "B_date" => "optional|date>=<=[2024-04-23,2024-05-01,m/d/Y]",
                "C_date" => "optional|date>=<=[2024-04-23 01:01:01,2024-05-01 12:12:12,m/d/Y H:i:s]",
                "D_date" => "optional|date>=<=[2024-04,2024-10,Y-m]",
                "E_date" => "optional|date>=<=[04/23,05/01,m/d]",
                "F_date" => "optional|date>=<=[04,10,m]",
            ],
            "method" => [
                "A_date" => "optional|date_between[2024-04-23,2024-05-01]",
                "B_date" => "optional|date_between[2024-04-23,2024-05-01,m/d/Y]",
                "C_date" => "optional|date_between[2024-04-23 01:01:01,2024-05-01 12:12:12,m/d/Y H:i:s]",
                "D_date" => "optional|date_between[2024-04,2024-10,Y-m]",
                "E_date" => "optional|date_between[04/23,05/01,m/d]",
                "F_date" => "optional|date_between[04,10,m]",
            ]
        ];

        $cases = [
            "Valid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-23",
                ]
            ],
            "Valid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-04-24",
                ]
            ],
            "Valid_A_date_3" => [
                "data" => [
                    "A_date" => "2024-04-30",
                ]
            ],
            "Valid_A_date_4" => [
                "data" => [
                    "A_date" => "2024-05-01",
                ]
            ],
            "Valid_B_date_1" => [
                "data" => [
                    "B_date" => "04/23/2024",
                ]
            ],
            "Valid_B_date_2" => [
                "data" => [
                    "B_date" => "04/24/2024",
                ]
            ],
            "Valid_B_date_3" => [
                "data" => [
                    "B_date" => "04/30/2024",
                ]
            ],
            "Valid_B_date_4" => [
                "data" => [
                    "B_date" => "05/01/2024",
                ]
            ],
            "Valid_D_date_1" => [
                "data" => [
                    "D_date" => "2024-04",
                ]
            ],
            "Valid_D_date_2" => [
                "data" => [
                    "D_date" => "2024-05",
                ]
            ],
            "Valid_D_date_3" => [
                "data" => [
                    "D_date" => "2024-10",
                ]
            ],
            "Valid_D_date_4" => [
                "data" => [
                    "D_date" => "2024-09",
                ]
            ],
            "Valid_E_date_1" => [
                "data" => [
                    "E_date" => "04/23",
                ]
            ],
            "Valid_E_date_2" => [
                "data" => [
                    "E_date" => "04/24",
                ]
            ],
            "Valid_E_date_3" => [
                "data" => [
                    "E_date" => "05/01",
                ]
            ],
            "Valid_E_date_4" => [
                "data" => [
                    "E_date" => "04/30",
                ]
            ],
            "Valid_F_date_1" => [
                "data" => [
                    "F_date" => "04",
                ]
            ],
            "Valid_F_date_2" => [
                "data" => [
                    "F_date" => "05",
                ]
            ],
            "Valid_F_date_3" => [
                "data" => [
                    "F_date" => "10",
                ]
            ],
            "Valid_F_date_4" => [
                "data" => [
                    "F_date" => "09",
                ]
            ],
            "Invalid_A_date_1" => [
                "data" => [
                    "A_date" => "2024-04-22",
                ],
                "expected_msg" => ["A_date" => "A_date date must be between 2024-04-23 and 2024-05-01"]
            ],
            "Invalid_A_date_2" => [
                "data" => [
                    "A_date" => "2024-05-02",
                ],
                "expected_msg" => ["A_date" => "A_date date must be between 2024-04-23 and 2024-05-01"]
            ],
            "Invalid_A_date_3" => [
                "data" => [
                    "A_date" => "2024-04-24 00:00:00",
                ],
                "expected_msg" => ["A_date" => "A_date must be a valid date in format Y-m-d"]
            ],
            "Invalid_B_date_1" => [
                "data" => [
                    "B_date" => "04/22/2024",
                ],
                "expected_msg" => ["B_date" => "B_date date must be between 2024-04-23 and 2024-05-01"]
            ],
            "Invalid_B_date_2" => [
                "data" => [
                    "B_date" => "05/02/2024",
                ],
                "expected_msg" => ["B_date" => "B_date date must be between 2024-04-23 and 2024-05-01"]
            ],
            "Invalid_B_date_3" => [
                "data" => [
                    "B_date" => "04/24/2024 00:00:00",
                ],
                "expected_msg" => ["B_date" => "B_date must be a valid date in format m/d/Y"]
            ],
            "Invalid_C_date_1" => [
                "data" => [
                    "C_date" => "04/23/2024 01:01:01",
                ],
                "expected_msg" => ["C_date" => "C_date format m/d/Y H:i:s is not a valid date format"]
            ],
            "Invalid_C_date_2" => [
                "data" => [
                    "C_date" => "05/01/2024",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date in format m/d/Y H:i:s"]
            ],
            "Invalid_C_date_3" => [
                "data" => [
                    "C_date" => "2024-04-23 01:01:01",
                ],
                "expected_msg" => ["C_date" => "C_date must be a valid date in format m/d/Y H:i:s"]
            ],
            "Invalid_D_date_1" => [
                "data" => [
                    "D_date" => "2024-13",
                ],
                "expected_msg" => ["D_date" => "D_date must be a valid date in format Y-m"]
            ],
            "Invalid_D_date_2" => [
                "data" => [
                    "D_date" => "2024-03",
                ],
                "expected_msg" => ["D_date" => "D_date date must be between 2024-04 and 2024-10"]
            ],
            "Invalid_D_date_3" => [
                "data" => [
                    "D_date" => "2024-11",
                ],
                "expected_msg" => ["D_date" => "D_date date must be between 2024-04 and 2024-10"]
            ],
            "Invalid_E_date_1" => [
                "data" => [
                    "E_date" => "13/23",
                ],
                "expected_msg" => ["E_date" => "E_date must be a valid date in format m/d"]
            ],
            "Invalid_E_date_2" => [
                "data" => [
                    "E_date" => "04/22",
                ],
                "expected_msg" => ["E_date" => "E_date date must be between 04/23 and 05/01"]
            ],
            "Invalid_E_date_3" => [
                "data" => [
                    "E_date" => "03/30",
                ],
                "expected_msg" => ["E_date" => "E_date date must be between 04/23 and 05/01"]
            ],
            "Invalid_E_date_4" => [
                "data" => [
                    "E_date" => "05/02",
                ],
                "expected_msg" => ["E_date" => "E_date date must be between 04/23 and 05/01"]
            ],
            "Invalid_E_date_5" => [
                "data" => [
                    "E_date" => "06/01",
                ],
                "expected_msg" => ["E_date" => "E_date date must be between 04/23 and 05/01"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_time()
    {
        $rules = [
            "symbol" => [
                "A_time" => "optional|time",
                "B_time" => "optional|time[H_i_s]",
                "C_time" => "optional|time[H:i]",
                "D_time" => "optional|time[i:s]",
                "E_time" => "optional|time[s]",
                "A_wrong" => "optional|time[Y-m-d H:i:s]",
            ],
            "method" => [
                "A_time" => "optional|is_time",
                "B_time" => "optional|is_time[H_i_s]",
                "C_time" => "optional|is_time[H:i]",
                "D_time" => "optional|is_time[i:s]",
                "E_time" => "optional|is_time[s]",
                "A_wrong" => "optional|is_time[Y-m-d H:i:s]",
            ],
        ];

        $cases = [
            "Valid_A_time_1" => [
                "data" => [
                    "A_time" => "12:00:00",
                ]
            ],
            "Valid_B_time_1" => [
                "data" => [
                    "B_time" => "12_00_00",
                ]
            ],
            "Valid_C_time_1" => [
                "data" => [
                    "C_time" => "00:00",
                ]
            ],
            "Valid_C_time_1" => [
                "data" => [
                    "C_time" => "23:59",
                ]
            ],
            "Valid_D_time_1" => [
                "data" => [
                    "D_time" => "00:00",
                ]
            ],
            "Valid_D_time_1" => [
                "data" => [
                    "D_time" => "59:59",
                ]
            ],
            "Valid_E_time_1" => [
                "data" => [
                    "E_time" => "01",
                ]
            ],
            "Valid_E_time_2" => [
                "data" => [
                    "E_time" => "59",
                ]
            ],

            /**
             * Invalid cases
             */
            "Invalid_A_time_1" => [
                "data" => [
                    "A_time" => "12345678",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_2" => [
                "data" => [
                    "A_time" => "2024-04-23 12:00:00",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_3" => [
                "data" => [
                    "A_time" => "12:00:60",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_B_time_1" => [
                "data" => [
                    "B_time" => "00:00:00",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format H_i_s"]
            ],
            "Invalid_B_time_2" => [
                "data" => [
                    "B_time" => "12_00_60",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format H_i_s"]
            ],
            "Invalid_C_time_1" => [
                "data" => [
                    "C_time" => "12:00:00",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time in format H:i"]
            ],
            "Invalid_C_time_2" => [
                "data" => [
                    "C_time" => "24:00",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time in format H:i"]
            ],
            "Invalid_C_time_3" => [
                "data" => [
                    "C_time" => "23:60",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time in format H:i"]
            ],
            "Invalid_D_time_1" => [
                "data" => [
                    "D_time" => "12:00:00",
                ],
                "expected_msg" => ["D_time" => "D_time must be a valid time in format i:s"]
            ],
            "Invalid_D_time_2" => [
                "data" => [
                    "D_time" => "60:00",
                ],
                "expected_msg" => ["D_time" => "D_time must be a valid time in format i:s"]
            ],
            "Invalid_D_time_3" => [
                "data" => [
                    "D_time" => "59:60",
                ],
                "expected_msg" => ["D_time" => "D_time must be a valid time in format i:s"]
            ],
            "Invalid_E_time_1" => [
                "data" => [
                    "E_time" => "0",
                ],
                "expected_msg" => ["E_time" => "E_time must be a valid time in format s"]
            ],
            "Invalid_E_time_2" => [
                "data" => [
                    "E_time" => "60",
                ],
                "expected_msg" => ["E_time" => "E_time must be a valid time in format s"]
            ],

            "Invalid_A_wrong_1" => [
                "data" => [
                    "A_wrong" => "2024-04-23 12:00:00",
                ],
                "expected_msg" => ["A_wrong" => "A_wrong format Y-m-d H:i:s is not a valid time format"]
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_time_equal()
    {
        $rules = [
            "symbol" => [
                "A_time" => "optional|time=[01:01:01]",
                "B_time" => "optional|time=[01:01:00,H:i:s]",
                "C_time" => "optional|time=[01:01,H:i]",
                "A_exc" => "optional|time=[01:01:60]",
                "C_exc" => "optional|time=['0160',H:i]",
            ],
            "method" => [
                "A_time" => "optional|time_equal[01:01:01]",
                "B_time" => "optional|time_equal[01:01:00,H:i:s]",
                "C_time" => "optional|time_equal[01:01,H:i]",
                "A_exc" => "optional|time_equal[01:01:60]",
                "C_exc" => "optional|time_equal['0160',H:i]",
            ]
        ];

        $cases = [
            "Valid_A_time_1" => [
                "data" => [
                    "A_time" => '01:01:01',
                ]
            ],
            "Valid_B_time_1" => [
                "data" => [
                    "B_time" => '01:01:00',
                ]
            ],
            "Valid_C_time_1" => [
                "data" => [
                    "C_time" => '01:01',
                ]
            ],

            /**
             * Invalid cases
             */
            "Invalid_A_time_1" => [
                "data" => [
                    "A_time" => "010101",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_2" => [
                "data" => [
                    "A_time" => "01_01_01",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_3" => [
                "data" => [
                    "A_time" => "01:01:60",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_4" => [
                "data" => [
                    "A_time" => "01:60:01",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_5" => [
                "data" => [
                    "A_time" => "12:12:12",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and equal to 01:01:01"]
            ],
            "Invalid_B_time_1" => [
                "data" => [
                    "B_time" => "010101",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format H:i:s"]
            ],
            "Invalid_B_time_2" => [
                "data" => [
                    "B_time" => "01_01_01",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format H:i:s"]
            ],
            "Invalid_B_time_3" => [
                "data" => [
                    "B_time" => "01:01:60",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format H:i:s"]
            ],
            "Invalid_B_time_4" => [
                "data" => [
                    "B_time" => "01:01",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format H:i:s"]
            ],
            "Invalid_B_time_5" => [
                "data" => [
                    "B_time" => "12:12:12",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and equal to 01:01:00"]
            ],
            "Invalid_C_time_1" => [
                "data" => [
                    "C_time" => "01:01:00",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time in format H:i"]
            ],
            "Invalid_C_time_2" => [
                "data" => [
                    "C_time" => "01:60",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time in format H:i"]
            ],
            "Invalid_C_time_3" => [
                "data" => [
                    "C_time" => "01:00",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and equal to 01:01"]
            ],

            /**
             * Exception cases
             */
            "Exception_A_exc" => [
                "data" => [
                    "A_exc" => "01:01:01",
                ],
                "expected_msg" => '@field:A_exc, @method:time_equal - Parameter 01:01:60 is not a valid time'
            ],
            "Exception_C_exc" => [
                "data" => [
                    "C_exc" => "01:01",
                ],
                "expected_msg" => '@field:C_exc, @method:time_equal - Parameter 0160 is not a valid time with format H:i'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_time_not_equal()
    {
        $rules = [
            "symbol" => [
                "A_time" => "optional|time!=[01:01:01]",
                "B_time" => "optional|time!=[01:01,H:i]",
                "A_exc" => "optional|time!=[01:01:60]",
            ],
            "method" => [
                "A_time" => "optional|time_not_equal[01:01:01]",
                "B_time" => "optional|time_not_equal[01:01,H:i]",
                "A_exc" => "optional|time_not_equal[01:01:60]",
            ]
        ];

        $cases = [
            "Valid_A_time_1" => [
                "data" => [
                    "A_time" => "01:01:00",
                ]
            ],
            "Valid_B_time_1" => [
                "data" => [
                    "B_time" => "01:02",
                ]
            ],
            "Invalid_A_time_1" => [
                "data" => [
                    "A_time" => "01:01",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_2" => [
                "data" => [
                    "A_time" => "01:01:60",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_3" => [
                "data" => [
                    "A_time" => "01:01:01",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and not equal to 01:01:01"]
            ],
            "Invalid_B_time_1" => [
                "data" => [
                    "B_time" => "01:01:01",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format H:i"]
            ],
            "Invalid_B_time_2" => [
                "data" => [
                    "B_time" => "01:01:60",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format H:i"]
            ],
            "Invalid_B_time_3" => [
                "data" => [
                    "B_time" => "01:01",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and not equal to 01:01"]
            ],
            "Exception_A_exc" => [
                "data" => [
                    "A_exc" => "01:01:01",
                ],
                "expected_msg" => '@field:A_exc, @method:time_not_equal - Parameter 01:01:60 is not a valid time'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_time_greater_than()
    {
        $rules = [
            "symbol" => [
                "A_time" => "optional|time>[01:01:00]",
                "B_time" => "optional|time>[01:01,H:i]",
                "C_time" => "optional|time>[01,H]",
                "A_exc" => "optional|time>[01:01:60]",
            ],
            "method" => [
                "A_time" => "optional|time_greater_than[01:01:00]",
                "B_time" => "optional|time_greater_than[01:01,H:i]",
                "C_time" => "optional|time_greater_than[01,H]",
                "A_exc" => "optional|time_greater_than[01:01:60]",
            ]
        ];

        $cases = [
            "Valid_A_time_1" => [
                "data" => [
                    "A_time" => "01:01:01",
                ]
            ],
            "Valid_B_time_1" => [
                "data" => [
                    "B_time" => "01:02",
                ]
            ],
            "Valid_C_time_1" => [
                "data" => [
                    "C_time" => "02",
                ]
            ],
            "Invalid_A_time_1" => [
                "data" => [
                    "A_time" => "01:02",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_2" => [
                "data" => [
                    "A_time" => "01:00:59",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than 01:01:00"]
            ],
            "Invalid_B_time_1" => [
                "data" => [
                    "B_time" => "01:01:00",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format H:i"]
            ],
            "Invalid_B_time_2" => [
                "data" => [
                    "B_time" => "01:01",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than 01:01"]
            ],
            "Exception_A_exc" => [
                "data" => [
                    "A_exc" => "01:01:01",
                ],
                "expected_msg" => '@field:A_exc, @method:time_greater_than - Parameter 01:01:60 is not a valid time'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_time_greater_equal()
    {
        $rules = [
            "symbol" => [
                "A_time" => "optional|time>=[01:01:00]",
                "B_time" => "optional|time>=[01:01,H:i]",
                "C_time" => "optional|time>=[01,H]",
                "A_exc" => "optional|time>=[01:01:60]",
            ],
            "method" => [
                "A_time" => "optional|time_greater_equal[01:01:00]",
                "B_time" => "optional|time_greater_equal[01:01,H:i]",
                "C_time" => "optional|time_greater_equal[01,H]",
                "A_exc" => "optional|time_greater_equal[01:01:60]",
            ]
        ];

        $cases = [
            "Valid_A_time_1" => [
                "data" => [
                    "A_time" => "01:01:00",
                ]
            ],
            "Valid_A_time_1" => [
                "data" => [
                    "A_time" => "01:01:01",
                ]
            ],
            "Valid_B_time_1" => [
                "data" => [
                    "B_time" => "01:01",
                ]
            ],
            "Valid_B_time_2" => [
                "data" => [
                    "B_time" => "01:02",
                ]
            ],
            "Valid_C_time_1" => [
                "data" => [
                    "C_time" => "01",
                ]
            ],
            "Valid_C_time_2" => [
                "data" => [
                    "C_time" => "02",
                ]
            ],
            "Invalid_A_time_1" => [
                "data" => [
                    "A_time" => "01:02",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_2" => [
                "data" => [
                    "A_time" => "01:00:59",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than or equal to 01:01:00"]
            ],
            "Invalid_A_time_2" => [
                "data" => [
                    "A_time" => "00:59:59",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than or equal to 01:01:00"]
            ],
            "Invalid_B_time_1" => [
                "data" => [
                    "B_time" => "01:01:00",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format H:i"]
            ],
            "Invalid_B_time_2" => [
                "data" => [
                    "B_time" => "01:00",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than or equal to 01:01"]
            ],
            "Invalid_B_time_3" => [
                "data" => [
                    "B_time" => "00:59",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than or equal to 01:01"]
            ],
            "Exception_A_exc" => [
                "data" => [
                    "A_exc" => "01:01:01",
                ],
                "expected_msg" => '@field:A_exc, @method:time_greater_equal - Parameter 01:01:60 is not a valid time'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_time_less_than()
    {
        $rules = [
            "symbol" => [
                "A_time" => "optional|time<[01:01:00]",
                "B_time" => "optional|time<[01:01,i:s]",
                "C_time" => "optional|time<['01',s]",
                "A_exc" => "optional|time<[01:01:60]",
            ],
            "method" => [
                "A_time" => "optional|time_less_than[01:01:00]",
                "B_time" => "optional|time_less_than[01:01,i:s]",
                "C_time" => "optional|time_less_than['01',s]",
                "A_exc" => "optional|time_less_than[01:01:60]",
            ]
        ];

        $cases = [
            "Valid_A_time_1" => [
                "data" => [
                    "A_time" => "01:00:59",
                ]
            ],
            "Valid_B_time_1" => [
                "data" => [
                    "B_time" => "01:00",
                ]
            ],
            "Valid_C_time_1" => [
                "data" => [
                    "C_time" => "00",
                ]
            ],
            "Invalid_A_time_1" => [
                "data" => [
                    "A_time" => "01:02",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_2" => [
                "data" => [
                    "A_time" => "02:00:00",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and less than 01:01:00"]
            ],
            "Invalid_B_time_1" => [
                "data" => [
                    "B_time" => "01:01:00",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format i:s"]
            ],
            "Invalid_B_time_2" => [
                "data" => [
                    "B_time" => "01:02",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and less than 01:01"]
            ],
            "Invalid_C_time_1" => [
                "data" => [
                    "C_time" => "01:01:00",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time in format s"]
            ],
            "Invalid_C_time_2" => [
                "data" => [
                    "C_time" => "01",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and less than 01"]
            ],
            "Exception_A_exc" => [
                "data" => [
                    "A_exc" => "01:01:01",
                ],
                "expected_msg" => '@field:A_exc, @method:time_less_than - Parameter 01:01:60 is not a valid time'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_time_less_equal()
    {
        $rules = [
            "symbol" => [
                "A_time" => "optional|time<=[01:01:00]",
                "B_time" => "optional|time<=[01:01,i:s]",
                "C_time" => "optional|time<=['01',s]",
                "A_exc" => "optional|time<=[01:01:60]",
            ],
            "method" => [
                "A_time" => "optional|time_less_equal[01:01:00]",
                "B_time" => "optional|time_less_equal[01:01,i:s]",
                "C_time" => "optional|time_less_equal['01',s]",
                "A_exc" => "optional|time_less_equal[01:01:60]",
            ]
        ];

        $cases = [
            "Valid_A_time_1" => [
                "data" => [
                    "A_time" => "01:00:59",
                ]
            ],
            "Valid_A_time_2" => [
                "data" => [
                    "A_time" => "01:01:00",
                ]
            ],
            "Valid_B_time_1" => [
                "data" => [
                    "B_time" => "01:00",
                ]
            ],
            "Valid_B_time_2" => [
                "data" => [
                    "B_time" => "01:01",
                ]
            ],
            "Valid_C_time_1" => [
                "data" => [
                    "C_time" => "00",
                ]
            ],
            "Valid_C_time_2" => [
                "data" => [
                    "C_time" => "01",
                ]
            ],
            "Invalid_A_time_1" => [
                "data" => [
                    "A_time" => "01:02",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_2" => [
                "data" => [
                    "A_time" => "02:00:00",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and less than or equal to 01:01:00"]
            ],
            "Invalid_A_time_3" => [
                "data" => [
                    "A_time" => "01:01:01",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and less than or equal to 01:01:00"]
            ],
            "Invalid_B_time_1" => [
                "data" => [
                    "B_time" => "01:01:00",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format i:s"]
            ],
            "Invalid_B_time_2" => [
                "data" => [
                    "B_time" => "01:02",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and less than or equal to 01:01"]
            ],
            "Invalid_C_time_1" => [
                "data" => [
                    "C_time" => "01:01:00",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time in format s"]
            ],
            "Invalid_C_time_2" => [
                "data" => [
                    "C_time" => "02",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and less than or equal to 01"]
            ],
            "Exception_A_exc" => [
                "data" => [
                    "A_exc" => "01:01:01",
                ],
                "expected_msg" => '@field:A_exc, @method:time_less_equal - Parameter 01:01:60 is not a valid time'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_time_greater_less()
    {
        $rules = [
            "symbol" => [
                "A_time" => "optional|time><[01:01:00,12:12:00]",
                "B_time" => "optional|time><[01:01,12:12,H:i]",
                "C_time" => "optional|time><['01',12,H]",
                "D_time" => "optional|time><[22:00:00,02:00:00]",
                "A_exc" => "optional|time><[01:60,60:00,H:i]",
                "B_exc" => "optional|time><[01:01,60:00,H:i]",
            ],
            "method" => [
                "A_time" => "optional|time_greater_less[01:01:00,12:12:00]",
                "B_time" => "optional|time_greater_less[01:01,12:12,H:i]",
                "C_time" => "optional|time_greater_less['01',12,H]",
                "D_time" => "optional|time_greater_less[22:00:00,02:00:00]",
                "A_exc" => "optional|time_greater_less[01:60,60:00,H:i]",
                "B_exc" => "optional|time_greater_less[01:01,60:00,H:i]",
            ]
        ];

        $cases = [
            "Valid_A_time_1" => [
                "data" => [
                    "A_time" => "01:01:01",
                ]
            ],
            "Valid_A_time_2" => [
                "data" => [
                    "A_time" => "12:11:59",
                ]
            ],
            "Valid_B_time_1" => [
                "data" => [
                    "B_time" => "01:02",
                ]
            ],
            "Valid_B_time_2" => [
                "data" => [
                    "B_time" => "11:59",
                ]
            ],
            "Valid_C_time_1" => [
                "data" => [
                    "C_time" => "02",
                ]
            ],
            "Valid_C_time_2" => [
                "data" => [
                    "C_time" => "11",
                ]
            ],
            "Valid_D_time_1" => [
                "data" => [
                    "D_time" => "22:00:01",
                ]
            ],
            "Valid_D_time_2" => [
                "data" => [
                    "D_time" => "23:59:59",
                ]
            ],
            "Valid_D_time_3" => [
                "data" => [
                    "D_time" => "00:00:00",
                ]
            ],
            "Valid_D_time_4" => [
                "data" => [
                    "D_time" => "01:59:59",
                ]
            ],
            "Invalid_A_time_1" => [
                "data" => [
                    "A_time" => "01:01:60",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_2" => [
                "data" => [
                    "A_time" => "01:01:00",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than 01:01:00 and less than 12:12:00"]
            ],
            "Invalid_A_time_3" => [
                "data" => [
                    "A_time" => "01:00:59",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than 01:01:00 and less than 12:12:00"]
            ],
            "Invalid_A_time_4" => [
                "data" => [
                    "A_time" => "12:12:00",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than 01:01:00 and less than 12:12:00"]
            ],
            "Invalid_A_time_5" => [
                "data" => [
                    "A_time" => "12:12:01",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than 01:01:00 and less than 12:12:00"]
            ],
            "Invalid_B_time_1" => [
                "data" => [
                    "B_time" => "01:60",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format H:i"]
            ],
            "Invalid_B_time_2" => [
                "data" => [
                    "B_time" => "01:01",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than 01:01 and less than 12:12"]
            ],
            "Invalid_B_time_3" => [
                "data" => [
                    "B_time" => "01:00",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than 01:01 and less than 12:12"]
            ],
            "Invalid_B_time_4" => [
                "data" => [
                    "B_time" => "12:12",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than 01:01 and less than 12:12"]
            ],
            "Invalid_B_time_5" => [
                "data" => [
                    "B_time" => "12:13",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than 01:01 and less than 12:12"]
            ],
            "Invalid_C_time_1" => [
                "data" => [
                    "C_time" => "24",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time in format H"]
            ],
            "Invalid_C_time_2" => [
                "data" => [
                    "C_time" => "01",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and greater than 01 and less than 12"]
            ],
            "Invalid_C_time_3" => [
                "data" => [
                    "C_time" => "00",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and greater than 01 and less than 12"]
            ],
            "Invalid_C_time_4" => [
                "data" => [
                    "C_time" => "12",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and greater than 01 and less than 12"]
            ],
            "Invalid_C_time_5" => [
                "data" => [
                    "C_time" => "13",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and greater than 01 and less than 12"]
            ],
            "Invalid_D_time_1" => [
                "data" => [
                    "D_time" => "22:00:00",
                ],
                "expected_msg" => ["D_time" => "D_time must be a valid time and greater than 22:00:00 and less than 02:00:00"]
            ],
            "Invalid_D_time_2" => [
                "data" => [
                    "D_time" => "02:00:00",
                ],
                "expected_msg" => ["D_time" => "D_time must be a valid time and greater than 22:00:00 and less than 02:00:00"]
            ],
            "Invalid_D_time_3" => [
                "data" => [
                    "D_time" => "21:00:00",
                ],
                "expected_msg" => ["D_time" => "D_time must be a valid time and greater than 22:00:00 and less than 02:00:00"]
            ],
            "Invalid_D_time_4" => [
                "data" => [
                    "D_time" => "03:00:00",
                ],
                "expected_msg" => ["D_time" => "D_time must be a valid time and greater than 22:00:00 and less than 02:00:00"]
            ],
            "Exception_A_exc" => [
                "data" => [
                    "A_exc" => "01:01",
                ],
                "expected_msg" => '@field:A_exc, @method:time_greater_less - Parameter 01:60 is not a valid time with format H:i'
            ],
            "Exception_B_exc" => [
                "data" => [
                    "B_exc" => "01:01",
                ],
                "expected_msg" => '@field:B_exc, @method:time_greater_less - Parameter 60:00 is not a valid time with format H:i'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_time_greater_lessequal()
    {
        $rules = [
            "symbol" => [
                "A_time" => "optional|time><=[01:01:00,12:12:00]",
                "B_time" => "optional|time><=[01:01,12:12,H:i]",
                "C_time" => "optional|time><=['01',12,H]",
                "D_time" => "optional|time><=[22:00:00,02:00:00]",
                "A_exc" => "optional|time><=[01:60,60:00,H:i]",
                "B_exc" => "optional|time><=[01:01,60:00,H:i]",
            ],
            "method" => [
                "A_time" => "optional|time_greater_lessequal[01:01:00,12:12:00]",
                "B_time" => "optional|time_greater_lessequal[01:01,12:12,H:i]",
                "C_time" => "optional|time_greater_lessequal['01',12,H]",
                "D_time" => "optional|time_greater_lessequal[22:00:00,02:00:00]",
                "A_exc" => "optional|time_greater_lessequal[01:60,60:00,H:i]",
                "B_exc" => "optional|time_greater_lessequal[01:01,60:00,H:i]",
            ]
        ];

        $cases = [
            "Valid_A_time_1" => [
                "data" => [
                    "A_time" => "01:01:01",
                ]
            ],
            "Valid_A_time_2" => [
                "data" => [
                    "A_time" => "12:11:59",
                ]
            ],
            "Valid_A_time_3" => [
                "data" => [
                    "A_time" => "12:12:00",
                ]
            ],
            "Valid_B_time_1" => [
                "data" => [
                    "B_time" => "01:02",
                ]
            ],
            "Valid_B_time_2" => [
                "data" => [
                    "B_time" => "12:11",
                ]
            ],
            "Valid_B_time_3" => [
                "data" => [
                    "B_time" => "12:12",
                ]
            ],
            "Valid_C_time_1" => [
                "data" => [
                    "C_time" => "02",
                ]
            ],
            "Valid_C_time_2" => [
                "data" => [
                    "C_time" => "11",
                ]
            ],
            "Valid_C_time_3" => [
                "data" => [
                    "C_time" => "12",
                ]
            ],
            "Valid_D_time_1" => [
                "data" => [
                    "D_time" => "22:00:01",
                ]
            ],
            "Valid_D_time_2" => [
                "data" => [
                    "D_time" => "23:59:59",
                ]
            ],
            "Valid_D_time_3" => [
                "data" => [
                    "D_time" => "00:00:00",
                ]
            ],
            "Valid_D_time_4" => [
                "data" => [
                    "D_time" => "02:00:00",
                ]
            ],
            "Invalid_A_time_1" => [
                "data" => [
                    "A_time" => "01:01:60",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_2" => [
                "data" => [
                    "A_time" => "01:01:00",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than 01:01:00 and less than or equal to 12:12:00"]
            ],
            "Invalid_A_time_3" => [
                "data" => [
                    "A_time" => "01:00:59",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than 01:01:00 and less than or equal to 12:12:00"]
            ],
            "Invalid_A_time_4" => [
                "data" => [
                    "A_time" => "12:12:01",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than 01:01:00 and less than or equal to 12:12:00"]
            ],
            "Invalid_A_time_5" => [
                "data" => [
                    "A_time" => "12:12:02",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than 01:01:00 and less than or equal to 12:12:00"]
            ],
            "Invalid_B_time_1" => [
                "data" => [
                    "B_time" => "01:60",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format H:i"]
            ],
            "Invalid_B_time_2" => [
                "data" => [
                    "B_time" => "01:01",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than 01:01 and less than or equal to 12:12"]
            ],
            "Invalid_B_time_3" => [
                "data" => [
                    "B_time" => "01:00",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than 01:01 and less than or equal to 12:12"]
            ],
            "Invalid_B_time_4" => [
                "data" => [
                    "B_time" => "12:13",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than 01:01 and less than or equal to 12:12"]
            ],
            "Invalid_B_time_5" => [
                "data" => [
                    "B_time" => "13:12",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than 01:01 and less than or equal to 12:12"]
            ],
            "Invalid_C_time_1" => [
                "data" => [
                    "C_time" => "24",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time in format H"]
            ],
            "Invalid_C_time_2" => [
                "data" => [
                    "C_time" => "01",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and greater than 01 and less than or equal to 12"]
            ],
            "Invalid_C_time_3" => [
                "data" => [
                    "C_time" => "00",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and greater than 01 and less than or equal to 12"]
            ],
            "Invalid_C_time_4" => [
                "data" => [
                    "C_time" => "13",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and greater than 01 and less than or equal to 12"]
            ],
            "Invalid_C_time_5" => [
                "data" => [
                    "C_time" => "14",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and greater than 01 and less than or equal to 12"]
            ],
            "Invalid_D_time_1" => [
                "data" => [
                    "D_time" => "22:00:00",
                ],
                "expected_msg" => ["D_time" => "D_time must be a valid time and greater than 22:00:00 and less than or equal to 02:00:00"]
            ],
            "Invalid_D_time_2" => [
                "data" => [
                    "D_time" => "03:00:00",
                ],
                "expected_msg" => ["D_time" => "D_time must be a valid time and greater than 22:00:00 and less than or equal to 02:00:00"]
            ],
            "Invalid_D_time_3" => [
                "data" => [
                    "D_time" => "21:59:59",
                ],
                "expected_msg" => ["D_time" => "D_time must be a valid time and greater than 22:00:00 and less than or equal to 02:00:00"]
            ],
            "Exception_A_exc" => [
                "data" => [
                    "A_exc" => "01:01",
                ],
                "expected_msg" => '@field:A_exc, @method:time_greater_lessequal - Parameter 01:60 is not a valid time with format H:i'
            ],
            "Exception_B_exc" => [
                "data" => [
                    "B_exc" => "01:01",
                ],
                "expected_msg" => '@field:B_exc, @method:time_greater_lessequal - Parameter 60:00 is not a valid time with format H:i'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_time_greaterequal_less()
    {
        $rules = [
            "symbol" => [
                "A_time" => "optional|time>=<[01:01:00,12:12:00]",
                "B_time" => "optional|time>=<[01:01,12:12,i:s]",
                "C_time" => "optional|time>=<['01',12,i]",
                "D_time" => "optional|time>=<[22:00:00,02:00:00]",
                "A_exc" => "optional|time>=<[01:60,60:00,i:s]",
                "B_exc" => "optional|time>=<[01:01,60:00,H:i]",
            ],
            "method" => [
                "A_time" => "optional|time_greaterequal_less[01:01:00,12:12:00]",
                "B_time" => "optional|time_greaterequal_less[01:01,12:12,i:s]",
                "C_time" => "optional|time_greaterequal_less['01',12,i]",
                "D_time" => "optional|time_greaterequal_less[22:00:00,02:00:00]",
                "A_exc" => "optional|time_greaterequal_less[01:60,60:00,i:s]",
                "B_exc" => "optional|time_greaterequal_less[01:01,60:00,H:i]",
            ]
        ];

        $cases = [
            "Valid_A_time_1" => [
                "data" => [
                    "A_time" => "01:01:01",
                ]
            ],
            "Valid_A_time_2" => [
                "data" => [
                    "A_time" => "01:01:00",
                ]
            ],
            "Valid_A_time_3" => [
                "data" => [
                    "A_time" => "12:11:59",
                ]
            ],
            "Valid_B_time_1" => [
                "data" => [
                    "B_time" => "01:02",
                ]
            ],
            "Valid_B_time_2" => [
                "data" => [
                    "B_time" => "01:01",
                ]
            ],
            "Valid_B_time_3" => [
                "data" => [
                    "B_time" => "12:11",
                ]
            ],
            "Valid_C_time_1" => [
                "data" => [
                    "C_time" => "02",
                ]
            ],
            "Valid_C_time_2" => [
                "data" => [
                    "C_time" => "01",
                ]
            ],
            "Valid_C_time_3" => [
                "data" => [
                    "C_time" => "11",
                ]
            ],
            "Valid_D_time_1" => [
                "data" => [
                    "D_time" => "22:00:00",
                ]
            ],
            "Valid_D_time_2" => [
                "data" => [
                    "D_time" => "23:59:59",
                ]
            ],
            "Valid_D_time_3" => [
                "data" => [
                    "D_time" => "00:00:00",
                ]
            ],
            "Valid_D_time_4" => [
                "data" => [
                    "D_time" => "01:59:59",
                ]
            ],
            "Invalid_A_time_1" => [
                "data" => [
                    "A_time" => "01:01:60",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_2" => [
                "data" => [
                    "A_time" => "01:00:59",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than or equal to 01:01:00 and less than 12:12:00"]
            ],
            "Invalid_A_time_3" => [
                "data" => [
                    "A_time" => "00:01:00",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than or equal to 01:01:00 and less than 12:12:00"]
            ],
            "Invalid_A_time_4" => [
                "data" => [
                    "A_time" => "12:12:01",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than or equal to 01:01:00 and less than 12:12:00"]
            ],
            "Invalid_A_time_5" => [
                "data" => [
                    "A_time" => "12:12:02",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time and greater than or equal to 01:01:00 and less than 12:12:00"]
            ],
            "Invalid_B_time_1" => [
                "data" => [
                    "B_time" => "01:60",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format i:s"]
            ],
            "Invalid_B_time_2" => [
                "data" => [
                    "B_time" => "01:00",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than or equal to 01:01 and less than 12:12"]
            ],
            "Invalid_B_time_3" => [
                "data" => [
                    "B_time" => "00:59",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than or equal to 01:01 and less than 12:12"]
            ],
            "Invalid_B_time_4" => [
                "data" => [
                    "B_time" => "12:13",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than or equal to 01:01 and less than 12:12"]
            ],
            "Invalid_B_time_5" => [
                "data" => [
                    "B_time" => "13:12",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time and greater than or equal to 01:01 and less than 12:12"]
            ],
            "Invalid_C_time_1" => [
                "data" => [
                    "C_time" => "60",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time in format i"]
            ],
            "Invalid_C_time_2" => [
                "data" => [
                    "C_time" => "00",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and greater than or equal to 01 and less than 12"]
            ],
            "Invalid_C_time_3" => [
                "data" => [
                    "C_time" => "12",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and greater than or equal to 01 and less than 12"]
            ],
            "Invalid_C_time_4" => [
                "data" => [
                    "C_time" => "13",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and greater than or equal to 01 and less than 12"]
            ],
            "Invalid_C_time_5" => [
                "data" => [
                    "C_time" => "14",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time and greater than or equal to 01 and less than 12"]
            ],
            "Invalid_D_time_1" => [
                "data" => [
                    "D_time" => "21:00:00",
                ],
                "expected_msg" => ["D_time" => "D_time must be a valid time and greater than or equal to 22:00:00 and less than 02:00:00"]
            ],
            "Invalid_D_time_2" => [
                "data" => [
                    "D_time" => "02:00:00",
                ],
                "expected_msg" => ["D_time" => "D_time must be a valid time and greater than or equal to 22:00:00 and less than 02:00:00"]
            ],
            "Invalid_D_time_2" => [
                "data" => [
                    "D_time" => "03:00:00",
                ],
                "expected_msg" => ["D_time" => "D_time must be a valid time and greater than or equal to 22:00:00 and less than 02:00:00"]
            ],
            "Exception_A_exc" => [
                "data" => [
                    "A_exc" => "01:01",
                ],
                "expected_msg" => '@field:A_exc, @method:time_greaterequal_less - Parameter 01:60 is not a valid time with format i:s'
            ],
            "Exception_B_exc" => [
                "data" => [
                    "B_exc" => "01:01",
                ],
                "expected_msg" => '@field:B_exc, @method:time_greaterequal_less - Parameter 60:00 is not a valid time with format H:i'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_time_between()
    {
        $rules = [
            "symbol" => [
                "A_time" => "optional|time>=<=[01:01:00,12:12:00]",
                "B_time" => "optional|time>=<=[01:01,12:12,i:s]",
                "C_time" => "optional|time>=<=['01',12,i]",
                "D_time" => "optional|time>=<=[22:00:00,02:00:00]",
                "A_exc" => "optional|time>=<=[01:60,60:00,i:s]",
                "B_exc" => "optional|time>=<=[01:01,60:00,H:i]",
            ],
            "method" => [
                "A_time" => "optional|time_between[01:01:00,12:12:00]",
                "B_time" => "optional|time_between[01:01,12:12,i:s]",
                "C_time" => "optional|time_between['01',12,i]",
                "D_time" => "optional|time_between[22:00:00,02:00:00]",
                "A_exc" => "optional|time_between[01:60,60:00,i:s]",
                "B_exc" => "optional|time_between[01:01,60:00,H:i]",
            ]
        ];

        $cases = [
            "Valid_A_time_1" => [
                "data" => [
                    "A_time" => "01:01:01",
                ]
            ],
            "Valid_A_time_2" => [
                "data" => [
                    "A_time" => "01:01:00",
                ]
            ],
            "Valid_A_time_3" => [
                "data" => [
                    "A_time" => "12:11:59",
                ]
            ],
            "Valid_A_time_4" => [
                "data" => [
                    "A_time" => "12:12:00",
                ]
            ],
            "Valid_B_time_1" => [
                "data" => [
                    "B_time" => "01:02",
                ]
            ],
            "Valid_B_time_2" => [
                "data" => [
                    "B_time" => "01:01",
                ]
            ],
            "Valid_B_time_3" => [
                "data" => [
                    "B_time" => "12:11",
                ]
            ],
            "Valid_B_time_4" => [
                "data" => [
                    "B_time" => "12:12",
                ]
            ],
            "Valid_C_time_1" => [
                "data" => [
                    "C_time" => "02",
                ]
            ],
            "Valid_C_time_2" => [
                "data" => [
                    "C_time" => "01",
                ]
            ],
            "Valid_C_time_3" => [
                "data" => [
                    "C_time" => "11",
                ]
            ],
            "Valid_C_time_4" => [
                "data" => [
                    "C_time" => "12",
                ]
            ],
            "Valid_D_time_1" => [
                "data" => [
                    "D_time" => "22:00:00",
                ]
            ],
            "Valid_D_time_2" => [
                "data" => [
                    "D_time" => "23:59:59",
                ]
            ],
            "Valid_D_time_3" => [
                "data" => [
                    "D_time" => "00:00:00",
                ]
            ],
            "Valid_D_time_4" => [
                "data" => [
                    "D_time" => "02:00:00",
                ]
            ],
            "Invalid_A_time_1" => [
                "data" => [
                    "A_time" => "01:01:60",
                ],
                "expected_msg" => ["A_time" => "A_time must be a valid time in format H:i:s"]
            ],
            "Invalid_A_time_2" => [
                "data" => [
                    "A_time" => "01:00:59",
                ],
                "expected_msg" => ["A_time" => "A_time time must be between 01:01:00 and 12:12:00"]
            ],
            "Invalid_A_time_3" => [
                "data" => [
                    "A_time" => "00:01:00",
                ],
                "expected_msg" => ["A_time" => "A_time time must be between 01:01:00 and 12:12:00"]
            ],
            "Invalid_A_time_4" => [
                "data" => [
                    "A_time" => "12:12:01",
                ],
                "expected_msg" => ["A_time" => "A_time time must be between 01:01:00 and 12:12:00"]
            ],
            "Invalid_A_time_5" => [
                "data" => [
                    "A_time" => "12:12:02",
                ],
                "expected_msg" => ["A_time" => "A_time time must be between 01:01:00 and 12:12:00"]
            ],
            "Invalid_B_time_1" => [
                "data" => [
                    "B_time" => "01:60",
                ],
                "expected_msg" => ["B_time" => "B_time must be a valid time in format i:s"]
            ],
            "Invalid_B_time_2" => [
                "data" => [
                    "B_time" => "01:00",
                ],
                "expected_msg" => ["B_time" => "B_time time must be between 01:01 and 12:12"]
            ],
            "Invalid_B_time_3" => [
                "data" => [
                    "B_time" => "00:59",
                ],
                "expected_msg" => ["B_time" => "B_time time must be between 01:01 and 12:12"]
            ],
            "Invalid_B_time_4" => [
                "data" => [
                    "B_time" => "12:13",
                ],
                "expected_msg" => ["B_time" => "B_time time must be between 01:01 and 12:12"]
            ],
            "Invalid_B_time_5" => [
                "data" => [
                    "B_time" => "13:12",
                ],
                "expected_msg" => ["B_time" => "B_time time must be between 01:01 and 12:12"]
            ],
            "Invalid_C_time_1" => [
                "data" => [
                    "C_time" => "60",
                ],
                "expected_msg" => ["C_time" => "C_time must be a valid time in format i"]
            ],
            "Invalid_C_time_2" => [
                "data" => [
                    "C_time" => "00",
                ],
                "expected_msg" => ["C_time" => "C_time time must be between 01 and 12"]
            ],
            "Invalid_C_time_3" => [
                "data" => [
                    "C_time" => "13",
                ],
                "expected_msg" => ["C_time" => "C_time time must be between 01 and 12"]
            ],
            "Invalid_C_time_4" => [
                "data" => [
                    "C_time" => "14",
                ],
                "expected_msg" => ["C_time" => "C_time time must be between 01 and 12"]
            ],
            "Exception_A_exc" => [
                "data" => [
                    "A_exc" => "01:01",
                ],
                "expected_msg" => '@field:A_exc, @method:time_between - Parameter 01:60 is not a valid time with format i:s'
            ],
            "Invalid_D_time_1" => [
                "data" => [
                    "D_time" => "21:00:00",
                ],
                "expected_msg" => ["D_time" => "D_time time must be between 22:00:00 and 02:00:00"]
            ],
            "Invalid_D_time_2" => [
                "data" => [
                    "D_time" => "03:00:00",
                ],
                "expected_msg" => ["D_time" => "D_time time must be between 22:00:00 and 02:00:00"]
            ],
            "Exception_B_exc" => [
                "data" => [
                    "B_exc" => "01:01",
                ],
                "expected_msg" => '@field:B_exc, @method:time_between - Parameter 60:00 is not a valid time with format H:i'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_datetime_between_by_relative_date_notation()
    {
        $rules = [
            "symbol" => [
                "A_datetime" => "optional|datetime>=<=[today, tomorrow]",
                "B_datetime" => "optional|datetime>=<=[-3 days, next week, Y-m-d H:i:s]",
                "C_datetime" => "optional|datetime>=<=[Tuesday, last day of next month, Y-m-d]",
                "A1_exc" => "optional|datetime>=<=[today1, tomorrow]",
                "A2_exc" => "optional|datetime>=<=[to-day, tomorrow]",
                "A3_exc" => "optional|datetime>=<=[todad, tomorrow]",
            ],
            "method" => [
                "A_datetime" => "optional|datetime_between[today, tomorrow]",
                "B_datetime" => "optional|datetime_between[-3 days, next week, Y-m-d H:i:s]",
                "C_datetime" => "optional|datetime_between[Tuesday, last day of next month, Y-m-d]",
                "A1_exc" => "optional|datetime_between[today1, tomorrow]",
                "A2_exc" => "optional|datetime_between[to-day, tomorrow]",
                "A3_exc" => "optional|datetime_between[todad, tomorrow]",
            ],
        ];

        // echo date('Y-m-d H:i:s', strtotime('next week')) . "\n";
        // echo date('Y-m-d H:i:s', strtotime('+7 days')) . "\n";die;

        $cases = [
            "Valid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => date('Y-m-d'),
                ]
            ],
            "Valid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => date('Y-m-d', strtotime('+1 day')),
                ]
            ],
            "Valid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => date('Y-m-d H:i:s', strtotime('-3 days')),
                ]
            ],
            "Valid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => date('Y-m-d H:i:s', strtotime('next week')),
                ]
            ],
            "Valid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => date('Y-m-d', strtotime('Tuesday')),
                ]
            ],
            "Valid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => date('Y-m-10', strtotime('next month')),
                ]
            ],

            /**
             * Invalid cases
             */
            "Invalid_A_datetime_1" => [
                "data" => [
                    "A_datetime" => date('Y-m-d', strtotime('-1 day')),
                ],
                "expected_msg" => ["A_datetime" => "A_datetime datetime must be between today and tomorrow"]
            ],
            "Invalid_A_datetime_2" => [
                "data" => [
                    "A_datetime" => date('Y-m-d', strtotime('+2 day')),
                ],
                "expected_msg" => ["A_datetime" => "A_datetime datetime must be between today and tomorrow"]
            ],
            "Invalid_B_datetime_1" => [
                "data" => [
                    "B_datetime" => date('Y-m-d H:i:s', strtotime('-4 day')),
                ],
                "expected_msg" => ["B_datetime" => "B_datetime datetime must be between -3 days and next week"]
            ],
            "Invalid_B_datetime_2" => [
                "data" => [
                    "B_datetime" => date('Y-m-d H:i:s', strtotime('+8 days')),
                ],
                "expected_msg" => ["B_datetime" => "B_datetime datetime must be between -3 days and next week"]
            ],
            "Invalid_C_datetime_1" => [
                "data" => [
                    "C_datetime" => date('Y-m-d', strtotime('-4 day')),
                ],
                "expected_msg" => ["C_datetime" => "C_datetime datetime must be between Tuesday and last day of next month"]
            ],
            "Invalid_C_datetime_2" => [
                "data" => [
                    "C_datetime" => date('Y-m-01', strtotime('+2 months')),
                ],
                "expected_msg" => ["C_datetime" => "C_datetime datetime must be between Tuesday and last day of next month"]
            ],

            /**
             * Exception cases
             */
            "Exception_A1_exc" => [
                "data" => [
                    "A1_exc" => "2024-05-01",
                ],
                "expected_msg" => '@field:A1_exc, @method:datetime_between - Parameter today1 is not a valid datetime'
            ],
            "Exception_A2_exc" => [
                "data" => [
                    "A2_exc" => "2024-05-01",
                ],
                "expected_msg" => '@field:A2_exc, @method:datetime_between - Parameter to-day is not a valid datetime'
            ],
            "Exception_A3_exc" => [
                "data" => [
                    "A3_exc" => "2024-05-01",
                ],
                "expected_msg" => '@field:A3_exc, @method:datetime_between - Parameter todad is not a valid datetime'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }

    protected function test_method_time_between_by_relative_date_notation()
    {
        $rules = [
            "symbol" => [
                "A_time" => "optional|time>=<=[last hour, +3 hours]",
                "B_time" => "optional|time>=<=[last hour, +3 hours, H:i:s]",
                "C_time" => "optional|time>=<=[last hour, +15 hours, H:i:s]",
                "A1_exc" => "optional|time>=<=[last hour1, +3 hours]",
                "A2_exc" => "optional|time>=<=[last hour, add 3 hours]",
            ],
            "method" => [
                "A_time" => "optional|time_between[last hour, +3 hours]",
                "B_time" => "optional|time_between[last hour, +3 hours, H:i:s]",
                "C_time" => "optional|time_between[last hour, +15 hours, H:i:s]",
                "A1_exc" => "optional|time_between[last hour1, +3 hours]",
                "A2_exc" => "optional|time_between[last hour, add 3 hours]",
            ],
        ];

        $cases = [
            "Valid_A_time_1" => [
                "data" => [
                    "A_time" => date('H:i:s'),
                ]
            ],
            "Valid_A_time_2" => [
                "data" => [
                    "A_time" => date('H:i:s', strtotime('+3 hours')),
                ]
            ],
            "Valid_B_time_1" => [
                "data" => [
                    "B_time" => date('H:i:s'),
                ]
            ],
            "Valid_B_time_2" => [
                "data" => [
                    "B_time" => date('H:i:s', strtotime('+3 hours')),
                ]
            ],
            "Valid_C_time_1" => [
                "data" => [
                    "C_time" => date('H:i:s', strtotime('-1 hour')),
                ]
            ],
            "Valid_C_time_2" => [
                "data" => [
                    "C_time" => date('H:i:s', strtotime('+10 hour')),
                ]
            ],
            "Valid_C_time_3" => [
                "data" => [
                    "C_time" => date('H:i:s', strtotime('+15 hour')),
                ]
            ],

            /**
             * Invalid cases
             */
            "Invalid_A_time_1" => [
                "data" => [
                    "A_time" => date('H:i:s', strtotime('-2 hours')),
                ],
                "expected_msg" => ["A_time" => "A_time time must be between last hour and +3 hours"]
            ],
            "Invalid_A_time_2" => [
                "data" => [
                    "A_time" => date('H:i:s', strtotime('-4 hours')),
                ],
                "expected_msg" => ["A_time" => "A_time time must be between last hour and +3 hours"]
            ],
            "Invalid_B_time_1" => [
                "data" => [
                    "B_time" => date('H:i:s', strtotime('-2 hours')),
                ],
                "expected_msg" => ["B_time" => "B_time time must be between last hour and +3 hours"]
            ],
            "Invalid_B_time_2" => [
                "data" => [
                    "B_time" => date('H:i:s', strtotime('-4 hours')),
                ],
                "expected_msg" => ["B_time" => "B_time time must be between last hour and +3 hours"]
            ],
            "Invalid_C_time_1" => [
                "data" => [
                    "C_time" => date('H:i:s', strtotime('-2 hours')),
                ],
                "expected_msg" => ["C_time" => "C_time time must be between last hour and +15 hours"]
            ],
            "Invalid_C_time_2" => [
                "data" => [
                    "C_time" => date('H:i:s', strtotime('+16 hours')),
                ],
                "expected_msg" => ["C_time" => "C_time time must be between last hour and +15 hours"]
            ],

            /**
             * Exception cases
             */
            "Exception_A1_exc" => [
                "data" => [
                    "A1_exc" => date('H:i:s'),
                ],
                "expected_msg" => '@field:A1_exc, @method:time_between - Notation last hour1 is invalid'
            ],
            "Exception_A2_exc" => [
                "data" => [
                    "A2_exc" => date('H:i:s'),
                ],
                "expected_msg" => '@field:A2_exc, @method:time_between - Notation add 3 hours is invalid'
            ],
        ];

        $extra = [
            "method_name" => __METHOD__,
        ];

        return $method_info = [
            "rules" => $rules,
            "cases" => $cases,
            "extra" => $extra
        ];
    }
}
";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";